[
  {
    "mr": "inform(classification[bonafide], edit_type[none])",
    "ref": [
      "Yes, GTCC-5, which a shap value of 0, was used to detect the sample as bonafide .",
      "The audio is not spoofed ? The audio is not spoofed ?",
      "The audio is spoofed ?",
      "Yes, GTCC-5, which a shap value of 0, was used to detect the sample as bonafide . The audio is not spoofed ?",
      "Yes, GTCC-5, which a shap value of 0, was used to detect the sample as bonafide .",
      "The audio is not spoofed ? The audio is not spoofed ?",
      "The audio is spoofed ?",
      "Yes, GTCC-5, which a shap value of 0, was used to detect the sample as bonafide . The audio is not spoofed ?",
      "Yes, GTCC-5, which a shap value of 0, was used to detect the sample as bonafide .",
      "The audio is not spoofed ? The audio is not spoofed ?",
      "The audio is not spoofed ?"
    ],
    "new_mr": "<inform> inform ( <classification> classification: [ bonafide ], <edit_type> edit type: [ none ]> )"
  },
  {
    "mr": "inform(interpreter[shap], important[LFCC-39], shap_value[0.6906])",
    "ref": [
      "  determined that the LFCC-39 feature was one of the more important features by assigning it a value of 0.6906 .",
      " 0.6906 determined that the LFCC-39 feature was one of the more important features by assigning it a value of 0.6906 .",
      "shap determined that the LFCC-39 feature was one of the more important features by assigning it a value of 0.6906 .  shap determined that the LFCC-39 feature was one of the more important features by assigning it a value of 0.6906 .",
      " shap determined that the shap feature was one of the more important features by assigning it a value of 0.6906 .",
      " shap determined that the LFCC-39 feature was one of the more important features by assigning it a value of 0. .",
      "Yes, GTCC-13, which a shap value of -1, was used to detect the sample as bonafide .",
      "Yes, GTCC-13, which a shap value of -1, was used to detect the sample as bonafide .  shap determined that the LFCC-39 feature was one of the more important features by assigning it a value of 0.6906 .",
      " shap determined that the LFCC-39 feature was one of the more important features by assigning it a value of shap .",
      " shap determined that the LFCC feature was one of the more important features by assigning it a value of 0.6906 .",
      "  determined that the LFCC-39 feature was one of the more important features by assigning it a value of 0.6906 .",
      " shap determined that the LFCC-39 feature was one of the more important features by assigning it a value of 0.6906 ."
    ],
    "new_mr": "<inform> inform ( <interpreter> interpreter: [ shap ], <important> important: [ LFCC-39 ], <shap_value> shap value: [ 0.6906 ]> )"
  },
  {
    "mr": "inform(response[yes], speaker_id[7], feature[PSRCC-1], interpreter[shap], shap_value[0.6359])",
    "ref": [
      "SHAP determined that RFCC-4, MFCC-0, LFCC-2, MFCC-5 had the highest impact on classification .  Yes, person 7 was detected by PSRCC-1 with a shap value of 0.6359 .",
      " Yes, person 7 was detected by PSRCC-1 with a shap value of  .",
      " Yes, person 7 was detected by  with a shap value of 0.6359 .",
      "Yes, person 7 was detected by PSRCC-1 with a shap value of 0.6359 .  Yes, person 7 was detected by PSRCC-1 with a shap value of 0.6359 .",
      "SHAP determined that RFCC-4, MFCC-0, LFCC-2, MFCC-5 had the highest impact on classification .",
      " Yes, person yes was detected by PSRCC-1 with a shap value of 0.6359 .",
      " Yes, person  was detected by PSRCC-1 with a shap value of 0.6359 .",
      " Yes, person 7 was detected by PSRCC-1 with a shap value of shap .",
      " Yes, person 7 was detected by 0.6359 with a shap value of 0.6359 .",
      " Yes, person 7 was detected by PSRCC-1 with a PSRCC-1 value of 0.6359 .",
      " Yes, person 7 was detected by PSRCC-1 with a shap value of 0.6359 ."
    ],
    "new_mr": "<inform> inform ( <response> response: [ yes ], <speaker_id> speaker id: [ 7 ], <feature> feature: [ PSRCC-1 ], <interpreter> interpreter: [ shap ], <shap_value> shap value: [ 0.6359 ]> )"
  },
  {
    "mr": "inform(response[Yes], interpreter[shap], important[LFCC-18], classification[replayed], shap_value[-0.607])",
    "ref": [
      " Yes, LFCC-18, which a shap value of replayed, was used to detect the sample as replayed .",
      " shap, LFCC-18, which a shap value of -0.607, was used to detect the sample as replayed .",
      " Yes, LFCC-18, which a  value of -0.607, was used to detect the sample as replayed .",
      "the audio sample had LFCC features extracted and LFCC-1 was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      "the audio sample had LFCC features extracted and LFCC-1 was determined to have a large impact on the CNN model that determined the sample to be bonafide .  Yes, LFCC-18, which a shap value of -0.607, was used to detect the sample as replayed .",
      " Yes, LFCC-18, which a shap value of -0.607, was used to detect the sample as  .",
      " Y, LFCC-18, which a shap value of -0.607, was used to detect the sample as replayed .",
      " Yes, LFCC-18, which a replayed value of -0.607, was used to detect the sample as replayed .",
      " Yes, which a shap value of -0.607, was used to detect the sample as replayed .",
      " Yes, L, which a shap value of -0.607, was used to detect the sample as replayed .",
      " Yes, LFCC-18, which a shap value of -0.607, was used to detect the sample as replayed ."
    ],
    "new_mr": "<inform> inform ( <response> response: [ Yes ], <interpreter> interpreter: [ shap ], <important> important: [ LFCC-18 ], <classification> classification: [ replayed ], <shap_value> shap value: [ -0.607 ]> )"
  },
  {
    "mr": "inform(speaker_id[1])",
    "ref": [
      " person  spoke the audio sample .",
      "the audio sample had LFCC features extracted and LFCC-43 was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      "the audio sample had LFCC features extracted and LFCC-43 was determined to have a large impact on the CNN model that determined the sample to be bonafide .  person 1 spoke the audio sample .",
      "person 1 spoke the audio sample .  person 1 spoke the audio sample .",
      " person  spoke the audio sample .",
      "the audio sample had LFCC features extracted and LFCC-43 was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      "the audio sample had LFCC features extracted and LFCC-43 was determined to have a large impact on the CNN model that determined the sample to be bonafide .  person 1 spoke the audio sample .",
      "person 1 spoke the audio sample .  person 1 spoke the audio sample .",
      " person  spoke the audio sample .",
      "the audio sample had LFCC features extracted and LFCC-43 was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      " person 1 spoke the audio sample ."
    ],
    "new_mr": "<inform> inform ( <speaker_id> speaker id: [ 1 ]> )"
  },
  {
    "mr": "inform(response[Yes], interpreter[shap], important[LFCC-56], classification[replayed], shap_value[0.256])",
    "ref": [
      "Yes, LFCC-56, which a shap value of 0.256, was used to detect the sample as replayed .  Yes, LFCC-56, which a shap value of 0.256, was used to detect the sample as replayed .",
      " Yes, LFCC-56, which a shap value of shap, was used to detect the sample as replayed .",
      " Yes, LFCC-56.256, was used to detect the sample as replayed .",
      " Yes, LFCC-56, which a shap value of 0.25, was used to detect the sample as replayed .",
      " Yes, LFCC-56, which a sha value of 0.256, was used to detect the sample as replayed .",
      " Yes, LFCC, which a shap value of 0.256, was used to detect the sample as replayed .",
      "Yes, LFCC-9, which a shap value of -0.3578, was used to detect the id of speaker 2 for the audio sample .  Yes, LFCC-56, which a shap value of 0.256, was used to detect the sample as replayed .",
      " Yes, shap, which a shap value of 0.256, was used to detect the sample as replayed .",
      " Yes, which a shap value of 0.256, was used to detect the sample as replayed .",
      "Yes, LFCC-9, which a shap value of -0.3578, was used to detect the id of speaker 2 for the audio sample .",
      " Yes, LFCC-56, which a shap value of 0.256, was used to detect the sample as replayed ."
    ],
    "new_mr": "<inform> inform ( <response> response: [ Yes ], <interpreter> interpreter: [ shap ], <important> important: [ LFCC-56 ], <classification> classification: [ replayed ], <shap_value> shap value: [ 0.256 ]> )"
  },
  {
    "mr": "inform(extracted[MSRCC], model[CNN], important[MSRCC-8], classification[bonafide])",
    "ref": [
      " the audio sample had MSRCC features extracted and M was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      " the audio sample had MSRCC features extracted and MSRCC-8 was determined to have a large impact on the bonafide model that determined the sample to be bonafide .",
      "This is a replayed and  re-recorded sample .",
      "This is a replayed and  re-recorded sample .  the audio sample had MSRCC features extracted and MSRCC-8 was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      " the audio sample had MSRCC features extracted and MSRCC-8 was determined to have a large impact on the CNN model that determined the sample to be CNN .",
      " the audio sample had MSRCC-8 features extracted and MSRCC-8-8 was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      " the audio sample had MS features extracted and MS-8 was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      " the audio sample had MSRCC features extracted and MSRCC was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      " the audio sample had MSRCC features extracted and MSRCC-8 was determined to have a large impact on the CNN model that determined the sample to be bo .",
      "the audio sample had MSRCC features extracted and MSRCC-8 was determined to have a large impact on the CNN model that determined the sample to be bonafide .  the audio sample had MSRCC features extracted and MSRCC-8 was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      " the audio sample had MSRCC features extracted and MSRCC-8 was determined to have a large impact on the CNN model that determined the sample to be bonafide ."
    ],
    "new_mr": "<inform> inform ( <extracted> extracted: [ MSRCC ], <model> model: [ CNN ], <important> important: [ MSRCC-8 ], <classification> classification: [ bonafide ]> )"
  },
  {
    "mr": "inform(extracted[LFCC], model[CNN], important[LFCC-53], classification[replayed])",
    "ref": [
      " the audio sample had LFCC features extracted and LFCC-53 was determined to have a large impact on the  model that determined the sample to be replayed .",
      "the audio sample had LFCC features extracted and LFCC-53 was determined to have a large impact on the CNN model that determined the sample to be replayed .  the audio sample had LFCC features extracted and LFCC-53 was determined to have a large impact on the CNN model that determined the sample to be replayed .",
      " the audio sample had LFCC features extracted and LFCC-53 was determined to have a large impact on the CNN model that determined the sample to be LFCC .",
      "No .  the audio sample had LFCC features extracted and LFCC-53 was determined to have a large impact on the CNN model that determined the sample to be replayed .",
      " the audio sample had LFCC-53 features extracted and LFCC-53-53 was determined to have a large impact on the CNN model that determined the sample to be replayed .",
      " the audio sample had LFCC features extracted and LFCC-53 was determined to have a large impact on the CNN model that determined the sample to be  .",
      " the audio sample had LFCC features extracted and L was determined to have a large impact on the CNN model that determined the sample to be replayed .",
      " the audio sample had LFCC features extracted and replayed was determined to have a large impact on the CNN model that determined the sample to be replayed .",
      " the audio sample had LF features extracted and LF-53 was determined to have a large impact on the CNN model that determined the sample to be replayed .",
      "No .",
      " the audio sample had LFCC features extracted and LFCC-53 was determined to have a large impact on the CNN model that determined the sample to be replayed ."
    ],
    "new_mr": "<inform> inform ( <extracted> extracted: [ LFCC ], <model> model: [ CNN ], <important> important: [ LFCC-53 ], <classification> classification: [ replayed ]> )"
  },
  {
    "mr": "inform(response[Yes], interpreter[shap], important[LFCC-0], classification[bonafide], shap_value[0.2774])",
    "ref": [
      " Y, LFCC-0, which a shap value of 0.2774, was used to detect the sample as bonafide .",
      " Yes, LFCC-0.2774, was used to detect the sample as bonafide .",
      " Yes, LFCC-0, which a shap value of 0.27, was used to detect the sample as bonafide .",
      "Yes, MFCC-3, which a shap value of -0.1314, was used to detect the sample as bonafide .  Yes, LFCC-0, which a shap value of 0.2774, was used to detect the sample as bonafide .",
      " LFCC-0, LFCC-0, which a shap value of 0.2774, was used to detect the sample as bonafide .",
      " Yes, LFCC-0, which a shap value of 0.2774.",
      " Yes, LFCC-0, which a shap value of Yes, was used to detect the sample as bonafide .",
      "Yes, LFCC-0, which a shap value of 0.2774, was used to detect the sample as bonafide .  Yes, LFCC-0, which a shap value of 0.2774, was used to detect the sample as bonafide .",
      " Yes, which a shap value of 0.2774, was used to detect the sample as bonafide .",
      " Yes, LFCC-0, which a sh value of 0.2774, was used to detect the sample as bonafide .",
      " Yes, LFCC-0, which a shap value of 0.2774, was used to detect the sample as bonafide ."
    ],
    "new_mr": "<inform> inform ( <response> response: [ Yes ], <interpreter> interpreter: [ shap ], <important> important: [ LFCC-0 ], <classification> classification: [ bonafide ], <shap_value> shap value: [ 0.2774 ]> )"
  },
  {
    "mr": "inform(classification[spoof], edit_type[computer])",
    "ref": [
      "It seems like a compu was used .",
      "It seems like a computer was used . It seems like a computer was used .",
      "It seems like a spoof was used .",
      "It appears the audio sample was converted .",
      "It appears the audio sample was converted . It seems like a computer was used .",
      "It seems like a compu was used .",
      "It seems like a computer was used . It seems like a computer was used .",
      "It seems like a spoof was used .",
      "It appears the audio sample was converted .",
      "It appears the audio sample was converted . It seems like a computer was used .",
      "It seems like a computer was used ."
    ],
    "new_mr": "<inform> inform ( <classification> classification: [ spoof ], <edit_type> edit type: [ computer ]> )"
  },
  {
    "mr": "inform(response[Yes], interpreter[shap], important[LFCC-29], classification[replayed], shap_value[0.9762])",
    "ref": [
      "Yes, MFCC-20, which a shap value of 0.0087, was used to detect the sample as bonafide .",
      " Yes, LFCC-29, which a shap value of 0.9762, was used to detect the sample as replaye .",
      " Yes, LFCC-29, which a shap value of , was used to detect the sample as replayed .",
      " Yes, LFCC-29, which a shap value of 0.9762, was used to detect the sample as Yes .",
      " Yes, LFCC-29, which a replayed value of 0.9762, was used to detect the sample as replayed .",
      " Yes, replayed, which a shap value of 0.9762, was used to detect the sample as replayed .",
      " Yes, LFCC-29, which a sh value of 0.9762, was used to detect the sample as replayed .",
      " Yes, LFCC-29, which a shap value of 0.9762.",
      " shap, LFCC-29, which a shap value of 0.9762, was used to detect the sample as replayed .",
      "Yes, LFCC-29, which a shap value of 0.9762, was used to detect the sample as replayed .  Yes, LFCC-29, which a shap value of 0.9762, was used to detect the sample as replayed .",
      " Yes, LFCC-29, which a shap value of 0.9762, was used to detect the sample as replayed ."
    ],
    "new_mr": "<inform> inform ( <response> response: [ Yes ], <interpreter> interpreter: [ shap ], <important> important: [ LFCC-29 ], <classification> classification: [ replayed ], <shap_value> shap value: [ 0.9762 ]> )"
  },
  {
    "mr": "inform(response[Yes], interpreter[shap], important[MFCC-7], classification[replayed], shap_value[-0.1884])",
    "ref": [
      " Yes, MFCC-7, which a shap value of Yes, was used to detect the sample as replayed .",
      " Ye, MFCC-7, which a shap value of -0.1884, was used to detect the sample as replayed .",
      " Yes.1884, was used to detect the sample as replayed .",
      " Yes, MFCC-7, which a s value of -0.1884, was used to detect the sample as replayed .",
      " Yes, MFCC-7, was used to detect the sample as replayed .",
      "Yes, MFCC-7, which a shap value of -0.1884, was used to detect the sample as replayed .  Yes, MFCC-7, which a shap value of -0.1884, was used to detect the sample as replayed .",
      "There is an unusually long pause at 37 seconds .",
      " shap, MFCC-7, which a shap value of -0.1884, was used to detect the sample as replayed .",
      " Yes, MFCC-7, which a shap value of -0.1884.",
      " Yes, replayed, which a shap value of -0.1884, was used to detect the sample as replayed .",
      " Yes, MFCC-7, which a shap value of -0.1884, was used to detect the sample as replayed ."
    ],
    "new_mr": "<inform> inform ( <response> response: [ Yes ], <interpreter> interpreter: [ shap ], <important> important: [ MFCC-7 ], <classification> classification: [ replayed ], <shap_value> shap value: [ -0.1884 ]> )"
  },
  {
    "mr": "inform(response[yes], feature[GTCC-2], determined[speaker_id])",
    "ref": [
      " yes.",
      " yes, yes was used to determine speaker id .",
      "yes, GTCC-2 was used to determine speaker id .  yes, GTCC-2 was used to determine speaker id .",
      "person 7 spoke the audio sample .",
      " speaker_id, GTCC-2 was used to determine speaker id .",
      " yes,  was used to determine speaker id .",
      "person 7 spoke the audio sample .  yes, GTCC-2 was used to determine speaker id .",
      " , GTCC-2 was used to determine speaker id .",
      " yes.",
      " yes, yes was used to determine speaker id .",
      " yes, GTCC-2 was used to determine speaker id ."
    ],
    "new_mr": "<inform> inform ( <response> response: [ yes ], <feature> feature: [ GTCC-2 ], <determined> determined: [ speaker_id ]> )"
  },
  {
    "mr": "inform(response[yes], speaker_id[6], feature[LFCC-54], interpreter[shap], shap_value[0.7811])",
    "ref": [
      " Yes, person 6 was detected by LFCC-54 with a yes value of 0.7811 .",
      " Yes, person 6 was detected by LFCC-54 with a shap value of yes .",
      " Yes, person 6 was detected by LFCC-54 with a shap value of 0.78 .",
      " Yes, person 6 was detected by 6 with a shap value of 0.7811 .",
      "Yes, person 6 was detected by LFCC-54 with a shap value of 0.7811 .  Yes, person 6 was detected by LFCC-54 with a shap value of 0.7811 .",
      " Yes, person 6 was detected by LFCC with a shap value of 0.7811 .",
      "There is more than one microphone signature on the recording .  Yes, person 6 was detected by LFCC-54 with a shap value of 0.7811 .",
      " Yes, person  was detected by LFCC-54 with a shap value of 0.7811 .",
      "There is more than one microphone signature on the recording .",
      " Yes, person 6 was detected by LFCC-54 with a  value of 0.7811 .",
      " Yes, person 6 was detected by LFCC-54 with a shap value of 0.7811 ."
    ],
    "new_mr": "<inform> inform ( <response> response: [ yes ], <speaker_id> speaker id: [ 6 ], <feature> feature: [ LFCC-54 ], <interpreter> interpreter: [ shap ], <shap_value> shap value: [ 0.7811 ]> )"
  },
  {
    "mr": "inform(classification[spoof], known_mic_signature[digital])",
    "ref": [
      "The recording device was digital . The recording device was digital .",
      "The recording device was d .  ",
      "Yes, person 6 was detected by LFCC-4 with a shap value of 0.0807 .",
      "The recording device was spoof .  ",
      "Yes, person 6 was detected by LFCC-4 with a shap value of 0.0807 . The recording device was digital .",
      "The recording device was digital . The recording device was digital .",
      "The recording device was d .  ",
      "Yes, person 6 was detected by LFCC-4 with a shap value of 0.0807 .",
      "The recording device was spoof .  ",
      "Yes, person 6 was detected by LFCC-4 with a shap value of 0.0807 . The recording device was digital .",
      "The recording device was digital .  "
    ],
    "new_mr": "<inform> inform ( <classification> classification: [ spoof ], <known_mic_signature> known mic signature: [ digital ]> )"
  },
  {
    "mr": "inform(interpreter[shap], important[GTCC-8], shap_value[0])",
    "ref": [
      " shap determined that the GTC feature was one of the more important features by assigning it a value of 0 .",
      " shap determined that the shap feature was one of the more important features by assigning it a value of 0 .",
      " sha determined that the GTCC-8 feature was one of the more important features by assigning it a value of 0 .",
      " 0 determined that the GTCC-8 feature was one of the more important features by assigning it a value of 0 .",
      " shap determined that the GTCC-8 feature was one of the more important features by assigning it a value of GTCC-8 .",
      " shap determined that the GTCC-8 feature was one of the more important features by assigning it a value of  .",
      "shap determined that the LFCC-30 feature was one of the more important features by assigning it a value of 0.7143 .",
      "shap determined that the LFCC-30 feature was one of the more important features by assigning it a value of 0.7143 .  shap determined that the GTCC-8 feature was one of the more important features by assigning it a value of 0 .",
      "shap determined that the GTCC-8 feature was one of the more important features by assigning it a value of 0 .  shap determined that the GTCC-8 feature was one of the more important features by assigning it a value of 0 .",
      " shap determined that the GTC feature was one of the more important features by assigning it a value of 0 .",
      " shap determined that the GTCC-8 feature was one of the more important features by assigning it a value of 0 ."
    ],
    "new_mr": "<inform> inform ( <interpreter> interpreter: [ shap ], <important> important: [ GTCC-8 ], <shap_value> shap value: [ 0 ]> )"
  },
  {
    "mr": "inform(response[yes], speaker_id[7], feature[PSRCC-12], interpreter[shap], shap_value[0.9752])",
    "ref": [
      " Yes, PSRCC-12, which a 0.9752 value of 0.9752, was used to detect the id of speaker 7 for the audio sample .",
      " Yes, PSRCC-12, which a shap value of 0.952, was used to detect the id of speaker  for the audio sample .",
      " Yes, PSRCC-12, which a shap value of 0.9752.",
      " Yes, PSRCC-12, which a shap value of 0.9, was used to detect the id of speaker 7 for the audio sample .",
      " Yes, PSRCC-12, was used to detect the id of speaker 7 for the audio sample .",
      " Yes, PSRC, which a shap value of 0.9752, was used to detect the id of speaker 7 for the audio sample .",
      "the audio sample had PSRCC features extracted and PSRCC-0 was determined to have a large impact on the CNN model that determined the sample to be bonafide .  Yes, PSRCC-12, which a shap value of 0.9752, was used to detect the id of speaker 7 for the audio sample .",
      " Yes, PSRCC-12, which a sh value of 0.9752, was used to detect the id of speaker 7 for the audio sample .",
      "the audio sample had PSRCC features extracted and PSRCC-0 was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      " Yes, PSRCC-12.9752, was used to detect the id of speaker 7 for the audio sample .",
      " Yes, PSRCC-12, which a shap value of 0.9752, was used to detect the id of speaker 7 for the audio sample ."
    ],
    "new_mr": "<inform> inform ( <response> response: [ yes ], <speaker_id> speaker id: [ 7 ], <feature> feature: [ PSRCC-12 ], <interpreter> interpreter: [ shap ], <shap_value> shap value: [ 0.9752 ]> )"
  },
  {
    "mr": "inform(extracted[MFCC], model[CNN], important[MFCC-12], classification[bonafide])",
    "ref": [
      " the audio sample had  features extracted and -12 was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      " the audio sample had MFCC features extracted and bonafide was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      " the audio sample had bonafide features extracted and bonafide-12 was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      "the audio sample had MFCC features extracted and MFCC-12 was determined to have a large impact on the CNN model that determined the sample to be bonafide .  the audio sample had MFCC features extracted and MFCC-12 was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      "Yes, LFCC-29, which a shap value of 0.3553, was used to detect the sample as bonafide .  the audio sample had MFCC features extracted and MFCC-12 was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      " the audio sample had MFCC features extracted and MFCC-1 was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      "Yes, LFCC-29, which a shap value of 0.3553, was used to detect the sample as bonafide .",
      " the audio sample had MFCC features extracted and MFCC-12 was determined to have a large impact on the C model that determined the sample to be bonafide .",
      " the audio sample had MFCC features extracted and MFCC-12 was determined to have a large impact on the CNN model that determined the sample to be bonaf .",
      " the audio sample had MFCC features extracted and MFCC-12 was determined to have a large impact on the MFCC-12 model that determined the sample to be bonafide .",
      " the audio sample had MFCC features extracted and MFCC-12 was determined to have a large impact on the CNN model that determined the sample to be bonafide ."
    ],
    "new_mr": "<inform> inform ( <extracted> extracted: [ MFCC ], <model> model: [ CNN ], <important> important: [ MFCC-12 ], <classification> classification: [ bonafide ]> )"
  },
  {
    "mr": "inform(interpreter[shap], important[PSRCC-3], shap_value[-0.0079])",
    "ref": [
      " -0.0079 determined that the PSRCC-3 feature was one of the more important features by assigning it a value of -0.0079 .",
      " shap determined that the PSRCC-3 feature was one of the more important features by assigning it a value of PSRCC-3 .",
      " shap determined that the PSRCC-3 feature was one of the more important features by assigning it a value of -0 .",
      "shap determined that the PSRCC-3 feature was one of the more important features by assigning it a value of -0.0079 .  shap determined that the PSRCC-3 feature was one of the more important features by assigning it a value of -0.0079 .",
      " shap determined that the -0.0079 feature was one of the more important features by assigning it a value of -0.0079 .",
      " shap determined that the  feature was one of the more important features by assigning it a value of -0.0079 .",
      " s determined that the PSRCC-3 feature was one of the more important features by assigning it a value of -0.0079 .",
      "Yes, PSRCC-7, which a shap value of 0.5117, was used to detect the sample as replayed .",
      "Yes, PSRCC-7, which a shap value of 0.5117, was used to detect the sample as replayed .  shap determined that the PSRCC-3 feature was one of the more important features by assigning it a value of -0.0079 .",
      " -0.0079 determined that the PSRCC-3 feature was one of the more important features by assigning it a value of -0.0079 .",
      " shap determined that the PSRCC-3 feature was one of the more important features by assigning it a value of -0.0079 ."
    ],
    "new_mr": "<inform> inform ( <interpreter> interpreter: [ shap ], <important> important: [ PSRCC-3 ], <shap_value> shap value: [ -0.0079 ]> )"
  },
  {
    "mr": "inform(response[yes], speaker_id[1], feature[MFCC-39], interpreter[shap], shap_value[0.7222])",
    "ref": [
      " Yes, person 1 was detected by MFCC with a shap value of 0.7222 .",
      "Yes, person 1 was detected by MFCC-39 with a shap value of 0.7222 .  Yes, person 1 was detected by MFCC-39 with a shap value of 0.7222 .",
      "shap determined that the MFCC-29 feature was one of the more important features by assigning it a value of 0.8612 .  Yes, person 1 was detected by MFCC-39 with a shap value of 0.7222 .",
      " Yes, person 1 was detected by MFCC-39 with a shap value of 1 .",
      " Yes.7222 .",
      " Yes, person 1 was detected by MFCC-39 with a sh value of 0.7222 .",
      " Yes, person 1 was detected by yes with a shap value of 0.7222 .",
      " Yes, person 1 was detected by MFCC-39 with a MFCC-39 value of 0.7222 .",
      " Yes, person 0.7222 was detected by MFCC-39 with a shap value of 0.7222 .",
      " Yes, person 1 was detected by MFCC-39 with a shap value of  .",
      " Yes, person 1 was detected by MFCC-39 with a shap value of 0.7222 ."
    ],
    "new_mr": "<inform> inform ( <response> response: [ yes ], <speaker_id> speaker id: [ 1 ], <feature> feature: [ MFCC-39 ], <interpreter> interpreter: [ shap ], <shap_value> shap value: [ 0.7222 ]> )"
  },
  {
    "mr": "inform(response[yes], speaker_id[2], feature[LFCC-35], interpreter[shap], shap_value[0.3982])",
    "ref": [
      "The signal is consistent with a cloned voice .",
      " Yes, LFCC-35, was used to detect the id of speaker 2 for the audio sample .",
      " Yes, LFCC-35, which a 0.3982 value of 0.3982, was used to detect the id of speaker 2 for the audio sample .",
      " Yes, 0.3982, which a shap value of 0.3982, was used to detect the id of speaker 2 for the audio sample .",
      " Yes, L, which a shap value of 0.3982, was used to detect the id of speaker 2 for the audio sample .",
      "Yes, LFCC-35, which a shap value of 0.3982, was used to detect the id of speaker 2 for the audio sample .  Yes, LFCC-35, which a shap value of 0.3982, was used to detect the id of speaker 2 for the audio sample .",
      " Yes, LFCC-35, which a shap value of 0.3982.",
      " Yes, LFCC-35, which a shap value of 0.398shap, was used to detect the id of speaker shap for the audio sample .",
      " Yes.3982, was used to detect the id of speaker 2 for the audio sample .",
      " Yes, LFCC-35.3982, was used to detect the id of speaker 2 for the audio sample .",
      " Yes, LFCC-35, which a shap value of 0.3982, was used to detect the id of speaker 2 for the audio sample ."
    ],
    "new_mr": "<inform> inform ( <response> response: [ yes ], <speaker_id> speaker id: [ 2 ], <feature> feature: [ LFCC-35 ], <interpreter> interpreter: [ shap ], <shap_value> shap value: [ 0.3982 ]> )"
  },
  {
    "mr": "inform(classification[spoof], edit_type[synthetic],classified_by[feature])",
    "ref": [
      "5 was found to be the id of the speaker in the sample .",
      "5 was found to be the id of the speaker in the sample . The audio file was classified as being synthetic by a GMM model .",
      "The audio file was classified as being spoof by a GMM model .",
      "The audio file was classified as being synthe by a GMM model .",
      "The audio file was classified as being synthetic by a GMM model . The audio file was classified as being synthetic by a GMM model .",
      "5 was found to be the id of the speaker in the sample .",
      "5 was found to be the id of the speaker in the sample . The audio file was classified as being synthetic by a GMM model .",
      "The audio file was classified as being spoof by a GMM model .",
      "The audio file was classified as being synthe by a GMM model .",
      "The audio file was classified as being synthetic by a GMM model . The audio file was classified as being synthetic by a GMM model .",
      "The audio file was classified as being synthetic by a GMM model ."
    ],
    "new_mr": "<inform> inform ( <classification> classification: [ spoof ], <edit_type> edit type: [ synthetic ]> )"
  },
  {
    "mr": "inform(response[Yes], classification[spoofed], spoof_type[additive_noise])",
    "ref": [
      "Artificial background noise was added to the recording .",
      "Ye. Artificial background noise was added to the recording .",
      "Yes.",
      "Yes. Yes. Artificial background noise was added to the recording .",
      "Yes.  Yes, PSRCC-0, which a shap value of 0.6244, was used to detect the sample as bonafide . Artificial background noise was added to the recording .",
      "spoofed. Artificial background noise was added to the recording .",
      "Yes, PSRCC-0, which a shap value of 0.6244, was used to detect the sample as bonafide .  Yes, PSRCC-0, which a shap value of 0.6244, was used to detect the sample as bonafide .",
      "Yes.  Yes, PSRCC-0, which a shap value of 0.6244, was used to detect the sample as bonafide .",
      "Yes, PSRCC-0, which a shap value of 0.6244, was used to detect the sample as bonafide . Yes.  Yes, PSRCC-0, which a shap value of 0.6244, was used to detect the sample as bonafide . Artificial background noise was added to the recording .",
      "Yes. Yes. Yes. Artificial background noise was added to the recording .",
      "Yes. Artificial background noise was added to the recording ."
    ],
    "new_mr": "<inform> inform ( <response> response: [ Yes ], <classification> classification: [ spoofed ], <spoof_type> spoof type: [ additive_noise ]> )"
  },
  {
    "mr": "inform(response[Yes], classification[spoofed], spoof_type[replayed])",
    "ref": [
      "Yes, a professional mixer was used . Yes , this is a replayed and  re-recorded sample .",
      "Yes , this is a replayed and  re-recorded sample . Yes , this is a replayed and  re-recorded sample .",
      "Yes .",
      "Ye , this is a replayed and  re-recorded sample .",
      "Yes, a professional mixer was used .",
      "Yes , this is a spoofed and  re-recorded sample .",
      "replayed , this is a replayed and  re-recorded sample .",
      "Yes , this is a repla and  re-recorded sample .",
      "Yes, a professional mixer was used . Yes , this is a replayed and  re-recorded sample .",
      "Yes , this is a replayed and  re-recorded sample . Yes , this is a replayed and  re-recorded sample .",
      "Yes , this is a replayed and  re-recorded sample ."
    ],
    "new_mr": "<inform> inform ( <response> response: [ Yes ], <classification> classification: [ spoofed ], <spoof_type> spoof type: [ replayed ]> )"
  },
  {
    "mr": "inform(classification[spoof], edit_type[mixer])",
    "ref": [
      "A professional mixer was used . A professional mixer was used .",
      "Yes, LFCC-59, which a shap value of -0.8654, was used to detect the sample as replayed .",
      "A professional m was used .",
      "A professional spoof was used .",
      "Yes, LFCC-59, which a shap value of -0.8654, was used to detect the sample as replayed . A professional mixer was used .",
      "A professional mixer was used . A professional mixer was used .",
      "Yes, LFCC-59, which a shap value of -0.8654, was used to detect the sample as replayed .",
      "A professional m was used .",
      "A professional spoof was used .",
      "Yes, LFCC-59, which a shap value of -0.8654, was used to detect the sample as replayed . A professional mixer was used .",
      "A professional mixer was used ."
    ],
    "new_mr": "<inform> inform ( <classification> classification: [ spoof ], <edit_type> edit type: [ mixer ]> )"
  },
  {
    "mr": "inform(response[yes], speaker_id[3], feature[GTCC-10], interpreter[shap], shap_value[0])",
    "ref": [
      " Yes, person  was detected by GTCC-10 with a shap value of 0 .",
      "Yes, person 3 was detected by GTCC-10 with a shap value of 0 .  Yes, person 3 was detected by GTCC-10 with a shap value of 0 .",
      " Yes, person 3 was detected by GTCC-10 with a sh value of 0 .",
      " Yes, person 3 was detected by yes with a shap value of 0 .",
      " Yes, person 0 was detected by GTCC-10 with a shap value of 0 .",
      " Yes, person 3 was detected by  with a shap value of 0 .",
      " Yes, person 3 was detected by GTCC-1 with a shap value of  .",
      "Yes, LFCC-44, which a shap value of -0.1075, was used to detect the sample as replayed .",
      " Yes, person 3 was detected by GTCC-1shap with a shap value of shap .",
      " Yes.",
      " Yes, person 3 was detected by GTCC-10 with a shap value of 0 ."
    ],
    "new_mr": "<inform> inform ( <response> response: [ yes ], <speaker_id> speaker id: [ 3 ], <feature> feature: [ GTCC-10 ], <interpreter> interpreter: [ shap ], <shap_value> shap value: [ 0 ]> )"
  },
  {
    "mr": "inform(interpreter[shap], important[LFCC-25], shap_value[-0.7432])",
    "ref": [
      " shap determined that the -0.7432 feature was one of the more important features by assigning it a value of -0.7432 .",
      "the audio sample had PSRCC features extracted and PSRCC-9 was determined to have a large impact on the CNN model that determined the sample to be replayed .  shap determined that the LFCC-25 feature was one of the more important features by assigning it a value of -0.7432 .",
      "  determined that the LFCC-25 feature was one of the more important features by assigning it a value of -0.7432 .",
      " shap determined that the LFCC-25 feature was one of the more important features by assigning it a value of -0. .",
      "shap determined that the LFCC-25 feature was one of the more important features by assigning it a value of -0.7432 .  shap determined that the LFCC-25 feature was one of the more important features by assigning it a value of -0.7432 .",
      " LFCC-25 determined that the LFCC-25 feature was one of the more important features by assigning it a value of -0.7432 .",
      " shap determined that the LFCC-25 feature was one of the more important features by assigning it a value of shap .",
      "the audio sample had PSRCC features extracted and PSRCC-9 was determined to have a large impact on the CNN model that determined the sample to be replayed .",
      " shap determined that the LFCC feature was one of the more important features by assigning it a value of -0.7432 .",
      " shap determined that the -0.7432 feature was one of the more important features by assigning it a value of -0.7432 .",
      " shap determined that the LFCC-25 feature was one of the more important features by assigning it a value of -0.7432 ."
    ],
    "new_mr": "<inform> inform ( <interpreter> interpreter: [ shap ], <important> important: [ LFCC-25 ], <shap_value> shap value: [ -0.7432 ]> )"
  },
  {
    "mr": "inform(response[Yes], interpreter[shap], important[MFCC-18], classification[replayed], shap_value[0.2232])",
    "ref": [
      "Yes, person 1 was detected by GTCC-8 with a shap value of 0 .",
      " Yes, replayed, which a shap value of 0.2232, was used to detect the sample as replayed .",
      " Yes, MFCC-18, which a shap value of shap, was used to detect the sample as replayed .",
      " Yes, MFCC-18, which a shap value of 0.2232, was used to detect the sample as 0.2232 .",
      " Yes, MFCC-18, which a shap value of 0.2232.",
      " Yes, MFCC-18, which a shap value of 0.2232, was used to detect the sample as repl .",
      " Yes, MFCC-18.2232, was used to detect the sample as replayed .",
      " Yes, MFCC-18, which a shap value of 0, was used to detect the sample as replayed .",
      " Yes, MFCC-1, which a shap value of 0.2232, was used to detect the sample as replayed .",
      " Yes.2232, was used to detect the sample as replayed .",
      " Yes, MFCC-18, which a shap value of 0.2232, was used to detect the sample as replayed ."
    ],
    "new_mr": "<inform> inform ( <response> response: [ Yes ], <interpreter> interpreter: [ shap ], <important> important: [ MFCC-18 ], <classification> classification: [ replayed ], <shap_value> shap value: [ 0.2232 ]> )"
  },
  {
    "mr": "inform(response[yes], speaker_id[1], feature[LFCC-15], interpreter[shap], shap_value[0.3767])",
    "ref": [
      " Yes, person 1 was detected by LFCC-15 with a s value of 0.3767 .",
      " Yes, person 1 was detected by LFCC-15 with a shap value of LFCC-15 .",
      " Yes, person  was detected by LFCC-5 with a shap value of 0.3767 .",
      "Yes, PSRCC-12, which a shap value of -0.5073, was used to detect the sample as bonafide .",
      " Yes, person 1 was detected by LFCC-15 with a shap value of 0. .",
      "Yes, person 1 was detected by LFCC-15 with a shap value of 0.3767 .  Yes, person 1 was detected by LFCC-15 with a shap value of 0.3767 .",
      "Yes, PSRCC-12, which a shap value of -0.5073, was used to detect the sample as bonafide .  Yes, person 1 was detected by LFCC-15 with a shap value of 0.3767 .",
      " Yes.3767 .",
      " Yes, person 1 was detected by 0.3767 with a shap value of 0.3767 .",
      " Yes, person 1 was detected by LFCC-15 with a 0.3767 value of 0.3767 .",
      " Yes, person 1 was detected by LFCC-15 with a shap value of 0.3767 ."
    ],
    "new_mr": "<inform> inform ( <response> response: [ yes ], <speaker_id> speaker id: [ 1 ], <feature> feature: [ LFCC-15 ], <interpreter> interpreter: [ shap ], <shap_value> shap value: [ 0.3767 ]> )"
  },
  {
    "mr": "inform(general)",
    "ref": [
      "shap determined that the LFCC-19 feature was one of the more important features by assigning it a value of 0.5217 . The SHAP values indicate the contribution of the features on the outcome of the classification model .",
      "shap determined that the LFCC-19 feature was one of the more important features by assigning it a value of 0.5217 .",
      "The SHAP values indicate the contribution of the features on the outcome of the classification model . The SHAP values indicate the contribution of the features on the outcome of the classification model .",
      "shap determined that the LFCC-19 feature was one of the more important features by assigning it a value of 0.5217 . The SHAP values indicate the contribution of the features on the outcome of the classification model .",
      "shap determined that the LFCC-19 feature was one of the more important features by assigning it a value of 0.5217 .",
      "The SHAP values indicate the contribution of the features on the outcome of the classification model . The SHAP values indicate the contribution of the features on the outcome of the classification model .",
      "shap determined that the LFCC-19 feature was one of the more important features by assigning it a value of 0.5217 . The SHAP values indicate the contribution of the features on the outcome of the classification model .",
      "shap determined that the LFCC-19 feature was one of the more important features by assigning it a value of 0.5217 .",
      "The SHAP values indicate the contribution of the features on the outcome of the classification model . The SHAP values indicate the contribution of the features on the outcome of the classification model .",
      "shap determined that the LFCC-19 feature was one of the more important features by assigning it a value of 0.5217 . The SHAP values indicate the contribution of the features on the outcome of the classification model .",
      "The SHAP values indicate the contribution of the features on the outcome of the classification model ."
    ],
    "new_mr": "<inform> inform ( > )"
  },
  {
    "mr": "inform(extracted[MFCC], model[CNN], important[MFCC-0], classification[replayed])",
    "ref": [
      "Yes, PSRCC-6, which a shap value of -0.7884, was used to detect the id of speaker 4 for the audio sample .",
      "Yes, PSRCC-6, which a shap value of -0.7884, was used to detect the id of speaker 4 for the audio sample .  the audio sample had MFCC features extracted and MFCC-0 was determined to have a large impact on the CNN model that determined the sample to be replayed .",
      " the audio sample had CNN features extracted and CNN-0 was determined to have a large impact on the CNN model that determined the sample to be replayed .",
      " the audio sample had MFCC features extracted and MFC was determined to have a large impact on the CNN model that determined the sample to be replayed .",
      " the audio sample had MF features extracted and MF-0 was determined to have a large impact on the CNN model that determined the sample to be replayed .",
      " the audio sample had MFCC features extracted and MFCC was determined to have a large impact on the CNN model that determined the sample to be replayed .",
      " the audio sample had MFCC features extracted and MFCC-0 was determined to have a large impact on the  model that determined the sample to be replayed .",
      " the audio sample had MFCC features extracted and MFCC-0 was determined to have a large impact on the CNN model that determined the sample to be  .",
      " the audio sample had MFCC features extracted and MFCC-0 was determined to have a large impact on the replayed model that determined the sample to be replayed .",
      " the audio sample had MFCC features extracted and MFCC-0 was determined to have a large impact on the CNN model that determined the sample to be MFCC .",
      " the audio sample had MFCC features extracted and MFCC-0 was determined to have a large impact on the CNN model that determined the sample to be replayed ."
    ],
    "new_mr": "<inform> inform ( <extracted> extracted: [ MFCC ], <model> model: [ CNN ], <important> important: [ MFCC-0 ], <classification> classification: [ replayed ]> )"
  },
  {
    "mr": "inform(extracted[LFCC], model[CNN], important[LFCC-48], classification[replayed])",
    "ref": [
      " the audio sample had L features extracted and L-48 was determined to have a large impact on the CNN model that determined the sample to be replayed .",
      " the audio sample had LFCC features extracted and LFCC-48 was determined to have a large impact on the LFCC model that determined the sample to be replayed .",
      "Yes, LFCC-47, which a shap value of 0.5372, was used to detect the id of speaker 6 for the audio sample .  the audio sample had LFCC features extracted and LFCC-48 was determined to have a large impact on the CNN model that determined the sample to be replayed .",
      " the audio sample had LFCC features extracted and LFCC-48 was determined to have a large impact on the CNN model that determined the sample to be replay .",
      " the audio sample had LFCC features extracted and CNN was determined to have a large impact on the CNN model that determined the sample to be replayed .",
      "the audio sample had LFCC features extracted and LFCC-48 was determined to have a large impact on the CNN model that determined the sample to be replayed .  the audio sample had LFCC features extracted and LFCC-48 was determined to have a large impact on the CNN model that determined the sample to be replayed .",
      "Yes, LFCC-47, which a shap value of 0.5372, was used to detect the id of speaker 6 for the audio sample .",
      " the audio sample had LFCC features extracted and LFCC-48 was determined to have a large impact on the C model that determined the sample to be replayed .",
      " the audio sample had LFCC features extracted and LFCC- was determined to have a large impact on the CNN model that determined the sample to be replayed .",
      " the audio sample had LFCC-48 features extracted and LFCC-48-48 was determined to have a large impact on the CNN model that determined the sample to be replayed .",
      " the audio sample had LFCC features extracted and LFCC-48 was determined to have a large impact on the CNN model that determined the sample to be replayed ."
    ],
    "new_mr": "<inform> inform ( <extracted> extracted: [ LFCC ], <model> model: [ CNN ], <important> important: [ LFCC-48 ], <classification> classification: [ replayed ]> )"
  },
  {
    "mr": "inform(classification[spoofed], spoof_type[replayed])",
    "ref": [
      "shap determined that the MFCC-9 feature was one of the more important features by assigning it a value of -0.6735 . Yes, part of the recording was played back .",
      "shap determined that the MFCC-9 feature was one of the more important features by assigning it a value of -0.6735 .",
      "Yes.",
      "Yes, part of the recording was played back . Yes, part of the recording was played back .",
      "shap determined that the MFCC-9 feature was one of the more important features by assigning it a value of -0.6735 . Yes, part of the recording was played back .",
      "shap determined that the MFCC-9 feature was one of the more important features by assigning it a value of -0.6735 .",
      "Yes.",
      "Yes, part of the recording was played back . Yes, part of the recording was played back .",
      "shap determined that the MFCC-9 feature was one of the more important features by assigning it a value of -0.6735 . Yes, part of the recording was played back .",
      "shap determined that the MFCC-9 feature was one of the more important features by assigning it a value of -0.6735 .",
      "Yes, part of the recording was played back ."
    ],
    "new_mr": "<inform> inform ( <classification> classification: [ spoofed ], <spoof_type> spoof type: [ replayed ]> )"
  },
  {
    "mr": "inform(classification[spoof], edit_type[cloning])",
    "ref": [
      "The signal is consistent with a cloned voice . The signal is consistent with a cloned voice .",
      "yes, MFCC-9 was used to determine speaker id .",
      "yes, MFCC-9 was used to determine speaker id . The signal is consistent with a cloned voice .",
      "The signal is consistent with a cloned voice . The signal is consistent with a cloned voice .",
      "yes, MFCC-9 was used to determine speaker id .",
      "yes, MFCC-9 was used to determine speaker id . The signal is consistent with a cloned voice .",
      "The signal is consistent with a cloned voice . The signal is consistent with a cloned voice .",
      "yes, MFCC-9 was used to determine speaker id .",
      "yes, MFCC-9 was used to determine speaker id . The signal is consistent with a cloned voice .",
      "The signal is consistent with a cloned voice . The signal is consistent with a cloned voice .",
      "The signal is consistent with a cloned voice ."
    ],
    "new_mr": "<inform> inform ( <classification> classification: [ spoof ], <edit_type> edit type: [ cloning ]> )"
  },
  {
    "mr": "inform(classification[spoof], edit_type[multi_microphone], mic_quantity[>1])",
    "ref": [
      "There was more than one microphone . There was more than one microphone .",
      "A professional mixer was used .",
      "A professional mixer was used . There was more than one microphone .",
      "There was more than one microphone . There was more than one microphone .",
      "A professional mixer was used .",
      "A professional mixer was used . There was more than one microphone .",
      "There was more than one microphone . There was more than one microphone .",
      "A professional mixer was used .",
      "A professional mixer was used . There was more than one microphone .",
      "There was more than one microphone . There was more than one microphone .",
      "There was more than one microphone ."
    ],
    "new_mr": "<inform> inform ( <classification> classification: [ spoof ], <edit_type> edit type: [ multi_microphone ], <mic_quantity> mic quantity: [ >1 ]> )"
  },
  {
    "mr": "inform(interpreter[shap], important[PSRCC-5], shap_value[-0.6687])",
    "ref": [
      "shap determined that the PSRCC-5 feature was one of the more important features by assigning it a value of -0.6687 .  shap determined that the PSRCC-5 feature was one of the more important features by assigning it a value of -0.6687 .",
      "shap determined that the MSRCC-7 feature was one of the more important features by assigning it a value of -0.6482 .",
      " shap determined that the -0.6687 feature was one of the more important features by assigning it a value of -0.6687 .",
      " shap determined that the PSRCC-5 feature was one of the more important features by assigning it a value of shap .",
      " PSRCC-5 determined that the PSRCC-5 feature was one of the more important features by assigning it a value of -0.6687 .",
      " shap determined that the PSR feature was one of the more important features by assigning it a value of -0.6687 .",
      " shap determined that the PSRCC-5 feature was one of the more important features by assigning it a value of -0.66 .",
      "shap determined that the MSRCC-7 feature was one of the more important features by assigning it a value of -0.6482 .  shap determined that the PSRCC-5 feature was one of the more important features by assigning it a value of -0.6687 .",
      " sha determined that the PSRCC-5 feature was one of the more important features by assigning it a value of -0.6687 .",
      "shap determined that the PSRCC-5 feature was one of the more important features by assigning it a value of -0.6687 .  shap determined that the PSRCC-5 feature was one of the more important features by assigning it a value of -0.6687 .",
      " shap determined that the PSRCC-5 feature was one of the more important features by assigning it a value of -0.6687 ."
    ],
    "new_mr": "<inform> inform ( <interpreter> interpreter: [ shap ], <important> important: [ PSRCC-5 ], <shap_value> shap value: [ -0.6687 ]> )"
  },
  {
    "mr": "inform(response[Yes], interpreter[shap], important[MFCC-24], classification[bonafide], shap_value[-0.9231])",
    "ref": [
      " Yes, which a shap value of -0.9231, was used to detect the sample as bonafide .",
      " -0.9231, MFCC-24, which a shap value of -0.9231, was used to detect the sample as bonafide .",
      " Yes, MFCC-24, which a shap value of Yes, was used to detect the sample as bonafide .",
      " Yes, MFCC-24.9231, was used to detect the sample as bonafide .",
      " Yes.9231, was used to detect the sample as bonafide .",
      " Yes, MFCC-24, which a MFCC-24 value of -0.9231, was used to detect the sample as bonafide .",
      " Yes, shap, which a shap value of -0.9231, was used to detect the sample as bonafide .",
      " Yes, MFCC-24, which a shap value of -0.9231, was used to detect the sample as Yes .",
      " Yes, MFCC-24, was used to detect the sample as bonafide .",
      "Yes, MFCC-24, which a shap value of -0.9231, was used to detect the sample as bonafide .  Yes, MFCC-24, which a shap value of -0.9231, was used to detect the sample as bonafide .",
      " Yes, MFCC-24, which a shap value of -0.9231, was used to detect the sample as bonafide ."
    ],
    "new_mr": "<inform> inform ( <response> response: [ Yes ], <interpreter> interpreter: [ shap ], <important> important: [ MFCC-24 ], <classification> classification: [ bonafide ], <shap_value> shap value: [ -0.9231 ]> )"
  },
  {
    "mr": "inform(interpreter[shap], important[MFCC-20], shap_value[0.3878])",
    "ref": [
      "shap determined that the LFCC-25 feature was one of the more important features by assigning it a value of -0.7432 .  shap determined that the MFCC-20 feature was one of the more important features by assigning it a value of 0.3878 .",
      " shap determined that the MFCC-20 feature was one of the more important features by assigning it a value of 0.3 .",
      " shap determined that the MFCC-2 feature was one of the more important features by assigning it a value of 0.3878 .",
      " s determined that the MFCC-20 feature was one of the more important features by assigning it a value of 0.3878 .",
      " shap determined that the 0.3878 feature was one of the more important features by assigning it a value of 0.3878 .",
      "shap determined that the LFCC-25 feature was one of the more important features by assigning it a value of -0.7432 .",
      "shap determined that the MFCC-20 feature was one of the more important features by assigning it a value of 0.3878 .  shap determined that the MFCC-20 feature was one of the more important features by assigning it a value of 0.3878 .",
      " shap determined that the MFCC-20 feature was one of the more important features by assigning it a value of shap .",
      " 0.3878 determined that the MFCC-20 feature was one of the more important features by assigning it a value of 0.3878 .",
      "shap determined that the LFCC-25 feature was one of the more important features by assigning it a value of -0.7432 .  shap determined that the MFCC-20 feature was one of the more important features by assigning it a value of 0.3878 .",
      " shap determined that the MFCC-20 feature was one of the more important features by assigning it a value of 0.3878 ."
    ],
    "new_mr": "<inform> inform ( <interpreter> interpreter: [ shap ], <important> important: [ MFCC-20 ], <shap_value> shap value: [ 0.3878 ]> )"
  },
  {
    "mr": "inform(classification[spoof], classified_by[feature])",
    "ref": [
      "SHAP gave CQCC-0 a value of 0.352.245, LFCC-2 a value of 0.0645, MFCC-4 a value of 0.0487 . ",
      "Yes, person 2 was detected by GTCC-3 with a shap value of 0 . SHAP gave CQCC-0 a value of 0.352, MFCC-0 a value of 0.245, LFCC-2 a value of 0.0645, MFCC-4 a value of 0.0487 .",
      "SHAP gave CQCC-0 a value of 0.352, LFCC-2 a value of 0.0645, MFCC-4 a value of 0.0487 . ",
      "SHAP gave CQCC-0 a value of 0.352, MFCC-0 a value of 0.245, MFCC-4 a value of 0.0487 . ",
      "Yes, person 2 was detected by GTCC-3 with a shap value of 0 .",
      "SHAP gave CQCC-0 a value of 0.352, MFCC-0 a value of 0.245, LFCC-2 a value of 0.0645, MFCC-4 a value of 0.0487 . SHAP gave CQCC-0 a value of 0.352, MFCC-0 a value of 0.245, LFCC-2 a value of 0.0645, MFCC-4 a value of 0.0487 .",
      "SHAP gave CQCC-0 a value of 0.352, MFCC-0 a value of 0.245.0645, MFCC-4 a value of 0.0487 . ",
      "SHAP gave CQCC-0 a value of 0.352, MFCC-0 a value of 0.245, LFCC-2 a value of 0.0645.0487 . ",
      "SHAP gave CQCC-0 a value of 0.352.245, LFCC-2 a value of 0.0645, MFCC-4 a value of 0.0487 . ",
      "Yes, person 2 was detected by GTCC-3 with a shap value of 0 . SHAP gave CQCC-0 a value of 0.352, MFCC-0 a value of 0.245, LFCC-2 a value of 0.0645, MFCC-4 a value of 0.0487 .",
      "SHAP gave CQCC-0 a value of 0.352, MFCC-0 a value of 0.245, LFCC-2 a value of 0.0645, MFCC-4 a value of 0.0487 . "
    ],
    "new_mr": "<inform> inform ( <classification> classification: [ spoof ], <classified_by> classified by: [ feature ]> )"
  },
  {
    "mr": "inform(extracted[LFCC], model[CNN], important[LFCC-50], classification[replayed])",
    "ref": [
      " the audio sample had L features extracted and L-50 was determined to have a large impact on the CNN model that determined the sample to be replayed .",
      " the audio sample had replayed features extracted and replayed-50 was determined to have a large impact on the CNN model that determined the sample to be replayed .",
      " the audio sample had LFCC features extracted and LFCC-50 was determined to have a large impact on the CNN model that determined the sample to be r .",
      " the audio sample had LFCC features extracted and LFCC-50 was determined to have a large impact on the CNN model that determined the sample to be LFCC .",
      "Yes, PSRCC-3, which a shap value of -0.0902, was used to detect the sample as bonafide .  the audio sample had LFCC features extracted and LFCC-50 was determined to have a large impact on the CNN model that determined the sample to be replayed .",
      " the audio sample had LFCC features extracted and LFCC-50 was determined to have a large impact on the LFCC model that determined the sample to be replayed .",
      " the audio sample had LFCC features extracted and LFCC- was determined to have a large impact on the CNN model that determined the sample to be replayed .",
      " the audio sample had LFCC features extracted and LFCC-50 was determined to have a large impact on the  model that determined the sample to be replayed .",
      " the audio sample had LFCC features extracted and replayed was determined to have a large impact on the CNN model that determined the sample to be replayed .",
      "Yes, PSRCC-3, which a shap value of -0.0902, was used to detect the sample as bonafide .",
      " the audio sample had LFCC features extracted and LFCC-50 was determined to have a large impact on the CNN model that determined the sample to be replayed ."
    ],
    "new_mr": "<inform> inform ( <extracted> extracted: [ LFCC ], <model> model: [ CNN ], <important> important: [ LFCC-50 ], <classification> classification: [ replayed ]> )"
  },
  {
    "mr": "inform(response[yes], speaker_id[2], feature[LFCC-45], interpreter[shap], shap_value[0.8788])",
    "ref": [
      " Yes, person  was detected by LFCC-45 with a shap value of 0.8788 .",
      " Yes, person 2 was detected by LFCC-45 with a shap value of 0. .",
      " Yes.8788 .",
      "No , the entire recording was made using multiple microphones .",
      " Yes, person 2 was detected by LFCC-45 with a yes value of 0.8788 .",
      " Yes, person LFCC-45 was detected by LFCC-45 with a shap value of 0.8788 .",
      " Yes, person 2 was detected by LFCC-45 with a sha value of 0.8788 .",
      " Yes, person 2 was detected by LFC with a shap value of 0.8788 .",
      " Yes, person 2 was detected by shap with a shap value of 0.8788 .",
      " Yes, person 2 was detected by LFCC-45 with a shap value of yes .",
      " Yes, person 2 was detected by LFCC-45 with a shap value of 0.8788 ."
    ],
    "new_mr": "<inform> inform ( <response> response: [ yes ], <speaker_id> speaker id: [ 2 ], <feature> feature: [ LFCC-45 ], <interpreter> interpreter: [ shap ], <shap_value> shap value: [ 0.8788 ]> )"
  },
  {
    "mr": "inform(classification[spoof])",
    "ref": [
      "The audio is fake . The audio is fake .",
      "Yes, MSRCC-6, which a shap value of 0.5455, was used to detect the id of speaker 4 for the audio sample . The audio is fake .",
      "Yes, MSRCC-6, which a shap value of 0.5455, was used to detect the id of speaker 4 for the audio sample .",
      "The audio is fake . The audio is fake .",
      "Yes, MSRCC-6, which a shap value of 0.5455, was used to detect the id of speaker 4 for the audio sample . The audio is fake .",
      "Yes, MSRCC-6, which a shap value of 0.5455, was used to detect the id of speaker 4 for the audio sample .",
      "The audio is fake . The audio is fake .",
      "Yes, MSRCC-6, which a shap value of 0.5455, was used to detect the id of speaker 4 for the audio sample . The audio is fake .",
      "Yes, MSRCC-6, which a shap value of 0.5455, was used to detect the id of speaker 4 for the audio sample .",
      "The audio is fake . The audio is fake .",
      "The audio is fake . "
    ],
    "new_mr": "<inform> inform ( <classification> classification: [ spoof ]> )"
  },
  {
    "mr": "inform(response[Yes], classification[bonafide])",
    "ref": [
      "Yes.",
      "Yes, the recording was found to be bonafide. Yes, the recording was found to be bonafide.",
      "the audio sample had LFCC features extracted and LFCC-1 was determined to have a large impact on the CNN model that determined the sample to be replayed .",
      "Yes, the recording was found to be bonafid.",
      "Yes, the recording was found to be Yes.",
      "bonafide, the recording was found to be bonafide.",
      "Y, the recording was found to be bonafide.",
      "the audio sample had LFCC features extracted and LFCC-1 was determined to have a large impact on the CNN model that determined the sample to be replayed . Yes, the recording was found to be bonafide.",
      "Yes.",
      "Yes, the recording was found to be bonafide. Yes, the recording was found to be bonafide.",
      "Yes, the recording was found to be bonafide."
    ],
    "new_mr": "<inform> inform ( <response> response: [ Yes ], <classification> classification: [ bonafide ]> )"
  },
  {
    "mr": "inform(classification[spoof], known_mic_signature[phone])",
    "ref": [
      "yes, MFCC-10 was used to determine speaker id . Most of the recording was not made with a mobile phone .",
      "Most of the recording was not made with a mobile ph .",
      "yes, MFCC-10 was used to determine speaker id .",
      "Most of the recording was not made with a mobile spoof .",
      "Most of the recording was made with a mobile phone .",
      "Most of the recording was not made with a mobile phone . Most of the recording was not made with a mobile phone .",
      "yes, MFCC-10 was used to determine speaker id . Most of the recording was not made with a mobile phone .",
      "Most of the recording was not made with a mobile ph .",
      "yes, MFCC-10 was used to determine speaker id .",
      "Most of the recording was not made with a mobile spoof .",
      "Most of the recording was not made with a mobile phone ."
    ],
    "new_mr": "<inform> inform ( <classification> classification: [ spoof ], <known_mic_signature> known mic signature: [ phone ]> )"
  },
  {
    "mr": "inform(response[yes], feature[MFCC-3], determined[speaker_id])",
    "ref": [
      " speaker_id, MFCC-3 was used to determine speaker id .",
      "Yes, person 2 was detected by LFCC-41 with a shap value of -0.4171 .",
      "Yes, person 2 was detected by LFCC-41 with a shap value of -0.4171 .  yes, MFCC-3 was used to determine speaker id .",
      "yes, MFCC-3 was used to determine speaker id .  yes, MFCC-3 was used to determine speaker id .",
      " yes, speaker_id was used to determine speaker id .",
      " y, MFCC-3 was used to determine speaker id .",
      " yes.",
      " yes, M was used to determine speaker id .",
      " speaker_id, MFCC-3 was used to determine speaker id .",
      "Yes, person 2 was detected by LFCC-41 with a shap value of -0.4171 .",
      " yes, MFCC-3 was used to determine speaker id ."
    ],
    "new_mr": "<inform> inform ( <response> response: [ yes ], <feature> feature: [ MFCC-3 ], <determined> determined: [ speaker_id ]> )"
  },
  {
    "mr": "inform(response[Yes], interpreter[shap], important[LFCC-57], classification[replayed], shap_value[-0.3017])",
    "ref": [
      " Yes, LFCC-57, which a shap value of -0.3017, was used to detect the sample as  .",
      " Yes, LFCC-57, which a shap value of -0.3017, was used to detect the sample as -0.3017 .",
      "Yes, LFCC-57, which a shap value of -0.3017, was used to detect the sample as replayed .  Yes, LFCC-57, which a shap value of -0.3017, was used to detect the sample as replayed .",
      " Yes, LFCC-57, which a shap value of -0.30, was used to detect the sample as replayed .",
      " Yes.3017, was used to detect the sample as replayed .",
      " Yes, LFCC-57, which a shap value of LFCC-57, was used to detect the sample as replayed .",
      " Yes, LFCC-57.3017, was used to detect the sample as replayed .",
      " Ye, LFCC-57, which a shap value of -0.3017, was used to detect the sample as replayed .",
      " Yes, LFCC-57, which a shap value of -0.3017.",
      " Yes, LFCC-57, which a replayed value of -0.3017, was used to detect the sample as replayed .",
      " Yes, LFCC-57, which a shap value of -0.3017, was used to detect the sample as replayed ."
    ],
    "new_mr": "<inform> inform ( <response> response: [ Yes ], <interpreter> interpreter: [ shap ], <important> important: [ LFCC-57 ], <classification> classification: [ replayed ], <shap_value> shap value: [ -0.3017 ]> )"
  },
  {
    "mr": "inform(response[yes], speaker_id[5], feature[MFCC-1], interpreter[shap], shap_value[0.4636])",
    "ref": [
      " Yes, person 5 was detected by MFCC-1 with a  value of 0.4636 .",
      " Yes, person 5 was detected by shap with a shap value of 0.4636 .",
      " Yes, person 5 was detected by MFCC-1 with a shap value of shap .",
      " Yes, person 5 was detected by MFCC-1 with a 5 value of 0.4636 .",
      " Yes.4636 .",
      "Yes, MFCC-3, which a shap value of -0.1314, was used to detect the sample as bonafide .  Yes, person 5 was detected by MFCC-1 with a shap value of 0.4636 .",
      " Yes, person 5 was detected by MFCC- with a shap value of 0.4636 .",
      "Yes, MFCC-3, which a shap value of -0.1314, was used to detect the sample as bonafide .",
      " Yes, person MFCC-1 was detected by MFCC-1 with a shap value of 0.4636 .",
      " Yes, person 5 was detected by MFCC-1 with a shap value of  .",
      " Yes, person 5 was detected by MFCC-1 with a shap value of 0.4636 ."
    ],
    "new_mr": "<inform> inform ( <response> response: [ yes ], <speaker_id> speaker id: [ 5 ], <feature> feature: [ MFCC-1 ], <interpreter> interpreter: [ shap ], <shap_value> shap value: [ 0.4636 ]> )"
  },
  {
    "mr": "inform(interpreter[shap], important[MFCC-36], shap_value[0.3678])",
    "ref": [
      " shap determined that the MFCC-36 feature was one of the more important features by assigning it a value of 0.3 .",
      " s determined that the MFCC-36 feature was one of the more important features by assigning it a value of 0.3678 .",
      " 0.3678 determined that the MFCC-36 feature was one of the more important features by assigning it a value of 0.3678 .",
      " shap determined that the MFCC-36 feature was one of the more important features by assigning it a value of shap .",
      " shap determined that the shap feature was one of the more important features by assigning it a value of 0.3678 .",
      "Yes, LFCC-56, which a shap value of 0.256, was used to detect the sample as replayed .",
      "shap determined that the MFCC-36 feature was one of the more important features by assigning it a value of 0.3678 .  shap determined that the MFCC-36 feature was one of the more important features by assigning it a value of 0.3678 .",
      "Yes, LFCC-56, which a shap value of 0.256, was used to detect the sample as replayed .  shap determined that the MFCC-36 feature was one of the more important features by assigning it a value of 0.3678 .",
      " shap determined that the MF feature was one of the more important features by assigning it a value of 0.3678 .",
      " shap determined that the MFCC-36 feature was one of the more important features by assigning it a value of 0.3 .",
      " shap determined that the MFCC-36 feature was one of the more important features by assigning it a value of 0.3678 ."
    ],
    "new_mr": "<inform> inform ( <interpreter> interpreter: [ shap ], <important> important: [ MFCC-36 ], <shap_value> shap value: [ 0.3678 ]> )"
  },
  {
    "mr": "inform(interpreter[shap], important[PSRCC-11], shap_value[0.8242])",
    "ref": [
      "shap determined that the PSRCC-11 feature was one of the more important features by assigning it a value of 0.8242 .  shap determined that the PSRCC-11 feature was one of the more important features by assigning it a value of 0.8242 .",
      " shap determined that the 0.8242 feature was one of the more important features by assigning it a value of 0.8242 .",
      " shap determined that the PSRC feature was one of the more important features by assigning it a value of 0.8242 .",
      " shap determined that the PSRCC-11 feature was one of the more important features by assigning it a value of shap .",
      "Yes, MFCC-21, which a shap value of 0.0724, was used to detect the sample as replayed .",
      " 0.8242 determined that the PSRCC-11 feature was one of the more important features by assigning it a value of 0.8242 .",
      " shap determined that the PSRCC-11 feature was one of the more important features by assigning it a value of  .",
      "Yes, MFCC-21, which a shap value of 0.0724, was used to detect the sample as replayed .  shap determined that the PSRCC-11 feature was one of the more important features by assigning it a value of 0.8242 .",
      "  determined that the PSRCC-11 feature was one of the more important features by assigning it a value of 0.8242 .",
      "shap determined that the PSRCC-11 feature was one of the more important features by assigning it a value of 0.8242 .  shap determined that the PSRCC-11 feature was one of the more important features by assigning it a value of 0.8242 .",
      " shap determined that the PSRCC-11 feature was one of the more important features by assigning it a value of 0.8242 ."
    ],
    "new_mr": "<inform> inform ( <interpreter> interpreter: [ shap ], <important> important: [ PSRCC-11 ], <shap_value> shap value: [ 0.8242 ]> )"
  },
  {
    "mr": "inform(response[yes], speaker_id[6], feature[PSRCC-5], interpreter[shap], shap_value[-0.3035])",
    "ref": [
      " Yes, person  was detected by PSRCC-5 with a shap value of -0.3035 .",
      "Yes, person 6 was detected by PSRCC-5 with a shap value of -0.3035 .  Yes, person 6 was detected by PSRCC-5 with a shap value of -0.3035 .",
      "Yes, person 1 was detected by LFCC-32 with a shap value of -0.5324 .",
      " Yes, person 6 was detected by PSRCC-5 with a  value of -0.3035 .",
      " Yes, person 6 was detected by shap with a shap value of -0.3035 .",
      " Yes, person 6 was detected by PSRCC-5 with a shap value of  .",
      " Yes, person 6 was detected by PSRCC-5 with a shap value of yes .",
      " Yes, person 6 was detected by PSRCC-5 with a PSRCC-5 value of -0.3035 .",
      "Yes, person 1 was detected by LFCC-32 with a shap value of -0.5324 .  Yes, person 6 was detected by PSRCC-5 with a shap value of -0.3035 .",
      " Yes.3035 .",
      " Yes, person 6 was detected by PSRCC-5 with a shap value of -0.3035 ."
    ],
    "new_mr": "<inform> inform ( <response> response: [ yes ], <speaker_id> speaker id: [ 6 ], <feature> feature: [ PSRCC-5 ], <interpreter> interpreter: [ shap ], <shap_value> shap value: [ -0.3035 ]> )"
  },
  {
    "mr": "inform(extracted[MFCC], model[CNN], important[MFCC-0], classification[bonafide])",
    "ref": [
      " the audio sample had M features extracted and M-0 was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      "shap determined that the LFCC-30 feature was one of the more important features by assigning it a value of 0.7143 .",
      " the audio sample had MFCC features extracted and MFCC-0 was determined to have a large impact on the MFCC model that determined the sample to be bonafide .",
      "shap determined that the LFCC-30 feature was one of the more important features by assigning it a value of 0.7143 .  the audio sample had MFCC features extracted and MFCC-0 was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      " the audio sample had MFCC features extracted and MFCC-0 was determined to have a large impact on the C model that determined the sample to be bonafide .",
      " the audio sample had CNN features extracted and CNN-0 was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      " the audio sample had MFCC features extracted and MFCC was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      "the audio sample had MFCC features extracted and MFCC-0 was determined to have a large impact on the CNN model that determined the sample to be bonafide .  the audio sample had MFCC features extracted and MFCC-0 was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      " the audio sample had MFCC features extracted and MFCC-0 was determined to have a large impact on the CNN model that determined the sample to be MFCC .",
      " the audio sample had MFCC features extracted and M was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      " the audio sample had MFCC features extracted and MFCC-0 was determined to have a large impact on the CNN model that determined the sample to be bonafide ."
    ],
    "new_mr": "<inform> inform ( <extracted> extracted: [ MFCC ], <model> model: [ CNN ], <important> important: [ MFCC-0 ], <classification> classification: [ bonafide ]> )"
  },
  {
    "mr": "inform(speaker_id[4])",
    "ref": [
      "person 4 spoke the audio sample .  person 4 spoke the audio sample .",
      " person  spoke the audio sample .",
      "The audio is not spoofed ?  person 4 spoke the audio sample .",
      "The audio is not spoofed ?",
      "person 4 spoke the audio sample .  person 4 spoke the audio sample .",
      " person  spoke the audio sample .",
      "The audio is not spoofed ?  person 4 spoke the audio sample .",
      "The audio is not spoofed ?",
      "person 4 spoke the audio sample .  person 4 spoke the audio sample .",
      " person  spoke the audio sample .",
      " person 4 spoke the audio sample ."
    ],
    "new_mr": "<inform> inform ( <speaker_id> speaker id: [ 4 ]> )"
  },
  {
    "mr": "inform(extracted[MFCC], extracted[GTCC], model[SVM], speaker_id[1])",
    "ref": [
      "shap determined that the GTCC-2 feature was one of the more important features by assigning it a value of -1 .",
      " The audio sample had GTCC and MFCC features extracted and passed through a trained GTCC which determined the id of speaker 1 .",
      " The audio sample had GTCC and MFCC features extracted and passed through a trained SVM which determined the id of speaker  .",
      " The audio sample had GTCC and MFC features extracted and passed through a trained SVM which determined the id of speaker 1 .",
      "The audio sample had GTCC and MFCC features extracted and passed through a trained SVM which determined the id of speaker 1 .  The audio sample had GTCC and MFCC features extracted and passed through a trained SVM which determined the id of speaker 1 .",
      " The audio sample had GTC and MFCC features extracted and passed through a trained SVM which determined the id of speaker 1 .",
      " The audio sample had MFCC and MFCC features extracted and passed through a trained SVM which determined the id of speaker 1 .",
      " The audio sample had GTCC and MFCC features extracted and passed through a trained SVM which determined the id of speaker SVM .",
      "shap determined that the GTCC-2 feature was one of the more important features by assigning it a value of -1 .  The audio sample had GTCC and MFCC features extracted and passed through a trained SVM which determined the id of speaker 1 .",
      " The audio sample had GTCC and MFCC features extracted and passed through a trained S which determined the id of speaker 1 .",
      " The audio sample had GTCC and MFCC features extracted and passed through a trained SVM which determined the id of speaker 1 ."
    ],
    "new_mr": "<inform> inform ( <extracted> extracted: [ MFCC ], <extracted> extracted: [ GTCC ], <model> model: [ SVM ], <speaker_id> speaker id: [ 1 ]> )"
  },
  {
    "mr": "inform(speaker_id[5])",
    "ref": [
      "  was found to be the id of the speaker in the sample .",
      "5 was found to be the id of the speaker in the sample .  5 was found to be the id of the speaker in the sample .",
      "The SHAP values indicate the contribution of the features on the outcome of the classification model .  5 was found to be the id of the speaker in the sample .",
      "The SHAP values indicate the contribution of the features on the outcome of the classification model .",
      "  was found to be the id of the speaker in the sample .",
      "5 was found to be the id of the speaker in the sample .  5 was found to be the id of the speaker in the sample .",
      "The SHAP values indicate the contribution of the features on the outcome of the classification model .  5 was found to be the id of the speaker in the sample .",
      "The SHAP values indicate the contribution of the features on the outcome of the classification model .",
      "  was found to be the id of the speaker in the sample .",
      "5 was found to be the id of the speaker in the sample .  5 was found to be the id of the speaker in the sample .",
      " 5 was found to be the id of the speaker in the sample ."
    ],
    "new_mr": "<inform> inform ( <speaker_id> speaker id: [ 5 ]> )"
  },
  {
    "mr": "inform(response[yes], speaker_id[1], feature[LFCC-7], interpreter[shap], shap_value[-0.6095])",
    "ref": [
      " Yes, LFCC-7, which a shap value of -0.6095, was used to detect the id of speaker  for the audio sample .",
      " Yes, LFCC-7, which a shap value of -0, was used to detect the id of speaker 1 for the audio sample .",
      "Yes, LFCC-7, which a shap value of -0.6095, was used to detect the id of speaker 1 for the audio sample .  Yes, LFCC-7, which a shap value of -0.6095, was used to detect the id of speaker 1 for the audio sample .",
      " Yes, LFCC-7, was used to detect the id of speaker 1 for the audio sample .",
      " Yes, which a shap value of -0.6095, was used to detect the id of speaker 1 for the audio sample .",
      " Yes, yes, which a shap value of -0.6095, was used to detect the id of speaker 1 for the audio sample .",
      " Yes, LFCC-7, which a yes value of -0.6095, was used to detect the id of speaker 1 for the audio sample .",
      "the audio sample had LFCC features extracted and LFCC-21 was determined to have a large impact on the CNN model that determined the sample to be replayed .  Yes, LFCC-7, which a shap value of -0.6095, was used to detect the id of speaker 1 for the audio sample .",
      " Yes, LFCC-7, which a shap value of -0.6095, was used to detect the id of speaker yes for the audio sample .",
      " Yes.6095, was used to detect the id of speaker 1 for the audio sample .",
      " Yes, LFCC-7, which a shap value of -0.6095, was used to detect the id of speaker 1 for the audio sample ."
    ],
    "new_mr": "<inform> inform ( <response> response: [ yes ], <speaker_id> speaker id: [ 1 ], <feature> feature: [ LFCC-7 ], <interpreter> interpreter: [ shap ], <shap_value> shap value: [ -0.6095 ]> )"
  },
  {
    "mr": "inform(response[Yes], interpreter[shap], important[GTCC-8], classification[replayed], shap_value[-1])",
    "ref": [
      " Yes, GTCC-8, which a shap value of -1.",
      " Y, GTCC-8, which a shap value of -1, was used to detect the sample as replayed .",
      " Yes, GTCC-8, which a shap value of -1, was used to detect the sample as re .",
      " Yes, which a shap value of -1, was used to detect the sample as replayed .",
      " Yes, replayed, which a shap value of -1, was used to detect the sample as replayed .",
      " Yes, GTCC-8, which a shap value of -1, was used to detect the sample as GTCC-8 .",
      " Yes, GTCC-8, which a replayed value of -1, was used to detect the sample as replayed .",
      " Yes, GTCC-8, was used to detect the sample as replayed .",
      " Yes, GTCC-8.",
      " Yes.",
      " Yes, GTCC-8, which a shap value of -1, was used to detect the sample as replayed ."
    ],
    "new_mr": "<inform> inform ( <response> response: [ Yes ], <interpreter> interpreter: [ shap ], <important> important: [ GTCC-8 ], <classification> classification: [ replayed ], <shap_value> shap value: [ -1 ]> )"
  },
  {
    "mr": "inform(classification[spoof], edit_type[environment])",
    "ref": [
      "Yes, LFCC-15, which a shap value of -0.1785, was used to detect the sample as bonafide . There are inconsistencies in the background noise which indicate the room changed .",
      "Yes, LFCC-15, which a shap value of -0.1785, was used to detect the sample as bonafide .",
      "There are inconsistencies in the background noise which indicate the room changed . There are inconsistencies in the background noise which indicate the room changed .",
      "Yes, LFCC-15, which a shap value of -0.1785, was used to detect the sample as bonafide . There are inconsistencies in the background noise which indicate the room changed .",
      "Yes, LFCC-15, which a shap value of -0.1785, was used to detect the sample as bonafide .",
      "There are inconsistencies in the background noise which indicate the room changed . There are inconsistencies in the background noise which indicate the room changed .",
      "Yes, LFCC-15, which a shap value of -0.1785, was used to detect the sample as bonafide . There are inconsistencies in the background noise which indicate the room changed .",
      "Yes, LFCC-15, which a shap value of -0.1785, was used to detect the sample as bonafide .",
      "There are inconsistencies in the background noise which indicate the room changed . There are inconsistencies in the background noise which indicate the room changed .",
      "Yes, LFCC-15, which a shap value of -0.1785, was used to detect the sample as bonafide . There are inconsistencies in the background noise which indicate the room changed .",
      "There are inconsistencies in the background noise which indicate the room changed ."
    ],
    "new_mr": "<inform> inform ( <classification> classification: [ spoof ], <edit_type> edit type: [ environment ]> )"
  },
  {
    "mr": "inform(response[Yes], interpreter[shap], important[MFCC-3], classification[replayed], shap_value[-0.2809])",
    "ref": [
      " -0.2809, MFCC-3, which a shap value of -0.2809, was used to detect the sample as replayed .",
      " Yes, MFCC-3, which a -0.2809 value of -0.2809, was used to detect the sample as replayed .",
      " Yes, MFCC-3, which a shap value of -0.2809.",
      " Yes, MFCC-3, which a sh value of -0.2809, was used to detect the sample as replayed .",
      " Yes, MFC, which a shap value of -0.2809, was used to detect the sample as replayed .",
      "Yes, MFCC-3, which a shap value of -0.2809, was used to detect the sample as replayed .  Yes, MFCC-3, which a shap value of -0.2809, was used to detect the sample as replayed .",
      " Yes, MFCC-3.2809, was used to detect the sample as replayed .",
      "The audio sample was passed to a _model_type_ model for classification .",
      " Yes.2809, was used to detect the sample as replayed .",
      " Ye, MFCC-3, which a shap value of -0.2809, was used to detect the sample as replayed .",
      " Yes, MFCC-3, which a shap value of -0.2809, was used to detect the sample as replayed ."
    ],
    "new_mr": "<inform> inform ( <response> response: [ Yes ], <interpreter> interpreter: [ shap ], <important> important: [ MFCC-3 ], <classification> classification: [ replayed ], <shap_value> shap value: [ -0.2809 ]> )"
  },
  {
    "mr": "inform(extracted[LFCC], model[CNN], important[LFCC-15], classification[replayed])",
    "ref": [
      " the audio sample had LFCC-15 features extracted and LFCC-15-15 was determined to have a large impact on the CNN model that determined the sample to be replayed .",
      " the audio sample had LFCC features extracted and LFCC-15 was determined to have a large impact on the CNN model that determined the sample to be replaye .",
      "The recording file was classified as being replayed by a GMM model .  the audio sample had LFCC features extracted and LFCC-15 was determined to have a large impact on the CNN model that determined the sample to be replayed .",
      " the audio sample had LFCC features extracted and LFCC-15 was determined to have a large impact on the CNN model that determined the sample to be CNN .",
      " the audio sample had LFCC features extracted and replayed was determined to have a large impact on the CNN model that determined the sample to be replayed .",
      " the audio sample had LFCC features extracted and L was determined to have a large impact on the CNN model that determined the sample to be replayed .",
      " the audio sample had LFCC features extracted and LFCC-15 was determined to have a large impact on the LFCC model that determined the sample to be replayed .",
      " the audio sample had LFCC features extracted and LFCC-15 was determined to have a large impact on the C model that determined the sample to be replayed .",
      " the audio sample had L features extracted and L-15 was determined to have a large impact on the CNN model that determined the sample to be replayed .",
      "The recording file was classified as being replayed by a GMM model .",
      " the audio sample had LFCC features extracted and LFCC-15 was determined to have a large impact on the CNN model that determined the sample to be replayed ."
    ],
    "new_mr": "<inform> inform ( <extracted> extracted: [ LFCC ], <model> model: [ CNN ], <important> important: [ LFCC-15 ], <classification> classification: [ replayed ]> )"
  },
  {
    "mr": "inform(extracted[LFCC], model[CNN], important[LFCC-23], classification[bonafide])",
    "ref": [
      " the audio sample had LFCC features extracted and LFCC-23 was determined to have a large impact on the CNN model that determined the sample to be bonafid .",
      " the audio sample had LFC features extracted and LFC-23 was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      " the audio sample had CNN features extracted and CNN-23 was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      " the audio sample had LFCC features extracted and LFCC-23 was determined to have a large impact on the LFCC model that determined the sample to be bonafide .",
      "shap determined that the LFCC-37 feature was one of the more important features by assigning it a value of 0.4431 .",
      " the audio sample had LFCC features extracted and LFC was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      " the audio sample had LFCC features extracted and bonafide was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      "shap determined that the LFCC-37 feature was one of the more important features by assigning it a value of 0.4431 .  the audio sample had LFCC features extracted and LFCC-23 was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      " the audio sample had LFCC features extracted and LFCC-23 was determined to have a large impact on the CN model that determined the sample to be bonafide .",
      " the audio sample had LFCC features extracted and LFCC-23 was determined to have a large impact on the CNN model that determined the sample to be LFCC-23 .",
      " the audio sample had LFCC features extracted and LFCC-23 was determined to have a large impact on the CNN model that determined the sample to be bonafide ."
    ],
    "new_mr": "<inform> inform ( <extracted> extracted: [ LFCC ], <model> model: [ CNN ], <important> important: [ LFCC-23 ], <classification> classification: [ bonafide ]> )"
  },
  {
    "mr": "inform(response[yes], speaker_id[1], feature[LFCC-28], interpreter[shap], shap_value[0.3137])",
    "ref": [
      "Yes, person 1 was detected by LFCC-28 with a shap value of 0.3137 .  Yes, person 1 was detected by LFCC-28 with a shap value of 0.3137 .",
      " Yes, person 1 was detected by yes with a shap value of 0.3137 .",
      "the audio sample had LFCC features extracted and LFCC-55 was determined to have a large impact on the CNN model that determined the sample to be bonafide .  Yes, person 1 was detected by LFCC-28 with a shap value of 0.3137 .",
      " Yes, person 1 was detected by LFCC-28 with a sha value of 0.3137 .",
      "the audio sample had LFCC features extracted and LFCC-55 was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      " Yes, person 1 was detected by LFCC-28 with a shap value of LFCC-28 .",
      " Yes, person  was detected by LFCC-28 with a shap value of 0.337 .",
      " Yes.3137 .",
      " Yes, person yes was detected by LFCC-28 with a shap value of 0.3yes37 .",
      " Yes, person 1 was detected by LFCC-28 with a shap value of 0 .",
      " Yes, person 1 was detected by LFCC-28 with a shap value of 0.3137 ."
    ],
    "new_mr": "<inform> inform ( <response> response: [ yes ], <speaker_id> speaker id: [ 1 ], <feature> feature: [ LFCC-28 ], <interpreter> interpreter: [ shap ], <shap_value> shap value: [ 0.3137 ]> )"
  },
  {
    "mr": "inform(classification[spoof] , edit_type[multi_microphone], signal_start[10])",
    "ref": [
      "The next microphone starts at  seconds .",
      "The next microphone starts at multi_microphone seconds .",
      "Yes, person 3 was detected by LFCC-5 with a shap value of 0.9355 .",
      "Yes, person 3 was detected by LFCC-5 with a shap value of 0.9355 . The next microphone starts at 10 seconds .",
      "The next microphone starts at 10 seconds . The next microphone starts at 10 seconds .",
      "The next microphone starts at  seconds .",
      "The next microphone starts at multi_microphone seconds .",
      "Yes, person 3 was detected by LFCC-5 with a shap value of 0.9355 .",
      "Yes, person 3 was detected by LFCC-5 with a shap value of 0.9355 . The next microphone starts at 10 seconds .",
      "The next microphone starts at 10 seconds . The next microphone starts at 10 seconds .",
      "The next microphone starts at 10 seconds ."
    ],
    "new_mr": "<inform> inform ( <classification> classification: [ spoof ], <, edit_type> , edit type: [ multi_microphone ], <signal_start> signal start: [ 10 ]> )"
  },
  {
    "mr": "inform(interpreter[shap], important[MFCC-3], shap_value[0.8689])",
    "ref": [
      " MFCC-3 determined that the MFCC-3 feature was one of the more important features by assigning it a value of 0.8689 .",
      "the audio sample had LFCC features extracted and LFCC-44 was determined to have a large impact on the CNN model that determined the sample to be replayed .  shap determined that the MFCC-3 feature was one of the more important features by assigning it a value of 0.8689 .",
      "shap determined that the MFCC-3 feature was one of the more important features by assigning it a value of 0.8689 .  shap determined that the MFCC-3 feature was one of the more important features by assigning it a value of 0.8689 .",
      " s determined that the MFCC-3 feature was one of the more important features by assigning it a value of 0.8689 .",
      " shap determined that the 0.8689 feature was one of the more important features by assigning it a value of 0.8689 .",
      " shap determined that the MFCC-3 feature was one of the more important features by assigning it a value of shap .",
      "the audio sample had LFCC features extracted and LFCC-44 was determined to have a large impact on the CNN model that determined the sample to be replayed .",
      " shap determined that the MFCC feature was one of the more important features by assigning it a value of 0.8689 .",
      " shap determined that the MFCC-3 feature was one of the more important features by assigning it a value of 0 .",
      " MFCC-3 determined that the MFCC-3 feature was one of the more important features by assigning it a value of 0.8689 .",
      " shap determined that the MFCC-3 feature was one of the more important features by assigning it a value of 0.8689 ."
    ],
    "new_mr": "<inform> inform ( <interpreter> interpreter: [ shap ], <important> important: [ MFCC-3 ], <shap_value> shap value: [ 0.8689 ]> )"
  },
  {
    "mr": "inform(classification[bonafide], edit_type[none], classified_by[feature])",
    "ref": [
      "No other features were used . No other features were used .",
      "The noise changes significantly at the 20 second mark . No other features were used .",
      "No other feas were used .",
      "No other nones were used .",
      "The noise changes significantly at the 20 second mark .",
      "No other features were used . No other features were used .",
      "The noise changes significantly at the 20 second mark . No other features were used .",
      "No other feas were used .",
      "No other nones were used .",
      "The noise changes significantly at the 20 second mark .",
      "No other features were used ."
    ],
    "new_mr": "<inform> inform ( <classification> classification: [ bonafide ], <edit_type> edit type: [ none ], <classified_by> classified by: [ feature ]> )"
  },
  {
    "mr": "inform(interpreter[shap], important[MFCC-37], shap_value[0.9166])",
    "ref": [
      " shap determined that the MFCC-37 feature was one of the more important features by assigning it a value of 0 .",
      "the audio sample had MFCC features extracted and MFCC-9 was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      " shap determined that the MFCC-37 feature was one of the more important features by assigning it a value of shap .",
      " 0.9166 determined that the MFCC-37 feature was one of the more important features by assigning it a value of 0.9166 .",
      " shap determined that the 0.9166 feature was one of the more important features by assigning it a value of 0.9166 .",
      "the audio sample had MFCC features extracted and MFCC-9 was determined to have a large impact on the CNN model that determined the sample to be bonafide .  shap determined that the MFCC-37 feature was one of the more important features by assigning it a value of 0.9166 .",
      " s determined that the MFCC-37 feature was one of the more important features by assigning it a value of 0.9166 .",
      " shap determined that the MF feature was one of the more important features by assigning it a value of 0.9166 .",
      "shap determined that the MFCC-37 feature was one of the more important features by assigning it a value of 0.9166 .  shap determined that the MFCC-37 feature was one of the more important features by assigning it a value of 0.9166 .",
      " shap determined that the MFCC-37 feature was one of the more important features by assigning it a value of 0 .",
      " shap determined that the MFCC-37 feature was one of the more important features by assigning it a value of 0.9166 ."
    ],
    "new_mr": "<inform> inform ( <interpreter> interpreter: [ shap ], <important> important: [ MFCC-37 ], <shap_value> shap value: [ 0.9166 ]> )"
  },
  {
    "mr": "inform(response[yes], speaker_id[6], feature[LFCC-20], interpreter[shap], shap_value[-0.133])",
    "ref": [
      " Yes.133, was used to detect the id of speaker 6 for the audio sample .",
      " Yes, LF, which a shap value of -0.133, was used to detect the id of speaker 6 for the audio sample .",
      "Yes, LFCC-20, which a shap value of -0.133, was used to detect the id of speaker 6 for the audio sample .  Yes, LFCC-20, which a shap value of -0.133, was used to detect the id of speaker 6 for the audio sample .",
      " Yes, LFCC-20, which a shap value of -, was used to detect the id of speaker 6 for the audio sample .",
      "Yes, MSRCC-1, which a shap value of -0.8637, was used to detect the sample as bonafide .  Yes, LFCC-20, which a shap value of -0.133, was used to detect the id of speaker 6 for the audio sample .",
      " Yes, LFCC-20, which a shap value of -0.133, was used to detect the id of speaker shap for the audio sample .",
      " Yes, LFCC-20, which a shap value of -0.133.",
      " Yes, LFCC-20.133, was used to detect the id of speaker 6 for the audio sample .",
      " Yes, LFCC-20, which a sh value of -0.133, was used to detect the id of speaker 6 for the audio sample .",
      " Yes, -0.133, which a shap value of -0.133, was used to detect the id of speaker 6 for the audio sample .",
      " Yes, LFCC-20, which a shap value of -0.133, was used to detect the id of speaker 6 for the audio sample ."
    ],
    "new_mr": "<inform> inform ( <response> response: [ yes ], <speaker_id> speaker id: [ 6 ], <feature> feature: [ LFCC-20 ], <interpreter> interpreter: [ shap ], <shap_value> shap value: [ -0.133 ]> )"
  },
  {
    "mr": "inform(response[yes], speaker_id[5], feature[LFCC-7], interpreter[shap], shap_value[0.6918])",
    "ref": [
      "The audio is converted .",
      " Yes, person 5 was detected by LFCC-7 with a 0.6918 value of 0.6918 .",
      "The audio is converted .  Yes, person 5 was detected by LFCC-7 with a shap value of 0.6918 .",
      " Yes, person 5 was detected by LFC with a shap value of 0.6918 .",
      " Yes, person 5 was detected by 5 with a shap value of 0.6918 .",
      " Yes, person 5 was detected by LFCC-7 with a s value of 0.6918 .",
      " Yes.6918 .",
      " Yes, person 5 was detected by LFCC-7 with a shap value of LFCC-7 .",
      "Yes, person 5 was detected by LFCC-7 with a shap value of 0.6918 .  Yes, person 5 was detected by LFCC-7 with a shap value of 0.6918 .",
      " Yes, person 0.6918 was detected by LFCC-7 with a shap value of 0.6918 .",
      " Yes, person 5 was detected by LFCC-7 with a shap value of 0.6918 ."
    ],
    "new_mr": "<inform> inform ( <response> response: [ yes ], <speaker_id> speaker id: [ 5 ], <feature> feature: [ LFCC-7 ], <interpreter> interpreter: [ shap ], <shap_value> shap value: [ 0.6918 ]> )"
  },
  {
    "mr": "inform(response[Yes], interpreter[shap], important[MFCC-17], classification[replayed], shap_value[-0.0283])",
    "ref": [
      " Yes, replayed, which a shap value of -0.0283, was used to detect the sample as replayed .",
      " Yes, MF, which a shap value of -0.0283, was used to detect the sample as replayed .",
      " Yes, MFCC-17, which a shap value of -0.0283.",
      " Yes, which a shap value of -0.0283, was used to detect the sample as replayed .",
      "Yes, MFCC-31, which a shap value of -0.0766, was used to detect the id of speaker 3 for the audio sample .",
      " Yes, MFCC-17.0283, was used to detect the sample as replayed .",
      " Yes, MFCC-17, which a shap value of Yes, was used to detect the sample as replayed .",
      " Yes, MFCC-17, which a shap value of -0.0283, was used to detect the sample as MFCC-17 .",
      " Y, MFCC-17, which a shap value of -0.0283, was used to detect the sample as replayed .",
      "Yes, MFCC-17, which a shap value of -0.0283, was used to detect the sample as replayed .  Yes, MFCC-17, which a shap value of -0.0283, was used to detect the sample as replayed .",
      " Yes, MFCC-17, which a shap value of -0.0283, was used to detect the sample as replayed ."
    ],
    "new_mr": "<inform> inform ( <response> response: [ Yes ], <interpreter> interpreter: [ shap ], <important> important: [ MFCC-17 ], <classification> classification: [ replayed ], <shap_value> shap value: [ -0.0283 ]> )"
  },
  {
    "mr": "inform(classification[spoof], edit_type[synthetic],classified_by[feature])",
    "ref": [
      "the audio sample was used in a SVM model tasked at detecting speaker id, determined to be 8 .",
      "The audio file was classified as being synthetic by a CNN model . The audio file was classified as being synthetic by a CNN model .",
      "The audio file was classified as being synthet by a CNN model .",
      "the audio sample was used in a SVM model tasked at detecting speaker id, determined to be 8 . The audio file was classified as being synthetic by a CNN model .",
      "The audio file was classified as being spoof by a CNN model .",
      "the audio sample was used in a SVM model tasked at detecting speaker id, determined to be 8 .",
      "The audio file was classified as being synthetic by a CNN model . The audio file was classified as being synthetic by a CNN model .",
      "The audio file was classified as being synthet by a CNN model .",
      "the audio sample was used in a SVM model tasked at detecting speaker id, determined to be 8 . The audio file was classified as being synthetic by a CNN model .",
      "The audio file was classified as being spoof by a CNN model .",
      "The audio file was classified as being synthetic by a CNN model ."
    ],
    "new_mr": "<inform> inform ( <classification> classification: [ spoof ], <edit_type> edit type: [ synthetic ]> )"
  },
  {
    "mr": "inform(response[yes], speaker_id[4], feature[LFCC-1], interpreter[shap], shap_value[0.7525])",
    "ref": [
      " Yes, person 0.7525 was detected by LFCC-1 with a shap value of 0.7525 .",
      "Yes, the recording is replayed .  Yes, person 4 was detected by LFCC-1 with a shap value of 0.7525 .",
      "Yes, the recording is replayed .",
      " Yes, person 4 was detected by LFCC-1 with a shap value of 0.75 .",
      " Yes, person 4 was detected by LFCC-1 with a shap value of 4 .",
      " Yes, person  was detected by LFCC-1 with a shap value of 0.7525 .",
      " Yes, person 4 was detected by LFCC-1 with a LFCC-1 value of 0.7525 .",
      " Yes, person 4 was detected by 0.7525 with a shap value of 0.7525 .",
      "Yes, person 4 was detected by LFCC-1 with a shap value of 0.7525 .  Yes, person 4 was detected by LFCC-1 with a shap value of 0.7525 .",
      " Yes, person 4 was detected by LFCC-1 with a s value of 0.7525 .",
      " Yes, person 4 was detected by LFCC-1 with a shap value of 0.7525 ."
    ],
    "new_mr": "<inform> inform ( <response> response: [ yes ], <speaker_id> speaker id: [ 4 ], <feature> feature: [ LFCC-1 ], <interpreter> interpreter: [ shap ], <shap_value> shap value: [ 0.7525 ]> )"
  },
  {
    "mr": "inform(classification[bonafide], edit_type[none])",
    "ref": [
      "shap determined that the LFCC-35 feature was one of the more important features by assigning it a value of -0.3461 . The spoofed audio was not a replayed audio .",
      "shap determined that the LFCC-35 feature was one of the more important features by assigning it a value of -0.3461 .",
      "The spoofed audio was a replayed audio .",
      "The spoofed audio was not a replayed audio . The spoofed audio was not a replayed audio .",
      "shap determined that the LFCC-35 feature was one of the more important features by assigning it a value of -0.3461 . The spoofed audio was not a replayed audio .",
      "shap determined that the LFCC-35 feature was one of the more important features by assigning it a value of -0.3461 .",
      "The spoofed audio was a replayed audio .",
      "The spoofed audio was not a replayed audio . The spoofed audio was not a replayed audio .",
      "shap determined that the LFCC-35 feature was one of the more important features by assigning it a value of -0.3461 . The spoofed audio was not a replayed audio .",
      "shap determined that the LFCC-35 feature was one of the more important features by assigning it a value of -0.3461 .",
      "The spoofed audio was not a replayed audio ."
    ],
    "new_mr": "<inform> inform ( <classification> classification: [ bonafide ], <edit_type> edit type: [ none ]> )"
  },
  {
    "mr": "inform(classification[spoof], edit_type[synthetic])",
    "ref": [
      "Yes, MFCC-22, which a shap value of 0.1394, was used to detect the id of speaker 7 for the audio sample .",
      "Yes, MFCC-22, which a shap value of 0.1394, was used to detect the id of speaker 7 for the audio sample . The spoofed audio was a synthetic audio .",
      "The sped audio was a synthetic audio .",
      "The spoofed audio was a spoof audio .",
      "The spoofed audio was a synthet audio .",
      "The spoofed audio was a synthetic audio . The spoofed audio was a synthetic audio .",
      "The syntheticed audio was a synthetic audio .",
      "Yes, MFCC-22, which a shap value of 0.1394, was used to detect the id of speaker 7 for the audio sample .",
      "Yes, MFCC-22, which a shap value of 0.1394, was used to detect the id of speaker 7 for the audio sample . The spoofed audio was a synthetic audio .",
      "The sped audio was a synthetic audio .",
      "The spoofed audio was a synthetic audio ."
    ],
    "new_mr": "<inform> inform ( <classification> classification: [ spoof ], <edit_type> edit type: [ synthetic ]> )"
  },
  {
    "mr": "inform(response[Yes], interpreter[shap], important[LFCC-46], classification[bonafide], shap_value[-0.8192])",
    "ref": [
      " Yes, L, which a shap value of -0.8192, was used to detect the sample as bonafide .",
      " Yes, LFCC-46, which a shap value of -0.8192, was used to detect the sample as shap .",
      " Yes, LFCC-46, which a shap value of bonafide, was used to detect the sample as bonafide .",
      " Yes, LFCC-46, which a s value of -0.8192, was used to detect the sample as bonafide .",
      "Yes, LFCC-4, which a shap value of -0.512, was used to detect the sample as bonafide .  Yes, LFCC-46, which a shap value of -0.8192, was used to detect the sample as bonafide .",
      " Yes, LFCC-46, which a shap value of -0.8192, was used to detect the sample as bonafid .",
      " Yes, LFCC-46, which a shap value of -0.81, was used to detect the sample as bonafide .",
      " Yes, LFCC-46, which a Yes value of -0.8192, was used to detect the sample as bonafide .",
      " Yes, LFCC-46.8192, was used to detect the sample as bonafide .",
      " Yes.8192, was used to detect the sample as bonafide .",
      " Yes, LFCC-46, which a shap value of -0.8192, was used to detect the sample as bonafide ."
    ],
    "new_mr": "<inform> inform ( <response> response: [ Yes ], <interpreter> interpreter: [ shap ], <important> important: [ LFCC-46 ], <classification> classification: [ bonafide ], <shap_value> shap value: [ -0.8192 ]> )"
  },
  {
    "mr": "inform(extracted[PSRCC], model[CNN], important[PSRCC-2], classification[replayed])",
    "ref": [
      " the audio sample had PSRCC features extracted and PSRCC-2 was determined to have a large impact on the replayed model that determined the sample to be replayed .",
      "the audio sample had PSRCC features extracted and PSRCC-2 was determined to have a large impact on the CNN model that determined the sample to be replayed .  the audio sample had PSRCC features extracted and PSRCC-2 was determined to have a large impact on the CNN model that determined the sample to be replayed .",
      "yes, MFCC-10 was used to determine speaker id .  the audio sample had PSRCC features extracted and PSRCC-2 was determined to have a large impact on the CNN model that determined the sample to be replayed .",
      " the audio sample had PSRCC features extracted and PSRCC-2 was determined to have a large impact on the CNN model that determined the sample to be PSRCC .",
      " the audio sample had PSRCC features extracted and PSRCC-2 was determined to have a large impact on the C model that determined the sample to be replayed .",
      " the audio sample had PSRCC features extracted and CNN was determined to have a large impact on the CNN model that determined the sample to be replayed .",
      " the audio sample had PSRCC features extracted and  was determined to have a large impact on the CNN model that determined the sample to be replayed .",
      " the audio sample had PSRCC features extracted and PSRCC-2 was determined to have a large impact on the CNN model that determined the sample to be replay .",
      "yes, MFCC-10 was used to determine speaker id .",
      " the audio sample had PSR features extracted and PSR-2 was determined to have a large impact on the CNN model that determined the sample to be replayed .",
      " the audio sample had PSRCC features extracted and PSRCC-2 was determined to have a large impact on the CNN model that determined the sample to be replayed ."
    ],
    "new_mr": "<inform> inform ( <extracted> extracted: [ PSRCC ], <model> model: [ CNN ], <important> important: [ PSRCC-2 ], <classification> classification: [ replayed ]> )"
  },
  {
    "mr": "inform(interpreter[SHAP], feature[CQCC-2], feature[MFCC-6], feature[LFCC-0], feature[MFCC-1])",
    "ref": [
      "SHAP determined that CQCC-2, MFCC-6, LFCC-0.",
      "SHAP determined that CQCC-2, MFCC-6, CQCC-2, MFCC-1 had the highest impact on classification .",
      "SHAP determined that CQCC-2, MFCC-6.",
      "SHAP determined that CQCC-2.",
      "SHAP determined that CQ, MFCC-6, LFCC-0, MFCC-1 had the highest impact on classification .",
      "yes, MFCC-10 was used to determine speaker id .",
      "SHAP determined that CQCC-2, LFCC-0, MFCC-1 had the highest impact on classification .",
      "SHAP determined that MFCC-6, MFCC-6, LFCC-0, MFCC-1 had the highest impact on classification .",
      " determined that CQCC-2, MFCC-6, LFCC-0, MFCC-1 had the highest impact on classification .",
      "SHAP determined that CQCC-2, MFCC-6, LFCC-, MFCC-1 had the highest impact on classification .",
      "SHAP determined that CQCC-2, MFCC-6, LFCC-0, MFCC-1 had the highest impact on classification ."
    ],
    "new_mr": "<inform> inform ( <interpreter> interpreter: [ SHAP ], <feature> feature: [ CQCC-2 ], <feature> feature: [ MFCC-6 ], <feature> feature: [ LFCC-0 ], <feature> feature: [ MFCC-1 ]> )"
  },
  {
    "mr": "inform(extracted[PSRCC], model[CNN], important[PSRCC-12], classification[replayed])",
    "ref": [
      " the audio sample had PSRCC features extracted and PSRCC-12 was determined to have a large impact on the CNN model that determined the sample to be repl .",
      " the audio sample had PSRCC features extracted and PSRCC was determined to have a large impact on the CNN model that determined the sample to be replayed .",
      " the audio sample had PSRCC features extracted and PSRCC-12 was determined to have a large impact on the CN model that determined the sample to be replayed .",
      " the audio sample had PSRCC features extracted and  was determined to have a large impact on the CNN model that determined the sample to be replayed .",
      " the audio sample had PSRCC features extracted and PSRCC-12 was determined to have a large impact on the CNN model that determined the sample to be PSRCC-12 .",
      " the audio sample had PSRCC features extracted and PSRCC-12 was determined to have a large impact on the PSRCC model that determined the sample to be replayed .",
      "the audio sample had MSRCC features extracted and MSRCC-3 was determined to have a large impact on the CNN model that determined the sample to be replayed .",
      " the audio sample had P features extracted and P-12 was determined to have a large impact on the CNN model that determined the sample to be replayed .",
      "the audio sample had PSRCC features extracted and PSRCC-12 was determined to have a large impact on the CNN model that determined the sample to be replayed .  the audio sample had PSRCC features extracted and PSRCC-12 was determined to have a large impact on the CNN model that determined the sample to be replayed .",
      " the audio sample had CNN features extracted and CNN-12 was determined to have a large impact on the CNN model that determined the sample to be replayed .",
      " the audio sample had PSRCC features extracted and PSRCC-12 was determined to have a large impact on the CNN model that determined the sample to be replayed ."
    ],
    "new_mr": "<inform> inform ( <extracted> extracted: [ PSRCC ], <model> model: [ CNN ], <important> important: [ PSRCC-12 ], <classification> classification: [ replayed ]> )"
  },
  {
    "mr": "inform(response[Yes], interpreter[shap], important[MFCC-34], classification[bonafide], shap_value[0.2379])",
    "ref": [
      " Yes, bonafide, which a shap value of 0.2379, was used to detect the sample as bonafide .",
      " Yes, MFCC-34, was used to detect the sample as bonafide .",
      " Yes, MFCC-34, which a  value of 0.2379, was used to detect the sample as bonafide .",
      " Yes, MFCC-34, which a shap value of 0.2379, was used to detect the sample as shap .",
      " Yes, MFCC-34, which a shap value of 0.2379, was used to detect the sample as bon .",
      " Yes, MFCC-34.2379, was used to detect the sample as bonafide .",
      " MFCC-34, MFCC-34, which a shap value of 0.2379, was used to detect the sample as bonafide .",
      " Yes, MFCC-, which a shap value of 0.2379, was used to detect the sample as bonafide .",
      " Yes, MFCC-34, which a shap value of 0.2379.",
      " Yes, MFCC-34, which a shap value of 0., was used to detect the sample as bonafide .",
      " Yes, MFCC-34, which a shap value of 0.2379, was used to detect the sample as bonafide ."
    ],
    "new_mr": "<inform> inform ( <response> response: [ Yes ], <interpreter> interpreter: [ shap ], <important> important: [ MFCC-34 ], <classification> classification: [ bonafide ], <shap_value> shap value: [ 0.2379 ]> )"
  },
  {
    "mr": "inform(speaker_id[7])",
    "ref": [
      "the audio sample had MSRCC features extracted and MSRCC-11 was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      "  was found to be the id of the speaker in the sample .",
      "7 was found to be the id of the speaker in the sample .  7 was found to be the id of the speaker in the sample .",
      "the audio sample had MSRCC features extracted and MSRCC-11 was determined to have a large impact on the CNN model that determined the sample to be bonafide .  7 was found to be the id of the speaker in the sample .",
      "the audio sample had MSRCC features extracted and MSRCC-11 was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      "  was found to be the id of the speaker in the sample .",
      "7 was found to be the id of the speaker in the sample .  7 was found to be the id of the speaker in the sample .",
      "the audio sample had MSRCC features extracted and MSRCC-11 was determined to have a large impact on the CNN model that determined the sample to be bonafide .  7 was found to be the id of the speaker in the sample .",
      "the audio sample had MSRCC features extracted and MSRCC-11 was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      "  was found to be the id of the speaker in the sample .",
      " 7 was found to be the id of the speaker in the sample ."
    ],
    "new_mr": "<inform> inform ( <speaker_id> speaker id: [ 7 ]> )"
  },
  {
    "mr": "inform(general)",
    "ref": [
      "Mel Frequency Cepstral Coefficients . Mel Frequency Cepstral Coefficients .",
      "shap determined that the LFCC-49 feature was one of the more important features by assigning it a value of -0.6011 . Mel Frequency Cepstral Coefficients .",
      "shap determined that the LFCC-49 feature was one of the more important features by assigning it a value of -0.6011 .",
      "Mel Frequency Cepstral Coefficients . Mel Frequency Cepstral Coefficients .",
      "shap determined that the LFCC-49 feature was one of the more important features by assigning it a value of -0.6011 . Mel Frequency Cepstral Coefficients .",
      "shap determined that the LFCC-49 feature was one of the more important features by assigning it a value of -0.6011 .",
      "Mel Frequency Cepstral Coefficients . Mel Frequency Cepstral Coefficients .",
      "shap determined that the LFCC-49 feature was one of the more important features by assigning it a value of -0.6011 . Mel Frequency Cepstral Coefficients .",
      "shap determined that the LFCC-49 feature was one of the more important features by assigning it a value of -0.6011 .",
      "Mel Frequency Cepstral Coefficients . Mel Frequency Cepstral Coefficients .",
      "Mel Frequency Cepstral Coefficients ."
    ],
    "new_mr": "<inform> inform ( > )"
  },
  {
    "mr": "inform(extracted[LFCC], model[CNN], important[LFCC-11], classification[replayed])",
    "ref": [
      " the audio sample had LFCC features extracted and replayed was determined to have a large impact on the CNN model that determined the sample to be replayed .",
      " the audio sample had LFCC features extracted and LFCC-11 was determined to have a large impact on the CNN model that determined the sample to be LFCC-11 .",
      " the audio sample had replayed features extracted and replayed-11 was determined to have a large impact on the CNN model that determined the sample to be replayed .",
      "the audio sample had LFCC features extracted and LFCC-11 was determined to have a large impact on the CNN model that determined the sample to be replayed .  the audio sample had LFCC features extracted and LFCC-11 was determined to have a large impact on the CNN model that determined the sample to be replayed .",
      " the audio sample had LFCC features extracted and LFCC-11 was determined to have a large impact on the  model that determined the sample to be replayed .",
      " the audio sample had LFCC features extracted and LFCC was determined to have a large impact on the CNN model that determined the sample to be replayed .",
      " the audio sample had LFCC features extracted and LFCC-11 was determined to have a large impact on the replayed model that determined the sample to be replayed .",
      "There was no Reverberation signature .  the audio sample had LFCC features extracted and LFCC-11 was determined to have a large impact on the CNN model that determined the sample to be replayed .",
      "There was no Reverberation signature .",
      " the audio sample had LFCC features extracted and LFCC-11 was determined to have a large impact on the CNN model that determined the sample to be rep .",
      " the audio sample had LFCC features extracted and LFCC-11 was determined to have a large impact on the CNN model that determined the sample to be replayed ."
    ],
    "new_mr": "<inform> inform ( <extracted> extracted: [ LFCC ], <model> model: [ CNN ], <important> important: [ LFCC-11 ], <classification> classification: [ replayed ]> )"
  },
  {
    "mr": "inform(general)",
    "ref": [
      "Linear prediction cepstral coefficients (LPCCs) are derived from the linear prediction coefficients ( LPCs ) by a recursive operation .",
      "Linear prediction cepstral coefficients (LPCCs) are derived from the linear prediction coefficients ( LPCs ) by a recursive operation . Linear Prediction Cepstral Coefficients are an alternative to MFCC in terms of cepstral feature computation is from all-pole representation of signal . Linear prediction cepstral coefficients (LPCCs) are derived from the linear prediction coefficients ( LPCs ) by a recursive operation .",
      "Yes, MFCC-1, which a shap value of -0.5673, was used to detect the sample as replayed .  Yes, MFCC-1, which a shap value of -0.5673, was used to detect the sample as replayed .",
      "Yes, MFCC-1, which a shap value of -0.5673, was used to detect the sample as replayed . Linear prediction cepstral coefficients (LPCCs) are derived from the linear prediction coefficients ( LPCs ) by a recursive operation .",
      "Linear prediction cepstral coefficients (LPCCs) are derived from the linear prediction coefficients ( LPCs ) by a recursive operation . Linear prediction cepstral coefficients (LPCCs) are derived from the linear prediction coefficients ( LPCs ) by a recursive operation . Linear Prediction Cepstral Coefficients are an alternative to MFCC in terms of cepstral feature computation is from all-pole representation of signal . Linear prediction cepstral coefficients (LPCCs) are derived from the linear prediction coefficients ( LPCs ) by a recursive operation .",
      "Linear Prediction Cepstral Coefficients are an alternative to MFCC in terms of cepstral feature computation is from all-pole representation of signal .",
      "Yes, MFCC-1, which a shap value of -0.5673, was used to detect the sample as replayed .  Yes, MFCC-1, which a shap value of -0.5673, was used to detect the sample as replayed . Linear Prediction Cepstral Coefficients are an alternative to MFCC in terms of cepstral feature computation is from all-pole representation of signal . Linear prediction cepstral coefficients (LPCCs) are derived from the linear prediction coefficients ( LPCs ) by a recursive operation .",
      "Yes, MFCC-1, which a shap value of -0.5673, was used to detect the sample as replayed . Linear Prediction Cepstral Coefficients are an alternative to MFCC in terms of cepstral feature computation is from all-pole representation of signal . Linear prediction cepstral coefficients (LPCCs) are derived from the linear prediction coefficients ( LPCs ) by a recursive operation .",
      "Linear prediction cepstral coefficients (LPCCs) are derived from the linear prediction coefficients ( LPCs ) by a recursive operation .",
      "Linear prediction cepstral coefficients (LPCCs) are derived from the linear prediction coefficients ( LPCs ) by a recursive operation . Linear Prediction Cepstral Coefficients are an alternative to MFCC in terms of cepstral feature computation is from all-pole representation of signal . Linear prediction cepstral coefficients (LPCCs) are derived from the linear prediction coefficients ( LPCs ) by a recursive operation .",
      "Linear Prediction Cepstral Coefficients are an alternative to MFCC in terms of cepstral feature computation is from all-pole representation of signal . Linear prediction cepstral coefficients (LPCCs) are derived from the linear prediction coefficients ( LPCs ) by a recursive operation ."
    ],
    "new_mr": "<inform> inform ( > )"
  },
  {
    "mr": "inform(response[yes], speaker_id[3], feature[LFCC-19], interpreter[shap], shap_value[-0.1453])",
    "ref": [
      " Yes, LFCC-19, which a shap value of -0.145LFCC-19, was used to detect the id of speaker LFCC-19 for the audio sample .",
      " Yes, LFCC-19, which a shap value of -, was used to detect the id of speaker 3 for the audio sample .",
      " Yes, LFCC-19, which a -0.1453 value of -0.1453, was used to detect the id of speaker 3 for the audio sample .",
      " Yes, LFCC-19.1453, was used to detect the id of speaker 3 for the audio sample .",
      " Yes, LFCC-19, was used to detect the id of speaker 3 for the audio sample .",
      "Yes, MFCC-21, which a shap value of 0.0724, was used to detect the sample as replayed .",
      "Yes, LFCC-19, which a shap value of -0.1453, was used to detect the id of speaker 3 for the audio sample .  Yes, LFCC-19, which a shap value of -0.1453, was used to detect the id of speaker 3 for the audio sample .",
      " Yes, which a shap value of -0.1453, was used to detect the id of speaker 3 for the audio sample .",
      " Yes, LFCC-1, which a shap value of -0.1453, was used to detect the id of speaker 3 for the audio sample .",
      " Yes, LFCC-19, which a shap value of -0.145, was used to detect the id of speaker  for the audio sample .",
      " Yes, LFCC-19, which a shap value of -0.1453, was used to detect the id of speaker 3 for the audio sample ."
    ],
    "new_mr": "<inform> inform ( <response> response: [ yes ], <speaker_id> speaker id: [ 3 ], <feature> feature: [ LFCC-19 ], <interpreter> interpreter: [ shap ], <shap_value> shap value: [ -0.1453 ]> )"
  },
  {
    "mr": "inform(classification[bonafide], edit_type[none], classified_by[feature])",
    "ref": [
      "Other s also idicate the audio sample is Bonafide .",
      "Yes, person 2 was detected by GTCC-3 with a shap value of 0 .",
      "Other nones also idicate the audio sample is Bonafide .",
      "Other features also idicate the audio sample is Bonafide . Other features also idicate the audio sample is Bonafide .",
      "Yes, person 2 was detected by GTCC-3 with a shap value of 0 . Other features also idicate the audio sample is Bonafide .",
      "Other s also idicate the audio sample is Bonafide .",
      "Yes, person 2 was detected by GTCC-3 with a shap value of 0 .",
      "Other nones also idicate the audio sample is Bonafide .",
      "Other features also idicate the audio sample is Bonafide . Other features also idicate the audio sample is Bonafide .",
      "Yes, person 2 was detected by GTCC-3 with a shap value of 0 . Other features also idicate the audio sample is Bonafide .",
      "Other features also idicate the audio sample is Bonafide ."
    ],
    "new_mr": "<inform> inform ( <classification> classification: [ bonafide ], <edit_type> edit type: [ none ], <classified_by> classified by: [ feature ]> )"
  },
  {
    "mr": "inform(classification[spoof], edit_type[environment], change_at[20])",
    "ref": [
      "Yes, PSRCC-10, which a shap value of -0.1905, was used to detect the sample as replayed . Artificial background noise was added to the recording .",
      "Yes, PSRCC-10, which a shap value of -0.1905, was used to detect the sample as replayed .",
      "Artificial background noise was added to the recording . Artificial background noise was added to the recording .",
      "Yes, PSRCC-10, which a shap value of -0.1905, was used to detect the sample as replayed . Artificial background noise was added to the recording .",
      "Yes, PSRCC-10, which a shap value of -0.1905, was used to detect the sample as replayed .",
      "Artificial background noise was added to the recording . Artificial background noise was added to the recording .",
      "Yes, PSRCC-10, which a shap value of -0.1905, was used to detect the sample as replayed . Artificial background noise was added to the recording .",
      "Yes, PSRCC-10, which a shap value of -0.1905, was used to detect the sample as replayed .",
      "Artificial background noise was added to the recording . Artificial background noise was added to the recording .",
      "Yes, PSRCC-10, which a shap value of -0.1905, was used to detect the sample as replayed . Artificial background noise was added to the recording .",
      "Artificial background noise was added to the recording ."
    ],
    "new_mr": "<inform> inform ( <classification> classification: [ spoof ], <edit_type> edit type: [ environment ], <change_at> change at: [ 20 ]> )"
  },
  {
    "mr": "inform(response[yes], feature[MFCC-11], determined[speaker_id])",
    "ref": [
      "yes, MFCC-11 was used to determine speaker id .  yes, MFCC-11 was used to determine speaker id .",
      "shap determined that the LFCC-52 feature was one of the more important features by assigning it a value of -0.7935 .  yes, MFCC-11 was used to determine speaker id .",
      " yes, MFC was used to determine speaker id .",
      " yes, yes was used to determine speaker id .",
      " ye, MFCC-11 was used to determine speaker id .",
      " yes.",
      "shap determined that the LFCC-52 feature was one of the more important features by assigning it a value of -0.7935 .",
      " speaker_id, MFCC-11 was used to determine speaker id .",
      "yes, MFCC-11 was used to determine speaker id .  yes, MFCC-11 was used to determine speaker id .",
      "shap determined that the LFCC-52 feature was one of the more important features by assigning it a value of -0.7935 .  yes, MFCC-11 was used to determine speaker id .",
      " yes, MFCC-11 was used to determine speaker id ."
    ],
    "new_mr": "<inform> inform ( <response> response: [ yes ], <feature> feature: [ MFCC-11 ], <determined> determined: [ speaker_id ]> )"
  },
  {
    "mr": "inform(interpreter[shap], important[GTCC-6], shap_value[0])",
    "ref": [
      "the audio sample had MSRCC features extracted and MSRCC-9 was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      " shap determined that the GTCC-6 feature was one of the more important features by assigning it a value of shap .",
      " 0 determined that the GTCC-6 feature was one of the more important features by assigning it a value of 0 .",
      " shap determined that the 0 feature was one of the more important features by assigning it a value of 0 .",
      "the audio sample had MSRCC features extracted and MSRCC-9 was determined to have a large impact on the CNN model that determined the sample to be bonafide .  shap determined that the GTCC-6 feature was one of the more important features by assigning it a value of 0 .",
      " sh determined that the GTCC-6 feature was one of the more important features by assigning it a value of 0 .",
      "shap determined that the GTCC-6 feature was one of the more important features by assigning it a value of 0 .  shap determined that the GTCC-6 feature was one of the more important features by assigning it a value of 0 .",
      " shap determined that the GTCC-6 feature was one of the more important features by assigning it a value of  .",
      " shap determined that the GTCC- feature was one of the more important features by assigning it a value of 0 .",
      "the audio sample had MSRCC features extracted and MSRCC-9 was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      " shap determined that the GTCC-6 feature was one of the more important features by assigning it a value of 0 ."
    ],
    "new_mr": "<inform> inform ( <interpreter> interpreter: [ shap ], <important> important: [ GTCC-6 ], <shap_value> shap value: [ 0 ]> )"
  },
  {
    "mr": "inform(classification[bonafide], edit_type[none])",
    "ref": [
      "There is a Reverberation signature . There is a Reverberation signature .",
      "The signal is consistent with a cloned voice .",
      "The signal is consistent with a cloned voice . There is a Reverberation signature .",
      "There is a Reverberation signature . There is a Reverberation signature .",
      "The signal is consistent with a cloned voice .",
      "The signal is consistent with a cloned voice . There is a Reverberation signature .",
      "There is a Reverberation signature . There is a Reverberation signature .",
      "The signal is consistent with a cloned voice .",
      "The signal is consistent with a cloned voice . There is a Reverberation signature .",
      "There is a Reverberation signature . There is a Reverberation signature .",
      "There is a Reverberation signature ."
    ],
    "new_mr": "<inform> inform ( <classification> classification: [ bonafide ], <edit_type> edit type: [ none ]> )"
  },
  {
    "mr": "inform(classification[spoof], edit_type[sampling], sample_start[20])",
    "ref": [
      "The recording appears to be a copy .",
      "The cut is at the 2 second mark . ",
      "The cut is at the spoof second mark . ",
      "The cut is at the 20 second mark . The cut is at the 20 second mark .",
      "The recording appears to be a copy . The cut is at the 20 second mark .",
      "The recording appears to be a copy .",
      "The cut is at the 2 second mark . ",
      "The cut is at the spoof second mark . ",
      "The cut is at the 20 second mark . The cut is at the 20 second mark .",
      "The recording appears to be a copy . The cut is at the 20 second mark .",
      "The cut is at the 20 second mark . "
    ],
    "new_mr": "<inform> inform ( <classification> classification: [ spoof ], <edit_type> edit type: [ sampling ], <sample_start> sample start: [ 20 ]> )"
  },
  {
    "mr": "inform(response[Yes], interpreter[shap], important[PSRCC-7], classification[replayed], shap_value[0.5117])",
    "ref": [
      " Yes, PSRCC-7, which a shap value of 0.5117, was used to detect the sample as re .",
      " Yes, PSRCC-7, which a shap value of shap, was used to detect the sample as replayed .",
      "Yes, part of the recording was played back .",
      " Yes, PSRC, which a shap value of 0.5117, was used to detect the sample as replayed .",
      " 0.5117, PSRCC-7, which a shap value of 0.5117, was used to detect the sample as replayed .",
      " Yes, PSRCC-7, which a replayed value of 0.5117, was used to detect the sample as replayed .",
      "Yes, part of the recording was played back .  Yes, PSRCC-7, which a shap value of 0.5117, was used to detect the sample as replayed .",
      " Ye, PSRCC-7, which a shap value of 0.5117, was used to detect the sample as replayed .",
      " Yes, shap, which a shap value of 0.5117, was used to detect the sample as replayed .",
      " Yes, PSRCC-7, which a shap value of 0.51, was used to detect the sample as replayed .",
      " Yes, PSRCC-7, which a shap value of 0.5117, was used to detect the sample as replayed ."
    ],
    "new_mr": "<inform> inform ( <response> response: [ Yes ], <interpreter> interpreter: [ shap ], <important> important: [ PSRCC-7 ], <classification> classification: [ replayed ], <shap_value> shap value: [ 0.5117 ]> )"
  },
  {
    "mr": "inform(response[yes], feature[MFCC-1], determined[speaker_id])",
    "ref": [
      " MFCC-1, MFCC-1 was used to determine speaker id .",
      "the audio sample had LFCC features extracted and LFCC-43 was determined to have a large impact on the CNN model that determined the sample to be replayed .  yes, MFCC-1 was used to determine speaker id .",
      "the audio sample had LFCC features extracted and LFCC-43 was determined to have a large impact on the CNN model that determined the sample to be replayed .",
      " , MFCC-1 was used to determine speaker id .",
      " yes.",
      "yes, MFCC-1 was used to determine speaker id .  yes, MFCC-1 was used to determine speaker id .",
      " yes, M was used to determine speaker id .",
      " yes, speaker_id was used to determine speaker id .",
      " MFCC-1, MFCC-1 was used to determine speaker id .",
      "the audio sample had LFCC features extracted and LFCC-43 was determined to have a large impact on the CNN model that determined the sample to be replayed .  yes, MFCC-1 was used to determine speaker id .",
      " yes, MFCC-1 was used to determine speaker id ."
    ],
    "new_mr": "<inform> inform ( <response> response: [ yes ], <feature> feature: [ MFCC-1 ], <determined> determined: [ speaker_id ]> )"
  },
  {
    "mr": "inform(interpreter[shap], important[LFCC-47], shap_value[0.6378])",
    "ref": [
      " s determined that the LFCC-47 feature was one of the more important features by assigning it a value of 0.6378 .",
      "the audio sample had LFCC features extracted and LFCC-16 was determined to have a large impact on the CNN model that determined the sample to be bonafide .  shap determined that the LFCC-47 feature was one of the more important features by assigning it a value of 0.6378 .",
      " shap determined that the LFC feature was one of the more important features by assigning it a value of 0.6378 .",
      " shap determined that the LFCC-47 feature was one of the more important features by assigning it a value of LFCC-47 .",
      "the audio sample had LFCC features extracted and LFCC-16 was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      " shap determined that the 0.6378 feature was one of the more important features by assigning it a value of 0.6378 .",
      " shap determined that the LFCC-47 feature was one of the more important features by assigning it a value of  .",
      "shap determined that the LFCC-47 feature was one of the more important features by assigning it a value of 0.6378 .  shap determined that the LFCC-47 feature was one of the more important features by assigning it a value of 0.6378 .",
      " 0.6378 determined that the LFCC-47 feature was one of the more important features by assigning it a value of 0.6378 .",
      " s determined that the LFCC-47 feature was one of the more important features by assigning it a value of 0.6378 .",
      " shap determined that the LFCC-47 feature was one of the more important features by assigning it a value of 0.6378 ."
    ],
    "new_mr": "<inform> inform ( <interpreter> interpreter: [ shap ], <important> important: [ LFCC-47 ], <shap_value> shap value: [ 0.6378 ]> )"
  },
  {
    "mr": "inform(response[Yes], interpreter[shap], important[GTCC-10], classification[replayed], shap_value[0])",
    "ref": [
      "The signal is consistent with a cloned voice .",
      " Yes, , which a shap value of 0, was used to detect the sample as replayed .",
      " Yes, GTCC-10, which a s value of 0, was used to detect the sample as replayed .",
      " Yes, which a shap value of 0, was used to detect the sample as replayed .",
      " Yes, GTCC-10, which a shap value of 0, was used to detect the sample as 0 .",
      "Yes, GTCC-10, which a shap value of 0, was used to detect the sample as replayed .  Yes, GTCC-10, which a shap value of 0, was used to detect the sample as replayed .",
      " Yes, GTCC-10, which a shap value of 0, was used to detect the sample as repla .",
      " Yes, GTCC-1, which a shap value of , was used to detect the sample as replayed .",
      "The signal is consistent with a cloned voice .  Yes, GTCC-10, which a shap value of 0, was used to detect the sample as replayed .",
      " 0, GTCC-10, which a shap value of 0, was used to detect the sample as replayed .",
      " Yes, GTCC-10, which a shap value of 0, was used to detect the sample as replayed ."
    ],
    "new_mr": "<inform> inform ( <response> response: [ Yes ], <interpreter> interpreter: [ shap ], <important> important: [ GTCC-10 ], <classification> classification: [ replayed ], <shap_value> shap value: [ 0 ]> )"
  },
  {
    "mr": "inform(response[Yes], classification[bonafide])",
    "ref": [
      "Yes , the recording was made at the same time . Yes , the recording was made at the same time .",
      "Ye , the recording was made at the same time .",
      "Yes , the recording has been tampered with . Yes , the recording was made at the same time .",
      "Yes , the recording has been tampered with .",
      "bonafide , the recording was made at the same time .",
      "Yes .",
      "Yes , the recording was made at the same time . Yes , the recording was made at the same time .",
      "Ye , the recording was made at the same time .",
      "Yes , the recording has been tampered with . Yes , the recording was made at the same time .",
      "Yes , the recording has been tampered with .",
      "Yes , the recording was made at the same time ."
    ],
    "new_mr": "<inform> inform ( <response> response: [ Yes ], <classification> classification: [ bonafide ]> )"
  },
  {
    "mr": "inform(extracted[MSRCC], model[CNN], important[MSRCC-11], classification[bonafide])",
    "ref": [
      " the audio sample had MSRCC features extracted and MSRCC-11 was determined to have a large impact on the C model that determined the sample to be bonafide .",
      " the audio sample had MSRCC features extracted and MSRCC-11 was determined to have a large impact on the MSRCC-11 model that determined the sample to be bonafide .",
      "Yes, MFCC-19, which a shap value of 0.4159, was used to detect the sample as bonafide .  the audio sample had MSRCC features extracted and MSRCC-11 was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      "Yes, MFCC-19, which a shap value of 0.4159, was used to detect the sample as bonafide .",
      " the audio sample had MS features extracted and MS-11 was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      "the audio sample had MSRCC features extracted and MSRCC-11 was determined to have a large impact on the CNN model that determined the sample to be bonafide .  the audio sample had MSRCC features extracted and MSRCC-11 was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      " the audio sample had MSRCC features extracted and MSRCC-11 was determined to have a large impact on the CNN model that determined the sample to be MSRCC-11 .",
      " the audio sample had MSRCC features extracted and MSRCC was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      " the audio sample had MSRCC features extracted and MSRCC-11 was determined to have a large impact on the CNN model that determined the sample to be  .",
      " the audio sample had MSRCC-11 features extracted and MSRCC-11-11 was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      " the audio sample had MSRCC features extracted and MSRCC-11 was determined to have a large impact on the CNN model that determined the sample to be bonafide ."
    ],
    "new_mr": "<inform> inform ( <extracted> extracted: [ MSRCC ], <model> model: [ CNN ], <important> important: [ MSRCC-11 ], <classification> classification: [ bonafide ]> )"
  },
  {
    "mr": "inform(response[Yes], interpreter[shap], important[MSRCC-10], classification[replayed], shap_value[-0.0292])",
    "ref": [
      " Yes, shap, which a shap value of -0.0292, was used to detect the sample as replayed .",
      " replayed, MSRCC-10, which a shap value of -0.0292, was used to detect the sample as replayed .",
      " Yes, MSRCC, which a shap value of -0.0292, was used to detect the sample as replayed .",
      "Yes, MSRCC-10, which a shap value of -0.0292, was used to detect the sample as replayed .  Yes, MSRCC-10, which a shap value of -0.0292, was used to detect the sample as replayed .",
      " Yes.0292, was used to detect the sample as replayed .",
      " Yes, MSRCC-10, which a shap value of -0.0292.",
      " Yes, MSRCC-10, which a shap value of -0.0, was used to detect the sample as replayed .",
      " Yes, MSRCC-10, which a s value of -0.0292, was used to detect the sample as replayed .",
      " Yes, MSRCC-10, was used to detect the sample as replayed .",
      " Yes, MSRCC-10, which a shap value of -0.0292, was used to detect the sample as repla .",
      " Yes, MSRCC-10, which a shap value of -0.0292, was used to detect the sample as replayed ."
    ],
    "new_mr": "<inform> inform ( <response> response: [ Yes ], <interpreter> interpreter: [ shap ], <important> important: [ MSRCC-10 ], <classification> classification: [ replayed ], <shap_value> shap value: [ -0.0292 ]> )"
  },
  {
    "mr": "inform(classification[spoof], edit_type[environment], change_at[20])",
    "ref": [
      "The noise changes significantly at the  second mark . ",
      "The noise changes significantly at the environment second mark . ",
      "shap determined that the MSRCC-6 feature was one of the more important features by assigning it a value of 0.4591 .",
      "shap determined that the MSRCC-6 feature was one of the more important features by assigning it a value of 0.4591 . The noise changes significantly at the 20 second mark .",
      "The noise changes significantly at the 20 second mark . The noise changes significantly at the 20 second mark .",
      "The noise changes significantly at the  second mark . ",
      "The noise changes significantly at the environment second mark . ",
      "shap determined that the MSRCC-6 feature was one of the more important features by assigning it a value of 0.4591 .",
      "shap determined that the MSRCC-6 feature was one of the more important features by assigning it a value of 0.4591 . The noise changes significantly at the 20 second mark .",
      "The noise changes significantly at the 20 second mark . The noise changes significantly at the 20 second mark .",
      "The noise changes significantly at the 20 second mark . "
    ],
    "new_mr": "<inform> inform ( <classification> classification: [ spoof ], <edit_type> edit type: [ environment ], <change_at> change at: [ 20 ]> )"
  },
  {
    "mr": "inform(interpreter[SHAP], task[important_features])",
    "ref": [
      "The SHA values indicate the contribution of the features on the outcome of the classification model .",
      "shap determined that the LFCC-50 feature was one of the more important features by assigning it a value of -0.7007 . The SHAP values indicate the contribution of the features on the outcome of the classification model .",
      "The SHAP values indicate the contribution of the features on the outcome of the classification model . The SHAP values indicate the contribution of the features on the outcome of the classification model .",
      "shap determined that the LFCC-50 feature was one of the more important features by assigning it a value of -0.7007 .",
      "The important_features values indicate the contribution of the features on the outcome of the classification model .",
      "The SHA values indicate the contribution of the features on the outcome of the classification model .",
      "shap determined that the LFCC-50 feature was one of the more important features by assigning it a value of -0.7007 . The SHAP values indicate the contribution of the features on the outcome of the classification model .",
      "The SHAP values indicate the contribution of the features on the outcome of the classification model . The SHAP values indicate the contribution of the features on the outcome of the classification model .",
      "shap determined that the LFCC-50 feature was one of the more important features by assigning it a value of -0.7007 .",
      "The important_features values indicate the contribution of the features on the outcome of the classification model .",
      "The SHAP values indicate the contribution of the features on the outcome of the classification model ."
    ],
    "new_mr": "<inform> inform ( <interpreter> interpreter: [ SHAP ], <task> task: [ important_features ]> )"
  },
  {
    "mr": "inform(extracted[PSRCC], model[CNN], important[PSRCC-5], classification[bonafide])",
    "ref": [
      "Several features show this is a Conversion sample .",
      " the audio sample had PSRCC features extracted and PSRCC-5 was determined to have a large impact on the CN model that determined the sample to be bonafide .",
      " the audio sample had PSRCC features extracted and PSRCC-5 was determined to have a large impact on the PSRCC-5 model that determined the sample to be bonafide .",
      " the audio sample had PSRCC features extracted and PSRCC-5 was determined to have a large impact on the CNN model that determined the sample to be bo .",
      " the audio sample had PSR features extracted and PSR-5 was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      " the audio sample had PSRCC features extracted and PSRCC-5 was determined to have a large impact on the CNN model that determined the sample to be CNN .",
      "Several features show this is a Conversion sample .  the audio sample had PSRCC features extracted and PSRCC-5 was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      "the audio sample had PSRCC features extracted and PSRCC-5 was determined to have a large impact on the CNN model that determined the sample to be bonafide .  the audio sample had PSRCC features extracted and PSRCC-5 was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      " the audio sample had PSRCC-5 features extracted and PSRCC-5-5 was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      " the audio sample had PSRCC features extracted and  was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      " the audio sample had PSRCC features extracted and PSRCC-5 was determined to have a large impact on the CNN model that determined the sample to be bonafide ."
    ],
    "new_mr": "<inform> inform ( <extracted> extracted: [ PSRCC ], <model> model: [ CNN ], <important> important: [ PSRCC-5 ], <classification> classification: [ bonafide ]> )"
  },
  {
    "mr": "inform(extracted[MFCC], extracted[GTCC], model[SVM], speaker_id[5])",
    "ref": [
      "The audio sample had GTCC and MFCC features extracted and passed through a trained SVM which determined the id of speaker 5 .  The audio sample had GTCC and MFCC features extracted and passed through a trained SVM which determined the id of speaker 5 .",
      " The audio sample had GTCC and MFCC features extracted and passed through a trained GTCC which determined the id of speaker 5 .",
      "The audio sample had GTCC and MFCC features extracted and passed through a trained SVM which determined the id of speaker 3 .  The audio sample had GTCC and MFCC features extracted and passed through a trained SVM which determined the id of speaker 5 .",
      " The audio sample had GTCC and MFCC features extracted and passed through a trained SV which determined the id of speaker 5 .",
      " The audio sample had GTCC and MFCC features extracted and passed through a trained SVM which determined the id of speaker  .",
      " The audio sample had GTCC and MFCC features extracted and passed through a trained SVM which determined the id of speaker MFCC .",
      " The audio sample had GTCC and  features extracted and passed through a trained SVM which determined the id of speaker 5 .",
      " The audio sample had GT and MFCC features extracted and passed through a trained SVM which determined the id of speaker 5 .",
      " The audio sample had 5 and MFCC features extracted and passed through a trained SVM which determined the id of speaker 5 .",
      "The audio sample had GTCC and MFCC features extracted and passed through a trained SVM which determined the id of speaker 3 .",
      " The audio sample had GTCC and MFCC features extracted and passed through a trained SVM which determined the id of speaker 5 ."
    ],
    "new_mr": "<inform> inform ( <extracted> extracted: [ MFCC ], <extracted> extracted: [ GTCC ], <model> model: [ SVM ], <speaker_id> speaker id: [ 5 ]> )"
  },
  {
    "mr": "inform(response[yes], speaker_id[1], feature[GTCC-5], interpreter[shap], shap_value[0])",
    "ref": [
      " Yes, GTCC-5, which a sha value of 0, was used to detect the id of speaker 1 for the audio sample .",
      " Yes, GTCC-5, which a shap value of , was used to detect the id of speaker 1 for the audio sample .",
      " Yes, GTCC-5, which a GTCC-5 value of 0, was used to detect the id of speaker 1 for the audio sample .",
      "Yes, GTCC-5, which a shap value of 0, was used to detect the id of speaker 1 for the audio sample .  Yes, GTCC-5, which a shap value of 0, was used to detect the id of speaker 1 for the audio sample .",
      " Yes, 0, which a shap value of 0, was used to detect the id of speaker 1 for the audio sample .",
      " Yes, , which a shap value of 0, was used to detect the id of speaker 1 for the audio sample .",
      "Yes, LFCC-36, which a shap value of -0.1149, was used to detect the sample as bonafide .  Yes, GTCC-5, which a shap value of 0, was used to detect the id of speaker 1 for the audio sample .",
      " Yes, GTCC-5, which a shap value of yes, was used to detect the id of speaker 1 for the audio sample .",
      " Yes, GTCC-5, which a shap value of 0.",
      " Yes, GTCC-5, which a shap value of 0, was used to detect the id of speaker yes for the audio sample .",
      " Yes, GTCC-5, which a shap value of 0, was used to detect the id of speaker 1 for the audio sample ."
    ],
    "new_mr": "<inform> inform ( <response> response: [ yes ], <speaker_id> speaker id: [ 1 ], <feature> feature: [ GTCC-5 ], <interpreter> interpreter: [ shap ], <shap_value> shap value: [ 0 ]> )"
  },
  {
    "mr": "inform(extracted[LFCC], model[CNN], important[LFCC-15], classification[bonafide])",
    "ref": [
      " the audio sample had LFCC features extracted and LFCC-15 was determined to have a large impact on the CNN model that determined the sample to be bonaf .",
      " the audio sample had L features extracted and L-15 was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      " the audio sample had CNN features extracted and CNN-15 was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      "Yes, MFCC-8, which a shap value of -0.7314, was used to detect the id of speaker 2 for the audio sample .  the audio sample had LFCC features extracted and LFCC-15 was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      " the audio sample had LFCC features extracted and CNN was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      " the audio sample had LFCC features extracted and LFCC-15 was determined to have a large impact on the LFCC model that determined the sample to be bonafide .",
      "Yes, MFCC-8, which a shap value of -0.7314, was used to detect the id of speaker 2 for the audio sample .",
      " the audio sample had LFCC features extracted and LFCC-15 was determined to have a large impact on the  model that determined the sample to be bonafide .",
      "the audio sample had LFCC features extracted and LFCC-15 was determined to have a large impact on the CNN model that determined the sample to be bonafide .  the audio sample had LFCC features extracted and LFCC-15 was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      " the audio sample had LFCC features extracted and LFCC-1 was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      " the audio sample had LFCC features extracted and LFCC-15 was determined to have a large impact on the CNN model that determined the sample to be bonafide ."
    ],
    "new_mr": "<inform> inform ( <extracted> extracted: [ LFCC ], <model> model: [ CNN ], <important> important: [ LFCC-15 ], <classification> classification: [ bonafide ]> )"
  },
  {
    "mr": "inform(response[yes], speaker_id[4], feature[LFCC-8], interpreter[shap], shap_value[0.1088])",
    "ref": [
      " Yes, LFCC-8.1088, was used to detect the id of speaker 4 for the audio sample .",
      "the audio sample had MFCC features extracted and MFCC-2 was determined to have a large impact on the CNN model that determined the sample to be replayed .",
      " Yes, LFCC-8, which a shap value of shap, was used to detect the id of speaker 4 for the audio sample .",
      " Yes, which a shap value of 0.1088, was used to detect the id of speaker 4 for the audio sample .",
      " Yes, 0.1088, which a shap value of 0.1088, was used to detect the id of speaker 4 for the audio sample .",
      " Yes, LFCC-8, which a shap value of 0.1088.",
      " Yes, LFCC-8, which a shap value of 0.1088, was used to detect the id of speaker  for the audio sample .",
      " Yes, LF, which a shap value of 0.1088, was used to detect the id of speaker 4 for the audio sample .",
      " Yes, LFCC-8, which a shap value of 0.1088, was used to detect the id of speaker shap for the audio sample .",
      " Yes, LFCC-8, which a 4 value of 0.1088, was used to detect the id of speaker 4 for the audio sample .",
      " Yes, LFCC-8, which a shap value of 0.1088, was used to detect the id of speaker 4 for the audio sample ."
    ],
    "new_mr": "<inform> inform ( <response> response: [ yes ], <speaker_id> speaker id: [ 4 ], <feature> feature: [ LFCC-8 ], <interpreter> interpreter: [ shap ], <shap_value> shap value: [ 0.1088 ]> )"
  },
  {
    "mr": "inform(classification[spoof], known_mic_signature[dynamic])",
    "ref": [
      "There is evidence of sampling .",
      "Dynamic microphones were used the most . Dynamic microphones were used the most .",
      "There is evidence of sampling . Dynamic microphones were used the most .",
      "There is evidence of sampling .",
      "Dynamic microphones were used the most . Dynamic microphones were used the most .",
      "There is evidence of sampling . Dynamic microphones were used the most .",
      "There is evidence of sampling .",
      "Dynamic microphones were used the most . Dynamic microphones were used the most .",
      "There is evidence of sampling . Dynamic microphones were used the most .",
      "There is evidence of sampling .",
      "Dynamic microphones were used the most ."
    ],
    "new_mr": "<inform> inform ( <classification> classification: [ spoof ], <known_mic_signature> known mic signature: [ dynamic ]> )"
  },
  {
    "mr": "inform(extracted[MSRCC], model[CNN], important[MSRCC-1], classification[bonafide])",
    "ref": [
      "Yes, LFCC-8, which a shap value of 0.1088, was used to detect the id of speaker 4 for the audio sample .",
      " the audio sample had MSRCC features extracted and MSRCC-1 was determined to have a large impact on the bonafide model that determined the sample to be bonafide .",
      "Yes, LFCC-8, which a shap value of 0.1088, was used to detect the id of speaker 4 for the audio sample .  the audio sample had MSRCC features extracted and MSRCC-1 was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      " the audio sample had MSRCC features extracted and MSRCC-1 was determined to have a large impact on the CNN model that determined the sample to be CNN .",
      " the audio sample had MSRCC-1 features extracted and MSRCC-1-1 was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      "the audio sample had MSRCC features extracted and MSRCC-1 was determined to have a large impact on the CNN model that determined the sample to be bonafide .  the audio sample had MSRCC features extracted and MSRCC-1 was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      " the audio sample had MSRCC features extracted and MSRCC-1 was determined to have a large impact on the CNN model that determined the sample to be bona .",
      " the audio sample had MSRCC features extracted and bonafide was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      " the audio sample had MSRCC features extracted and MSRCC-1 was determined to have a large impact on the C model that determined the sample to be bonafide .",
      " the audio sample had MS features extracted and MS-1 was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      " the audio sample had MSRCC features extracted and MSRCC-1 was determined to have a large impact on the CNN model that determined the sample to be bonafide ."
    ],
    "new_mr": "<inform> inform ( <extracted> extracted: [ MSRCC ], <model> model: [ CNN ], <important> important: [ MSRCC-1 ], <classification> classification: [ bonafide ]> )"
  },
  {
    "mr": "inform(response[Yes], interpreter[shap], important[MFCC-19], classification[replayed], shap_value[-0.8568])",
    "ref": [
      " Yes, MFCC-19, which a shap value of -0.8568.",
      " Yes, MFCC-19, which a shap value of Yes, was used to detect the sample as replayed .",
      "shap determined that the MSRCC-2 feature was one of the more important features by assigning it a value of -0.2448 .  Yes, MFCC-19, which a shap value of -0.8568, was used to detect the sample as replayed .",
      " Yes, MFCC-19, which a shap value of -0.8568, was used to detect the sample as -0.8568 .",
      " , MFCC-19, which a shap value of -0.8568, was used to detect the sample as replayed .",
      " Yes.8568, was used to detect the sample as replayed .",
      " Yes, MFCC-19, which a shap value of -0.8568, was used to detect the sample as replaye .",
      " Yes, MFCC-19, which a shap value of -0, was used to detect the sample as replayed .",
      "Yes, MFCC-19, which a shap value of -0.8568, was used to detect the sample as replayed .  Yes, MFCC-19, which a shap value of -0.8568, was used to detect the sample as replayed .",
      " Yes, MFCC-19, which a sh value of -0.8568, was used to detect the sample as replayed .",
      " Yes, MFCC-19, which a shap value of -0.8568, was used to detect the sample as replayed ."
    ],
    "new_mr": "<inform> inform ( <response> response: [ Yes ], <interpreter> interpreter: [ shap ], <important> important: [ MFCC-19 ], <classification> classification: [ replayed ], <shap_value> shap value: [ -0.8568 ]> )"
  },
  {
    "mr": "inform(response[yes], speaker_id[2], feature[PSRCC-8], interpreter[shap], shap_value[-0.7012])",
    "ref": [
      " Yes, -0.7012, which a shap value of -0.7012, was used to detect the id of speaker 2 for the audio sample .",
      "Yes, GTCC-2, which a shap value of 1, was used to detect the sample as replayed .  Yes, PSRCC-8, which a shap value of -0.7012, was used to detect the id of speaker 2 for the audio sample .",
      " Yes, PSRCC-8, was used to detect the id of speaker 2 for the audio sample .",
      " Yes, PSRCC-8, which a shap value of -0.701shap, was used to detect the id of speaker shap for the audio sample .",
      " Yes, which a shap value of -0.7012, was used to detect the id of speaker 2 for the audio sample .",
      " Yes, PSRCC-8, which a shap value of -0.701, was used to detect the id of speaker  for the audio sample .",
      "Yes, GTCC-2, which a shap value of 1, was used to detect the sample as replayed .",
      " Yes, PSRCC-8, which a s value of -0.7012, was used to detect the id of speaker 2 for the audio sample .",
      " Yes.7012, was used to detect the id of speaker 2 for the audio sample .",
      " Yes, PSRCC-8, which a shap value of -0., was used to detect the id of speaker 2 for the audio sample .",
      " Yes, PSRCC-8, which a shap value of -0.7012, was used to detect the id of speaker 2 for the audio sample ."
    ],
    "new_mr": "<inform> inform ( <response> response: [ yes ], <speaker_id> speaker id: [ 2 ], <feature> feature: [ PSRCC-8 ], <interpreter> interpreter: [ shap ], <shap_value> shap value: [ -0.7012 ]> )"
  },
  {
    "mr": "inform(response[Yes], interpreter[shap], important[MFCC-26], classification[bonafide], shap_value[-0.4524])",
    "ref": [
      " Yes, which a shap value of -0.4524, was used to detect the sample as bonafide .",
      " Yes, MFCC-26, was used to detect the sample as bonafide .",
      " Yes, Yes, which a shap value of -0.4524, was used to detect the sample as bonafide .",
      " Y, MFCC-26, which a shap value of -0.4524, was used to detect the sample as bonafide .",
      " Yes, MFCC-26, which a  value of -0.4524, was used to detect the sample as bonafide .",
      "The audio sample had GTCC and MFCC features extracted and passed through a trained SVM which determined the id of speaker 5 .",
      "Yes, MFCC-26, which a shap value of -0.4524, was used to detect the sample as bonafide .  Yes, MFCC-26, which a shap value of -0.4524, was used to detect the sample as bonafide .",
      " Yes, MFCC-26, which a shap value of -0., was used to detect the sample as bonafide .",
      " Yes, MFCC-26, which a shap value of -0.4524, was used to detect the sample as bonafid .",
      " Yes, MFCC-26, which a shap value of MFCC-26, was used to detect the sample as bonafide .",
      " Yes, MFCC-26, which a shap value of -0.4524, was used to detect the sample as bonafide ."
    ],
    "new_mr": "<inform> inform ( <response> response: [ Yes ], <interpreter> interpreter: [ shap ], <important> important: [ MFCC-26 ], <classification> classification: [ bonafide ], <shap_value> shap value: [ -0.4524 ]> )"
  },
  {
    "mr": "inform(extracted[LFCC], model[CNN], important[LFCC-34], classification[bonafide])",
    "ref": [
      " the audio sample had LFCC features extracted and LFCC-34 was determined to have a large impact on the CNN model that determined the sample to be CNN .",
      " the audio sample had LFCC features extracted and LFCC-34 was determined to have a large impact on the CNN model that determined the sample to be bo .",
      " the audio sample had  features extracted and -34 was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      "the audio sample had LFCC features extracted and LFCC-34 was determined to have a large impact on the CNN model that determined the sample to be bonafide .  the audio sample had LFCC features extracted and LFCC-34 was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      "the audio sample had MSRCC features extracted and MSRCC-8 was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      " the audio sample had LFCC features extracted and LFCC-34 was determined to have a large impact on the CN model that determined the sample to be bonafide .",
      " the audio sample had LFCC features extracted and LFCC-34 was determined to have a large impact on the bonafide model that determined the sample to be bonafide .",
      " the audio sample had CNN features extracted and CNN-34 was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      "the audio sample had MSRCC features extracted and MSRCC-8 was determined to have a large impact on the CNN model that determined the sample to be bonafide .  the audio sample had LFCC features extracted and LFCC-34 was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      " the audio sample had LFCC features extracted and bonafide was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      " the audio sample had LFCC features extracted and LFCC-34 was determined to have a large impact on the CNN model that determined the sample to be bonafide ."
    ],
    "new_mr": "<inform> inform ( <extracted> extracted: [ LFCC ], <model> model: [ CNN ], <important> important: [ LFCC-34 ], <classification> classification: [ bonafide ]> )"
  },
  {
    "mr": "inform(response[Yes], interpreter[shap], important[MFCC-38], classification[replayed], shap_value[-0.0316])",
    "ref": [
      " Yes, MFCC-38, which a s value of -0.0316, was used to detect the sample as replayed .",
      " Yes.0316, was used to detect the sample as replayed .",
      " Yes, MFCC-38.0316, was used to detect the sample as replayed .",
      " Yes, MFCC-38, which a Yes value of -0.0316, was used to detect the sample as replayed .",
      " Yes, MFCC-38, which a shap value of -0.03, was used to detect the sample as replayed .",
      " Yes, which a shap value of -0.0316, was used to detect the sample as replayed .",
      " Yes, M, which a shap value of -0.0316, was used to detect the sample as replayed .",
      " Yes, MFCC-38, which a shap value of -0.0316, was used to detect the sample as repla .",
      " Yes, MFCC-38, which a shap value of MFCC-38, was used to detect the sample as replayed .",
      " Yes, MFCC-38, which a shap value of -0.0316.",
      " Yes, MFCC-38, which a shap value of -0.0316, was used to detect the sample as replayed ."
    ],
    "new_mr": "<inform> inform ( <response> response: [ Yes ], <interpreter> interpreter: [ shap ], <important> important: [ MFCC-38 ], <classification> classification: [ replayed ], <shap_value> shap value: [ -0.0316 ]> )"
  },
  {
    "mr": "inform(classification[spoof], change_length[5])",
    "ref": [
      "the audio sample had LFCC features extracted and LFCC-12 was determined to have a large impact on the CNN model that determined the sample to be bonafide . That microphone was used for 5 seconds .",
      "the audio sample had LFCC features extracted and LFCC-12 was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      "That microphone was used for  seconds .",
      "That microphone was used for spoof seconds .",
      "That microphone was used for 5 seconds . That microphone was used for 5 seconds .",
      "the audio sample had LFCC features extracted and LFCC-12 was determined to have a large impact on the CNN model that determined the sample to be bonafide . That microphone was used for 5 seconds .",
      "the audio sample had LFCC features extracted and LFCC-12 was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      "That microphone was used for  seconds .",
      "That microphone was used for spoof seconds .",
      "That microphone was used for 5 seconds . That microphone was used for 5 seconds .",
      "That microphone was used for 5 seconds ."
    ],
    "new_mr": "<inform> inform ( <classification> classification: [ spoof ], <change_length> change length: [ 5 ]> )"
  },
  {
    "mr": "inform(response[Yes], interpreter[shap], important[LFCC-34], classification[bonafide], shap_value[-0.3612])",
    "ref": [
      " Yes, LFCC-34, which a shap value of -0, was used to detect the sample as bonafide .",
      " Yes, LFCC-34, which a shap value of LFCC-34, was used to detect the sample as bonafide .",
      "Dynamic microphones were used the most .",
      "Dynamic microphones were used the most .  Yes, LFCC-34, which a shap value of -0.3612, was used to detect the sample as bonafide .",
      " Yes, LFCC-34, which a shap value of -0.3612, was used to detect the sample as -0.3612 .",
      " Ye, LFCC-34, which a shap value of -0.3612, was used to detect the sample as bonafide .",
      " Yes, LF, which a shap value of -0.3612, was used to detect the sample as bonafide .",
      " Yes, LFCC-34.3612, was used to detect the sample as bonafide .",
      " Yes, LFCC-34, which a shap value of -0.3612, was used to detect the sample as bon .",
      " Yes, which a shap value of -0.3612, was used to detect the sample as bonafide .",
      " Yes, LFCC-34, which a shap value of -0.3612, was used to detect the sample as bonafide ."
    ],
    "new_mr": "<inform> inform ( <response> response: [ Yes ], <interpreter> interpreter: [ shap ], <important> important: [ LFCC-34 ], <classification> classification: [ bonafide ], <shap_value> shap value: [ -0.3612 ]> )"
  },
  {
    "mr": "inform(response[Yes], interpreter[shap], important[PSRCC-4], classification[bonafide], shap_value[0.5129])",
    "ref": [
      " Yes, shap, which a shap value of 0.5129, was used to detect the sample as bonafide .",
      " Yes, PSRCC-4, which a shap value of bonafide, was used to detect the sample as bonafide .",
      " Yes, PSRCC-4, was used to detect the sample as bonafide .",
      " 0.5129, PSRCC-4, which a shap value of 0.5129, was used to detect the sample as bonafide .",
      " Yes, PSRCC-4, which a shap value of 0.5129, was used to detect the sample as bonaf .",
      "the audio sample had LFCC features extracted and LFCC-5 was determined to have a large impact on the CNN model that determined the sample to be bonafide .  Yes, PSRCC-4, which a shap value of 0.5129, was used to detect the sample as bonafide .",
      " Yes, which a shap value of 0.5129, was used to detect the sample as bonafide .",
      " Yes, PSRCC-4, which a shap value of 0.5129.",
      "the audio sample had LFCC features extracted and LFCC-5 was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      " Yes, PSRCC-4, which a bonafide value of 0.5129, was used to detect the sample as bonafide .",
      " Yes, PSRCC-4, which a shap value of 0.5129, was used to detect the sample as bonafide ."
    ],
    "new_mr": "<inform> inform ( <response> response: [ Yes ], <interpreter> interpreter: [ shap ], <important> important: [ PSRCC-4 ], <classification> classification: [ bonafide ], <shap_value> shap value: [ 0.5129 ]> )"
  },
  {
    "mr": "inform(extracted[MFCC], model[CNN], important[MFCC-4], classification[replayed])",
    "ref": [
      " the audio sample had MFCC-4 features extracted and MFCC-4-4 was determined to have a large impact on the CNN model that determined the sample to be replayed .",
      " the audio sample had MFCC features extracted and MFCC was determined to have a large impact on the CNN model that determined the sample to be replayed .",
      "Yes, LFCC-36, which a shap value of 0.4853, was used to detect the id of speaker 1 for the audio sample .  the audio sample had MFCC features extracted and MFCC-4 was determined to have a large impact on the CNN model that determined the sample to be replayed .",
      "the audio sample had MFCC features extracted and MFCC-4 was determined to have a large impact on the CNN model that determined the sample to be replayed .  the audio sample had MFCC features extracted and MFCC-4 was determined to have a large impact on the CNN model that determined the sample to be replayed .",
      " the audio sample had MFCC features extracted and MFCC-4 was determined to have a large impact on the CNN model that determined the sample to be rep .",
      " the audio sample had M features extracted and M-4 was determined to have a large impact on the CNN model that determined the sample to be replayed .",
      "Yes, LFCC-36, which a shap value of 0.4853, was used to detect the id of speaker 1 for the audio sample .",
      " the audio sample had MFCC features extracted and MFCC-4 was determined to have a large impact on the replayed model that determined the sample to be replayed .",
      " the audio sample had MFCC features extracted and MFCC-4 was determined to have a large impact on the  model that determined the sample to be replayed .",
      " the audio sample had MFCC features extracted and MFCC-4 was determined to have a large impact on the CNN model that determined the sample to be MFCC .",
      " the audio sample had MFCC features extracted and MFCC-4 was determined to have a large impact on the CNN model that determined the sample to be replayed ."
    ],
    "new_mr": "<inform> inform ( <extracted> extracted: [ MFCC ], <model> model: [ CNN ], <important> important: [ MFCC-4 ], <classification> classification: [ replayed ]> )"
  },
  {
    "mr": "inform(response[yes], speaker_id[2], feature[PSRCC-4], interpreter[shap], shap_value[-0.4072])",
    "ref": [
      " Yes, person 2 was detected by PSRCC-4 with a shap value of -0.4 .",
      " Yes, person  was detected by PSRCC-4 with a shap value of -0.407 .",
      " Yes, person 2 was detected by yes with a shap value of -0.4072 .",
      "The microphone signature is consistent throughout the recording .",
      " Yes, person shap was detected by PSRCC-4 with a shap value of -0.407shap .",
      "Yes, person 2 was detected by PSRCC-4 with a shap value of -0.4072 .  Yes, person 2 was detected by PSRCC-4 with a shap value of -0.4072 .",
      " Yes.4072 .",
      " Yes, person 2 was detected by  with a shap value of -0.4072 .",
      " Yes, person 2 was detected by PSRCC-4 with a shap value of shap .",
      " Yes, person 2 was detected by PSRCC-4 with a yes value of -0.4072 .",
      " Yes, person 2 was detected by PSRCC-4 with a shap value of -0.4072 ."
    ],
    "new_mr": "<inform> inform ( <response> response: [ yes ], <speaker_id> speaker id: [ 2 ], <feature> feature: [ PSRCC-4 ], <interpreter> interpreter: [ shap ], <shap_value> shap value: [ -0.4072 ]> )"
  },
  {
    "mr": "inform(response[Yes], interpreter[shap], important[GTCC-1], classification[bonafide], shap_value[0])",
    "ref": [
      " Yes, GTCC-1, was used to detect the sample as bonafide .",
      " Ye, GTCC-1, which a shap value of 0, was used to detect the sample as bonafide .",
      "Yes, GTCC-1, which a shap value of 0, was used to detect the sample as bonafide .  Yes, GTCC-1, which a shap value of 0, was used to detect the sample as bonafide .",
      " Yes, GTCC-1, which a bonafide value of 0, was used to detect the sample as bonafide .",
      "Yes, person 5 was detected by GTCC-12 with a shap value of 0 .",
      " Yes, GTC, which a shap value of 0, was used to detect the sample as bonafide .",
      " Yes, which a shap value of 0, was used to detect the sample as bonafide .",
      " Yes, GTCC-1.",
      " Yes, bonafide, which a shap value of 0, was used to detect the sample as bonafide .",
      " Yes, GTCC-1, which a shap value of 0.",
      " Yes, GTCC-1, which a shap value of 0, was used to detect the sample as bonafide ."
    ],
    "new_mr": "<inform> inform ( <response> response: [ Yes ], <interpreter> interpreter: [ shap ], <important> important: [ GTCC-1 ], <classification> classification: [ bonafide ], <shap_value> shap value: [ 0 ]> )"
  },
  {
    "mr": "inform(response[Yes], interpreter[shap], important[LFCC-28], classification[bonafide], shap_value[-0.7878])",
    "ref": [
      " Yes, LFCC-28, which a shap value of -0.7878, was used to detect the sample as bonafi .",
      "Yes, PSRCC-10, which a shap value of 0.8682, was used to detect the sample as bonafide .  Yes, LFCC-28, which a shap value of -0.7878, was used to detect the sample as bonafide .",
      " Yes, LFCC-28, which a shap value of , was used to detect the sample as bonafide .",
      "Yes, PSRCC-10, which a shap value of 0.8682, was used to detect the sample as bonafide .",
      " Yes, LFCC-28, which a s value of -0.7878, was used to detect the sample as bonafide .",
      "Yes, LFCC-28, which a shap value of -0.7878, was used to detect the sample as bonafide .  Yes, LFCC-28, which a shap value of -0.7878, was used to detect the sample as bonafide .",
      " Yes, LFCC-28, which a shap value of -0.7878.",
      " Yes.7878, was used to detect the sample as bonafide .",
      " Yes, LFCC-28, was used to detect the sample as bonafide .",
      " Ye, LFCC-28, which a shap value of -0.7878, was used to detect the sample as bonafide .",
      " Yes, LFCC-28, which a shap value of -0.7878, was used to detect the sample as bonafide ."
    ],
    "new_mr": "<inform> inform ( <response> response: [ Yes ], <interpreter> interpreter: [ shap ], <important> important: [ LFCC-28 ], <classification> classification: [ bonafide ], <shap_value> shap value: [ -0.7878 ]> )"
  },
  {
    "mr": "inform(general)",
    "ref": [
      "shap determined that the LFCC-30 feature was one of the more important features by assigning it a value of 0.7143 .  shap determined that the LFCC-30 feature was one of the more important features by assigning it a value of 0.7143 .",
      "Then  SSFCs are then obtained by performing logarithm and DCT on the SSFs . Subband Spectral Flux Coefficients are calculated by First , the subband spectral flux (SSF) of the i-th subband of the t-th speech frame is computed . Then  SSFCs are then obtained by performing logarithm and DCT on the SSFs .",
      "Subband Spectral Flux Coefficients are calculated by First , the subband spectral flux (SSF) of the i-th subband of the t-th speech frame is computed .  shap determined that the LFCC-30 feature was one of the more important features by assigning it a value of 0.7143 . Then  SSFCs are then obtained by performing logarithm and DCT on the SSFs .",
      "shap determined that the LFCC-30 feature was one of the more important features by assigning it a value of 0.7143 . Subband Spectral Flux Coefficients are calculated by First , the subband spectral flux (SSF) of the i-th subband of the t-th speech frame is computed .  shap determined that the LFCC-30 feature was one of the more important features by assigning it a value of 0.7143 . Then  SSFCs are then obtained by performing logarithm and DCT on the SSFs .",
      "shap determined that the LFCC-30 feature was one of the more important features by assigning it a value of 0.7143 . Then  SSFCs are then obtained by performing logarithm and DCT on the SSFs .",
      "Then  SSFCs are then obtained by performing logarithm and DCT on the SSFs . Then  SSFCs are then obtained by performing logarithm and DCT on the SSFs . Subband Spectral Flux Coefficients are calculated by First , the subband spectral flux (SSF) of the i-th subband of the t-th speech frame is computed . Then  SSFCs are then obtained by performing logarithm and DCT on the SSFs .",
      "Subband Spectral Flux Coefficients are calculated by First . Then  SSFCs are then obtained by performing logarithm and DCT on the SSFs .",
      "Then  SSFCs are then obtained by performing logarithm and DCT on the SSFs .",
      "Subband Spectral Flux Coefficients are calculated by First , the subband spectral flux (SSF) of the i-th subband of the t-th speech frame is computed .",
      "shap determined that the LFCC-30 feature was one of the more important features by assigning it a value of 0.7143 .  shap determined that the LFCC-30 feature was one of the more important features by assigning it a value of 0.7143 .",
      "Subband Spectral Flux Coefficients are calculated by First , the subband spectral flux (SSF) of the i-th subband of the t-th speech frame is computed . Then  SSFCs are then obtained by performing logarithm and DCT on the SSFs ."
    ],
    "new_mr": "<inform> inform ( > )"
  },
  {
    "mr": "inform(response[yes], feature[GTCC-5], determined[speaker_id])",
    "ref": [
      "Spectral Centroid Frequency Coefficients .  yes, GTCC-5 was used to determine speaker id .",
      " yes, GTCC was used to determine speaker id .",
      " yes, yes was used to determine speaker id .",
      "Spectral Centroid Frequency Coefficients .",
      " ye, GTCC-5 was used to determine speaker id .",
      " speaker_id, GTCC-5 was used to determine speaker id .",
      " yes.",
      "yes, GTCC-5 was used to determine speaker id .  yes, GTCC-5 was used to determine speaker id .",
      "Spectral Centroid Frequency Coefficients .  yes, GTCC-5 was used to determine speaker id .",
      " yes, GTCC was used to determine speaker id .",
      " yes, GTCC-5 was used to determine speaker id ."
    ],
    "new_mr": "<inform> inform ( <response> response: [ yes ], <feature> feature: [ GTCC-5 ], <determined> determined: [ speaker_id ]> )"
  },
  {
    "mr": "inform(response[yes], speaker_id[1], feature[LFCC-17], interpreter[shap], shap_value[-0.5241])",
    "ref": [
      " Yes, LFCC-17, which a shap value of yes, was used to detect the id of speaker 1 for the audio sample .",
      "shap determined that the LFCC-19 feature was one of the more important features by assigning it a value of 0.5217 .",
      " Yes, LFCC-17, which a 1 value of -0.5241, was used to detect the id of speaker 1 for the audio sample .",
      " Yes, LFCC-7, which a shap value of -0.524, was used to detect the id of speaker  for the audio sample .",
      " Yes, LFCC-shap7, which a shap value of -0.524shap, was used to detect the id of speaker shap for the audio sample .",
      "Yes, LFCC-17, which a shap value of -0.5241, was used to detect the id of speaker 1 for the audio sample .  Yes, LFCC-17, which a shap value of -0.5241, was used to detect the id of speaker 1 for the audio sample .",
      " Yes, LFCC-17, which a shap value of -, was used to detect the id of speaker 1 for the audio sample .",
      " Yes, LFCC-17, which a shap value of -0.5241.",
      " Yes, LFCC, which a shap value of -0.5241, was used to detect the id of speaker 1 for the audio sample .",
      " Yes.5241, was used to detect the id of speaker 1 for the audio sample .",
      " Yes, LFCC-17, which a shap value of -0.5241, was used to detect the id of speaker 1 for the audio sample ."
    ],
    "new_mr": "<inform> inform ( <response> response: [ yes ], <speaker_id> speaker id: [ 1 ], <feature> feature: [ LFCC-17 ], <interpreter> interpreter: [ shap ], <shap_value> shap value: [ -0.5241 ]> )"
  },
  {
    "mr": "inform(response[yes], speaker_id[1], feature[LFCC-22], interpreter[shap], shap_value[0.7829])",
    "ref": [
      " Yes, LFCC-22, which a shap value of 0.7829, was used to detect the id of speaker 0.7829 for the audio sample .",
      " Yes, which a shap value of 0.7829, was used to detect the id of speaker 1 for the audio sample .",
      " Yes.7829, was used to detect the id of speaker 1 for the audio sample .",
      " Yes, LFCC-22, which a shap value of 0.7829.",
      "Yes, MSRCC-5, which a shap value of 0.0597, was used to detect the sample as replayed .",
      " Yes, LFCC-22, which a shap value of 0.782, was used to detect the id of speaker 1 for the audio sample .",
      "Yes, MSRCC-5, which a shap value of 0.0597, was used to detect the sample as replayed .  Yes, LFCC-22, which a shap value of 0.7829, was used to detect the id of speaker 1 for the audio sample .",
      " Yes, LFCC-22, which a shap value of 0.7829, was used to detect the id of speaker  for the audio sample .",
      " Yes, LFCC-22, was used to detect the id of speaker 1 for the audio sample .",
      " Yes, 0.7829, which a shap value of 0.7829, was used to detect the id of speaker 1 for the audio sample .",
      " Yes, LFCC-22, which a shap value of 0.7829, was used to detect the id of speaker 1 for the audio sample ."
    ],
    "new_mr": "<inform> inform ( <response> response: [ yes ], <speaker_id> speaker id: [ 1 ], <feature> feature: [ LFCC-22 ], <interpreter> interpreter: [ shap ], <shap_value> shap value: [ 0.7829 ]> )"
  },
  {
    "mr": "inform(response[yes], speaker_id[3], feature[LFCC-6], interpreter[shap], shap_value[0.46])",
    "ref": [
      " Yes, LFCC-6, which a shap value of 0.46.",
      " Yes, LFCC-6, which a sha value of 0.46, was used to detect the id of speaker 3 for the audio sample .",
      " Yes, which a shap value of 0.46, was used to detect the id of speaker 3 for the audio sample .",
      " Yes, shap, which a shap value of 0.46, was used to detect the id of speaker 3 for the audio sample .",
      "the audio sample had LFCC features extracted and LFCC-52 was determined to have a large impact on the CNN model that determined the sample to be bonafide .  Yes, LFCC-6, which a shap value of 0.46, was used to detect the id of speaker 3 for the audio sample .",
      " Yes, LFCC-6, which a shap value of shap, was used to detect the id of speaker 3 for the audio sample .",
      " Yes.46, was used to detect the id of speaker 3 for the audio sample .",
      " Yes, LFCC-6.46, was used to detect the id of speaker 3 for the audio sample .",
      " Yes, LFCC-6, which a shap value of 0.46, was used to detect the id of speaker yes for the audio sample .",
      " Yes, LFCC-6, which a yes value of 0.46, was used to detect the id of speaker 3 for the audio sample .",
      " Yes, LFCC-6, which a shap value of 0.46, was used to detect the id of speaker 3 for the audio sample ."
    ],
    "new_mr": "<inform> inform ( <response> response: [ yes ], <speaker_id> speaker id: [ 3 ], <feature> feature: [ LFCC-6 ], <interpreter> interpreter: [ shap ], <shap_value> shap value: [ 0.46 ]> )"
  },
  {
    "mr": "inform(response[yes], speaker_id[3], feature[MFCC-7], interpreter[shap], shap_value[0.7878])",
    "ref": [
      " Yes, which a shap value of 0.7878, was used to detect the id of speaker 3 for the audio sample .",
      " Yes, MFCC-7, which a 3 value of 0.7878, was used to detect the id of speaker 3 for the audio sample .",
      "Yes, LFCC-37, which a shap value of 0.4298, was used to detect the sample as replayed .  Yes, MFCC-7, which a shap value of 0.7878, was used to detect the id of speaker 3 for the audio sample .",
      "Yes, MFCC-7, which a shap value of 0.7878, was used to detect the id of speaker 3 for the audio sample .  Yes, MFCC-7, which a shap value of 0.7878, was used to detect the id of speaker 3 for the audio sample .",
      " Yes, MFCC-7, which a shap value of MFCC-7, was used to detect the id of speaker 3 for the audio sample .",
      " Yes, MFCC-7, which a shap value of 0.7878.",
      " Yes, MFCC-7, which a shap value of , was used to detect the id of speaker 3 for the audio sample .",
      " Yes, yes, which a shap value of 0.7878, was used to detect the id of speaker 3 for the audio sample .",
      " Yes, MFCC-7.7878, was used to detect the id of speaker 3 for the audio sample .",
      " Yes, MFCC-7, was used to detect the id of speaker 3 for the audio sample .",
      " Yes, MFCC-7, which a shap value of 0.7878, was used to detect the id of speaker 3 for the audio sample ."
    ],
    "new_mr": "<inform> inform ( <response> response: [ yes ], <speaker_id> speaker id: [ 3 ], <feature> feature: [ MFCC-7 ], <interpreter> interpreter: [ shap ], <shap_value> shap value: [ 0.7878 ]> )"
  },
  {
    "mr": "inform(response[yes], speaker_id[2], feature[LFCC-4], interpreter[shap], shap_value[0.2638])",
    "ref": [
      " Yes, LFCC-4, which a shap value of 0.yes638, was used to detect the id of speaker yes for the audio sample .",
      " Yes, L, which a shap value of 0.2638, was used to detect the id of speaker 2 for the audio sample .",
      "Yes, LFCC-45, which a shap value of 0.7923, was used to detect the sample as replayed .",
      " Yes.2638, was used to detect the id of speaker 2 for the audio sample .",
      " Yes, LFCC-4, which a shap value of 0.638, was used to detect the id of speaker  for the audio sample .",
      " Yes, LFCC-4.2638, was used to detect the id of speaker 2 for the audio sample .",
      " Yes, LFCC-4, which a shap value of yes, was used to detect the id of speaker 2 for the audio sample .",
      " Yes, which a shap value of 0.2638, was used to detect the id of speaker 2 for the audio sample .",
      "Yes, LFCC-4, which a shap value of 0.2638, was used to detect the id of speaker 2 for the audio sample .  Yes, LFCC-4, which a shap value of 0.2638, was used to detect the id of speaker 2 for the audio sample .",
      " Yes, LFCC-4, which a shap value of 0.2638.",
      " Yes, LFCC-4, which a shap value of 0.2638, was used to detect the id of speaker 2 for the audio sample ."
    ],
    "new_mr": "<inform> inform ( <response> response: [ yes ], <speaker_id> speaker id: [ 2 ], <feature> feature: [ LFCC-4 ], <interpreter> interpreter: [ shap ], <shap_value> shap value: [ 0.2638 ]> )"
  },
  {
    "mr": "inform(response[yes], speaker_id[4], feature[MFCC-14], interpreter[shap], shap_value[-0.4302])",
    "ref": [
      "the audio sample had LFCC features extracted and LFCC-35 was determined to have a large impact on the CNN model that determined the sample to be replayed .",
      "the audio sample had LFCC features extracted and LFCC-35 was determined to have a large impact on the CNN model that determined the sample to be replayed .  Yes, person 4 was detected by MFCC-14 with a shap value of -0.4302 .",
      " Yes, person 4 was detected by MFCC-14 with a shap value of -0.430 .",
      " Yes, person 4 was detected by MFCC-14 with a sh value of -0.4302 .",
      " Yes, person 4 was detected by MFCC-1 with a shap value of -0.4302 .",
      " Yes, person 4 was detected by MFCC-14 with a shap value of yes .",
      " Yes, person 4 was detected by shap with a shap value of -0.4302 .",
      " Yes, person 4 was detected by MFCC-14 with a MFCC-14 value of -0.4302 .",
      " Yes, person  was detected by MFCC-1 with a shap value of -0.302 .",
      " Yes, person MFCC-14 was detected by MFCC-1MFCC-14 with a shap value of -0.MFCC-14302 .",
      " Yes, person 4 was detected by MFCC-14 with a shap value of -0.4302 ."
    ],
    "new_mr": "<inform> inform ( <response> response: [ yes ], <speaker_id> speaker id: [ 4 ], <feature> feature: [ MFCC-14 ], <interpreter> interpreter: [ shap ], <shap_value> shap value: [ -0.4302 ]> )"
  },
  {
    "mr": "inform(interpreter[shap], important[MSRCC-5], shap_value[0.2454])",
    "ref": [
      " shap determined that the MSRCC-5 feature was one of the more important features by assigning it a value of shap .",
      " shap determined that the shap feature was one of the more important features by assigning it a value of 0.2454 .",
      " shap determined that the MSRCC-5 feature was one of the more important features by assigning it a value of 0.245 .",
      " shap determined that the MSRCC feature was one of the more important features by assigning it a value of 0.2454 .",
      " 0.2454 determined that the MSRCC-5 feature was one of the more important features by assigning it a value of 0.2454 .",
      "shap determined that the MSRCC-5 feature was one of the more important features by assigning it a value of 0.2454 .  shap determined that the MSRCC-5 feature was one of the more important features by assigning it a value of 0.2454 .",
      "the audio sample had LFCC features extracted and LFCC-28 was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      "  determined that the MSRCC-5 feature was one of the more important features by assigning it a value of 0.2454 .",
      "the audio sample had LFCC features extracted and LFCC-28 was determined to have a large impact on the CNN model that determined the sample to be bonafide .  shap determined that the MSRCC-5 feature was one of the more important features by assigning it a value of 0.2454 .",
      " shap determined that the MSRCC-5 feature was one of the more important features by assigning it a value of shap .",
      " shap determined that the MSRCC-5 feature was one of the more important features by assigning it a value of 0.2454 ."
    ],
    "new_mr": "<inform> inform ( <interpreter> interpreter: [ shap ], <important> important: [ MSRCC-5 ], <shap_value> shap value: [ 0.2454 ]> )"
  },
  {
    "mr": "inform(response[yes], speaker_id[5], feature[MFCC-40], interpreter[shap], shap_value[0.9729])",
    "ref": [
      "Yes, MSRCC-5, which a shap value of 0.0597, was used to detect the sample as replayed .",
      " Yes, person  was detected by MFCC-40 with a shap value of 0.9729 .",
      " Yes, person 5 was detected by shap with a shap value of 0.9729 .",
      " Yes.9729 .",
      " Yes, person 5 was detected by MFCC-40 with a sha value of 0.9729 .",
      "Yes, person 5 was detected by MFCC-40 with a shap value of 0.9729 .  Yes, person 5 was detected by MFCC-40 with a shap value of 0.9729 .",
      " Yes, person 5 was detected by MFCC-40 with a yes value of 0.9729 .",
      " Yes, person 5 was detected by MFC with a shap value of 0.9729 .",
      " Yes, person 5 was detected by MFCC-40 with a shap value of 0.9 .",
      " Yes, person 5 was detected by MFCC-40 with a shap value of MFCC-40 .",
      " Yes, person 5 was detected by MFCC-40 with a shap value of 0.9729 ."
    ],
    "new_mr": "<inform> inform ( <response> response: [ yes ], <speaker_id> speaker id: [ 5 ], <feature> feature: [ MFCC-40 ], <interpreter> interpreter: [ shap ], <shap_value> shap value: [ 0.9729 ]> )"
  },
  {
    "mr": "inform(classification[spoofed], spoof_type[converted], model[CNN])",
    "ref": [
      "The recording file was classified as being converted by a C model .",
      "Yes, person 1 was detected by GTCC-8 with a shap value of 0 .",
      "The recording file was classified as being converte by a CNN model .",
      "The recording file was classified as being converted by a CNN model . The recording file was classified as being converted by a CNN model .",
      "Yes, person 1 was detected by GTCC-8 with a shap value of 0 . The recording file was classified as being converted by a CNN model .",
      "The recording file was classified as being CNN by a CNN model .",
      "The recording file was classified as being converted by a converted model .",
      "The recording file was classified as being converted by a C model .",
      "Yes, person 1 was detected by GTCC-8 with a shap value of 0 .",
      "The recording file was classified as being converte by a CNN model .",
      "The recording file was classified as being converted by a CNN model ."
    ],
    "new_mr": "<inform> inform ( <classification> classification: [ spoofed ], <spoof_type> spoof type: [ converted ], <model> model: [ CNN ]> )"
  },
  {
    "mr": "inform(extracted[MSRCC], model[CNN], important[MSRCC-0], classification[replayed])",
    "ref": [
      " the audio sample had MSRCC features extracted and MSR was determined to have a large impact on the CNN model that determined the sample to be replayed .",
      "Yes, GTCC-2, which a shap value of 1, was used to detect the sample as replayed .",
      "the audio sample had MSRCC features extracted and MSRCC-0 was determined to have a large impact on the CNN model that determined the sample to be replayed .  the audio sample had MSRCC features extracted and MSRCC-0 was determined to have a large impact on the CNN model that determined the sample to be replayed .",
      " the audio sample had replayed features extracted and replayed-0 was determined to have a large impact on the CNN model that determined the sample to be replayed .",
      " the audio sample had M features extracted and M-0 was determined to have a large impact on the CNN model that determined the sample to be replayed .",
      " the audio sample had MSRCC features extracted and MSRCC-0 was determined to have a large impact on the C model that determined the sample to be replayed .",
      " the audio sample had MSRCC features extracted and MSRCC-0 was determined to have a large impact on the MSRCC model that determined the sample to be replayed .",
      " the audio sample had MSRCC features extracted and MSRCC-0 was determined to have a large impact on the CNN model that determined the sample to be MSRCC-0 .",
      "Yes, GTCC-2, which a shap value of 1, was used to detect the sample as replayed .  the audio sample had MSRCC features extracted and MSRCC-0 was determined to have a large impact on the CNN model that determined the sample to be replayed .",
      " the audio sample had MSRCC features extracted and MSRCC-0 was determined to have a large impact on the CNN model that determined the sample to be  .",
      " the audio sample had MSRCC features extracted and MSRCC-0 was determined to have a large impact on the CNN model that determined the sample to be replayed ."
    ],
    "new_mr": "<inform> inform ( <extracted> extracted: [ MSRCC ], <model> model: [ CNN ], <important> important: [ MSRCC-0 ], <classification> classification: [ replayed ]> )"
  },
  {
    "mr": "inform(speaker_id[7])",
    "ref": [
      " person  spoke the audio sample .",
      "the audio sample had LFCC features extracted and LFCC-52 was determined to have a large impact on the CNN model that determined the sample to be replayed .",
      "the audio sample had LFCC features extracted and LFCC-52 was determined to have a large impact on the CNN model that determined the sample to be replayed .  person 7 spoke the audio sample .",
      "person 7 spoke the audio sample .  person 7 spoke the audio sample .",
      " person  spoke the audio sample .",
      "the audio sample had LFCC features extracted and LFCC-52 was determined to have a large impact on the CNN model that determined the sample to be replayed .",
      "the audio sample had LFCC features extracted and LFCC-52 was determined to have a large impact on the CNN model that determined the sample to be replayed .  person 7 spoke the audio sample .",
      "person 7 spoke the audio sample .  person 7 spoke the audio sample .",
      " person  spoke the audio sample .",
      "the audio sample had LFCC features extracted and LFCC-52 was determined to have a large impact on the CNN model that determined the sample to be replayed .",
      " person 7 spoke the audio sample ."
    ],
    "new_mr": "<inform> inform ( <speaker_id> speaker id: [ 7 ]> )"
  },
  {
    "mr": "inform(response[yes], feature[MFCC-7], determined[speaker_id])",
    "ref": [
      " yes, yes was used to determine speaker id .",
      " y, MFCC-7 was used to determine speaker id .",
      " yes, MFCC- was used to determine speaker id .",
      "Yes, MFCC-19, which a shap value of 0.4159, was used to detect the sample as bonafide .",
      "Yes, MFCC-19, which a shap value of 0.4159, was used to detect the sample as bonafide .  yes, MFCC-7 was used to determine speaker id .",
      "yes, MFCC-7 was used to determine speaker id .  yes, MFCC-7 was used to determine speaker id .",
      " yes.",
      " speaker_id, MFCC-7 was used to determine speaker id .",
      " yes, yes was used to determine speaker id .",
      " y, MFCC-7 was used to determine speaker id .",
      " yes, MFCC-7 was used to determine speaker id ."
    ],
    "new_mr": "<inform> inform ( <response> response: [ yes ], <feature> feature: [ MFCC-7 ], <determined> determined: [ speaker_id ]> )"
  },
  {
    "mr": "inform(classification[spoof], edit_type[speed], edit_start[5])",
    "ref": [
      "Yes, person 4 was detected by LFCC-47 with a shap value of -0.8006 . The recording is a little faster between the five and ten second mark .",
      "Yes, person 4 was detected by LFCC-47 with a shap value of -0.8006 .",
      "The recording is a little faster between the five and ten second mark . The recording is a little faster between the five and ten second mark .",
      "Yes, person 4 was detected by LFCC-47 with a shap value of -0.8006 . The recording is a little faster between the five and ten second mark .",
      "Yes, person 4 was detected by LFCC-47 with a shap value of -0.8006 .",
      "The recording is a little faster between the five and ten second mark . The recording is a little faster between the five and ten second mark .",
      "Yes, person 4 was detected by LFCC-47 with a shap value of -0.8006 . The recording is a little faster between the five and ten second mark .",
      "Yes, person 4 was detected by LFCC-47 with a shap value of -0.8006 .",
      "The recording is a little faster between the five and ten second mark . The recording is a little faster between the five and ten second mark .",
      "Yes, person 4 was detected by LFCC-47 with a shap value of -0.8006 . The recording is a little faster between the five and ten second mark .",
      "The recording is a little faster between the five and ten second mark ."
    ],
    "new_mr": "<inform> inform ( <classification> classification: [ spoof ], <edit_type> edit type: [ speed ], <edit_start> edit start: [ 5 ]> )"
  },
  {
    "mr": "inform(response[yes], feature[GTCC-13], determined[speaker_id])",
    "ref": [
      " yes, speaker_id was used to determine speaker id .",
      "yes, GTCC-13 was used to determine speaker id .  yes, GTCC-13 was used to determine speaker id .",
      " yes.",
      " speaker_id, GTCC-13 was used to determine speaker id .",
      " y, GTCC-13 was used to determine speaker id .",
      "The next microphone starts at 10 seconds .  yes, GTCC-13 was used to determine speaker id .",
      " yes, GT was used to determine speaker id .",
      "The next microphone starts at 10 seconds .",
      " yes, speaker_id was used to determine speaker id .",
      "yes, GTCC-13 was used to determine speaker id .  yes, GTCC-13 was used to determine speaker id .",
      " yes, GTCC-13 was used to determine speaker id ."
    ],
    "new_mr": "<inform> inform ( <response> response: [ yes ], <feature> feature: [ GTCC-13 ], <determined> determined: [ speaker_id ]> )"
  },
  {
    "mr": "inform(response[Yes], interpreter[shap], important[LFCC-26], classification[replayed], shap_value[0.6994])",
    "ref": [
      " Yes, Yes, which a shap value of 0.6994, was used to detect the sample as replayed .",
      " Yes.6994, was used to detect the sample as replayed .",
      " replayed, LFCC-26, which a shap value of 0.6994, was used to detect the sample as replayed .",
      " Yes, LFCC-26, which a sha value of 0.6994, was used to detect the sample as replayed .",
      " Yes, LFCC-26.6994, was used to detect the sample as replayed .",
      " Yes, LFCC-26, which a replayed value of 0.6994, was used to detect the sample as replayed .",
      " Yes, LFCC-26, which a shap value of Yes, was used to detect the sample as replayed .",
      "Yes, LFCC-26, which a shap value of 0.6994, was used to detect the sample as replayed .  Yes, LFCC-26, which a shap value of 0.6994, was used to detect the sample as replayed .",
      " Yes, which a shap value of 0.6994, was used to detect the sample as replayed .",
      " Yes, LFCC-26, which a shap value of 0.6994.",
      " Yes, LFCC-26, which a shap value of 0.6994, was used to detect the sample as replayed ."
    ],
    "new_mr": "<inform> inform ( <response> response: [ Yes ], <interpreter> interpreter: [ shap ], <important> important: [ LFCC-26 ], <classification> classification: [ replayed ], <shap_value> shap value: [ 0.6994 ]> )"
  },
  {
    "mr": "inform(general)",
    "ref": [
      "The SHAP values indicate the contribution of the features on the outcome of the classification model . The SHAP values indicate the contribution of the features on the outcome of the classification model .",
      "Linear Frequency Cepstral Coefficients .",
      "Linear Frequency Cepstral Coefficients . The SHAP values indicate the contribution of the features on the outcome of the classification model .",
      "The SHAP values indicate the contribution of the features on the outcome of the classification model . The SHAP values indicate the contribution of the features on the outcome of the classification model .",
      "Linear Frequency Cepstral Coefficients .",
      "Linear Frequency Cepstral Coefficients . The SHAP values indicate the contribution of the features on the outcome of the classification model .",
      "The SHAP values indicate the contribution of the features on the outcome of the classification model . The SHAP values indicate the contribution of the features on the outcome of the classification model .",
      "Linear Frequency Cepstral Coefficients .",
      "Linear Frequency Cepstral Coefficients . The SHAP values indicate the contribution of the features on the outcome of the classification model .",
      "The SHAP values indicate the contribution of the features on the outcome of the classification model . The SHAP values indicate the contribution of the features on the outcome of the classification model .",
      "The SHAP values indicate the contribution of the features on the outcome of the classification model ."
    ],
    "new_mr": "<inform> inform ( > )"
  },
  {
    "mr": "inform(extracted[LFCC], model[CNN], important[LFCC-38], classification[bonafide])",
    "ref": [
      "The signal is consistent with a cloned voice .  the audio sample had LFCC features extracted and LFCC-38 was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      " the audio sample had LFCC features extracted and bonafide was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      " the audio sample had LFCC features extracted and LFCC-38 was determined to have a large impact on the CNN model that determined the sample to be CNN .",
      "the audio sample had LFCC features extracted and LFCC-38 was determined to have a large impact on the CNN model that determined the sample to be bonafide .  the audio sample had LFCC features extracted and LFCC-38 was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      "The signal is consistent with a cloned voice .",
      " the audio sample had LFCC features extracted and LFCC-38 was determined to have a large impact on the LFCC model that determined the sample to be bonafide .",
      " the audio sample had LFCC features extracted and LFCC-38 was determined to have a large impact on the C model that determined the sample to be bonafide .",
      " the audio sample had LF features extracted and LF-38 was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      " the audio sample had LFCC features extracted and LFCC-38 was determined to have a large impact on the CNN model that determined the sample to be bonafi .",
      " the audio sample had bonafide features extracted and bonafide-38 was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      " the audio sample had LFCC features extracted and LFCC-38 was determined to have a large impact on the CNN model that determined the sample to be bonafide ."
    ],
    "new_mr": "<inform> inform ( <extracted> extracted: [ LFCC ], <model> model: [ CNN ], <important> important: [ LFCC-38 ], <classification> classification: [ bonafide ]> )"
  },
  {
    "mr": "inform(response[yes], speaker_id[5], feature[LFCC-24], interpreter[shap], shap_value[-0.4413])",
    "ref": [
      " Yes.4413 .",
      "Yes, person 5 was detected by LFCC-24 with a shap value of -0.4413 .  Yes, person 5 was detected by LFCC-24 with a shap value of -0.4413 .",
      " Yes, person 5 was detected by LFCC-24 with a shap value of -0 .",
      " Yes, person 5 was detected by LFCC-24 with a sh value of -0.4413 .",
      " Yes, person -0.4413 was detected by LFCC-24 with a shap value of -0.4413 .",
      " Yes, person  was detected by LFCC-24 with a shap value of -0.4413 .",
      "Yes, MFCC-3, which a shap value of -0.2809, was used to detect the sample as replayed .  Yes, person 5 was detected by LFCC-24 with a shap value of -0.4413 .",
      "Yes, MFCC-3, which a shap value of -0.2809, was used to detect the sample as replayed .",
      " Yes, person 5 was detected by LFCC with a shap value of -0.4413 .",
      " Yes, person 5 was detected by yes with a shap value of -0.4413 .",
      " Yes, person 5 was detected by LFCC-24 with a shap value of -0.4413 ."
    ],
    "new_mr": "<inform> inform ( <response> response: [ yes ], <speaker_id> speaker id: [ 5 ], <feature> feature: [ LFCC-24 ], <interpreter> interpreter: [ shap ], <shap_value> shap value: [ -0.4413 ]> )"
  },
  {
    "mr": "inform(classification[spoof], edit_type[sampling], sample_start[20])",
    "ref": [
      "The audio cuts abruptly at the 20 second mark . The audio cuts abruptly at the 20 second mark .",
      "Yes, LFCC-33, which a shap value of -0.4495, was used to detect the id of speaker 1 for the audio sample .",
      "The audio cuts abruptly at the 2 second mark .",
      "The audio cuts abruptly at the spoof second mark .",
      "Yes, LFCC-33, which a shap value of -0.4495, was used to detect the id of speaker 1 for the audio sample . The audio cuts abruptly at the 20 second mark .",
      "The audio cuts abruptly at the 20 second mark . The audio cuts abruptly at the 20 second mark .",
      "Yes, LFCC-33, which a shap value of -0.4495, was used to detect the id of speaker 1 for the audio sample .",
      "The audio cuts abruptly at the 2 second mark .",
      "The audio cuts abruptly at the spoof second mark .",
      "Yes, LFCC-33, which a shap value of -0.4495, was used to detect the id of speaker 1 for the audio sample . The audio cuts abruptly at the 20 second mark .",
      "The audio cuts abruptly at the 20 second mark ."
    ],
    "new_mr": "<inform> inform ( <classification> classification: [ spoof ], <edit_type> edit type: [ sampling ], <sample_start> sample start: [ 20 ]> )"
  },
  {
    "mr": "inform(response[yes], feature[MFCC-2], determined[speaker_id])",
    "ref": [
      " ye, MFCC-2 was used to determine speaker id .",
      "yes, MFCC-2 was used to determine speaker id .  yes, MFCC-2 was used to determine speaker id .",
      " yes.",
      " speaker_id, MFCC-2 was used to determine speaker id .",
      "Yes, LFCC-4, which a shap value of 0.2638, was used to detect the id of speaker 2 for the audio sample .  yes, MFCC-2 was used to determine speaker id .",
      " yes, MFCC- was used to determine speaker id .",
      " yes, yes was used to determine speaker id .",
      "Yes, LFCC-4, which a shap value of 0.2638, was used to detect the id of speaker 2 for the audio sample .",
      " ye, MFCC-2 was used to determine speaker id .",
      "yes, MFCC-2 was used to determine speaker id .  yes, MFCC-2 was used to determine speaker id .",
      " yes, MFCC-2 was used to determine speaker id ."
    ],
    "new_mr": "<inform> inform ( <response> response: [ yes ], <feature> feature: [ MFCC-2 ], <determined> determined: [ speaker_id ]> )"
  },
  {
    "mr": "inform(response[yes], speaker_id[3], feature[MSRCC-5], interpreter[shap], shap_value[0.5221])",
    "ref": [
      "Yes, MSRCC-5, which a shap value of 0.5221, was used to detect the id of speaker 3 for the audio sample .  Yes, MSRCC-5, which a shap value of 0.5221, was used to detect the id of speaker 3 for the audio sample .",
      " Yes, MSRCC-5, which a shap value of 0.5221.",
      " Yes.5221, was used to detect the id of speaker 3 for the audio sample .",
      "The recording file was classified as being spoofed by a CNN model .  Yes, MSRCC-5, which a shap value of 0.5221, was used to detect the id of speaker 3 for the audio sample .",
      " Yes, MSRCC-5, which a shap value of 0.5221, was used to detect the id of speaker  for the audio sample .",
      " Yes, MSRCC-5, which a shap value of 3, was used to detect the id of speaker 3 for the audio sample .",
      " Yes, MSRCC-5, which a shap value of 0.5221, was used to detect the id of speaker shap for the audio sample .",
      " Yes, which a shap value of 0.5221, was used to detect the id of speaker 3 for the audio sample .",
      " Yes, MSRCC-5, was used to detect the id of speaker 3 for the audio sample .",
      " Yes, MSRCC, which a shap value of 0.5221, was used to detect the id of speaker 3 for the audio sample .",
      " Yes, MSRCC-5, which a shap value of 0.5221, was used to detect the id of speaker 3 for the audio sample ."
    ],
    "new_mr": "<inform> inform ( <response> response: [ yes ], <speaker_id> speaker id: [ 3 ], <feature> feature: [ MSRCC-5 ], <interpreter> interpreter: [ shap ], <shap_value> shap value: [ 0.5221 ]> )"
  },
  {
    "mr": "inform(classification[spoof], edit_type[multi_microphone], mic_quantity[>1])",
    "ref": [
      "7 was found to be the id of the speaker in the sample . There is more than one microphone signature on the recording .",
      "7 was found to be the id of the speaker in the sample .",
      "There is more than one microphone signature on the recording . There is more than one microphone signature on the recording .",
      "7 was found to be the id of the speaker in the sample . There is more than one microphone signature on the recording .",
      "7 was found to be the id of the speaker in the sample .",
      "There is more than one microphone signature on the recording . There is more than one microphone signature on the recording .",
      "7 was found to be the id of the speaker in the sample . There is more than one microphone signature on the recording .",
      "7 was found to be the id of the speaker in the sample .",
      "There is more than one microphone signature on the recording . There is more than one microphone signature on the recording .",
      "7 was found to be the id of the speaker in the sample . There is more than one microphone signature on the recording .",
      "There is more than one microphone signature on the recording . "
    ],
    "new_mr": "<inform> inform ( <classification> classification: [ spoof ], <edit_type> edit type: [ multi_microphone ], <mic_quantity> mic quantity: [ >1 ]> )"
  },
  {
    "mr": "inform(classification[spoofed])",
    "ref": [
      "The audio sample was spoofed . The audio sample was spoofed .",
      "Yes, LFCC-36, which a shap value of -0.1149, was used to detect the sample as bonafide .",
      "Yes, LFCC-36, which a shap value of -0.1149, was used to detect the sample as bonafide . The audio sample was spoofed .",
      "The audio sample was s .",
      "The audio sample was spoofed . The audio sample was spoofed .",
      "Yes, LFCC-36, which a shap value of -0.1149, was used to detect the sample as bonafide .",
      "Yes, LFCC-36, which a shap value of -0.1149, was used to detect the sample as bonafide . The audio sample was spoofed .",
      "The audio sample was s .",
      "The audio sample was spoofed . The audio sample was spoofed .",
      "Yes, LFCC-36, which a shap value of -0.1149, was used to detect the sample as bonafide .",
      "The audio sample was spoofed ."
    ],
    "new_mr": "<inform> inform ( <classification> classification: [ spoofed ]> )"
  },
  {
    "mr": "inform(extracted[LFCC], model[CNN], important[LFCC-58], classification[bonafide])",
    "ref": [
      " the audio sample had LFCC features extracted and LFCC-58 was determined to have a large impact on the LFCC-58 model that determined the sample to be bonafide .",
      "the audio sample had LFCC features extracted and LFCC-3 was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      " the audio sample had bonafide features extracted and bonafide-58 was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      " the audio sample had LFCC features extracted and LFCC-58 was determined to have a large impact on the CNN model that determined the sample to be bonafi .",
      " the audio sample had LFCC features extracted and LFCC-58 was determined to have a large impact on the  model that determined the sample to be bonafide .",
      "the audio sample had LFCC features extracted and LFCC-58 was determined to have a large impact on the CNN model that determined the sample to be bonafide .  the audio sample had LFCC features extracted and LFCC-58 was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      " the audio sample had LFCC features extracted and LFC was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      " the audio sample had LFCC features extracted and CNN was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      " the audio sample had L features extracted and L-58 was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      " the audio sample had LFCC features extracted and LFCC-58 was determined to have a large impact on the CNN model that determined the sample to be LFCC .",
      " the audio sample had LFCC features extracted and LFCC-58 was determined to have a large impact on the CNN model that determined the sample to be bonafide ."
    ],
    "new_mr": "<inform> inform ( <extracted> extracted: [ LFCC ], <model> model: [ CNN ], <important> important: [ LFCC-58 ], <classification> classification: [ bonafide ]> )"
  },
  {
    "mr": "inform(extracted[LFCC], model[CNN], important[LFCC-6], classification[bonafide])",
    "ref": [
      " the audio sample had LFCC features extracted and LFCC-6 was determined to have a large impact on the  model that determined the sample to be bonafide .",
      "the audio sample had PSRCC features extracted and PSRCC-6 was determined to have a large impact on the CNN model that determined the sample to be bonafide .  the audio sample had LFCC features extracted and LFCC-6 was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      " the audio sample had CNN features extracted and CNN-6 was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      " the audio sample had LFC features extracted and LFC-6 was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      "the audio sample had PSRCC features extracted and PSRCC-6 was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      " the audio sample had LFCC features extracted and LFCC-6 was determined to have a large impact on the LFCC model that determined the sample to be bonafide .",
      " the audio sample had LFCC features extracted and LFCC- was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      " the audio sample had LFCC features extracted and LFCC-6 was determined to have a large impact on the CNN model that determined the sample to be CNN .",
      "the audio sample had LFCC features extracted and LFCC-6 was determined to have a large impact on the CNN model that determined the sample to be bonafide .  the audio sample had LFCC features extracted and LFCC-6 was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      " the audio sample had LFCC features extracted and LFCC was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      " the audio sample had LFCC features extracted and LFCC-6 was determined to have a large impact on the CNN model that determined the sample to be bonafide ."
    ],
    "new_mr": "<inform> inform ( <extracted> extracted: [ LFCC ], <model> model: [ CNN ], <important> important: [ LFCC-6 ], <classification> classification: [ bonafide ]> )"
  },
  {
    "mr": "inform(response[Yes], classification[spoofed], spoof_type[cloning])",
    "ref": [
      "There were 2 microphones used .",
      "The signal is consistent with a cloned voice . The signal is consistent with a cloned voice .",
      "There were 2 microphones used . The signal is consistent with a cloned voice .",
      "There were 2 microphones used .",
      "The signal is consistent with a cloned voice . The signal is consistent with a cloned voice .",
      "There were 2 microphones used . The signal is consistent with a cloned voice .",
      "There were 2 microphones used .",
      "The signal is consistent with a cloned voice . The signal is consistent with a cloned voice .",
      "There were 2 microphones used . The signal is consistent with a cloned voice .",
      "There were 2 microphones used .",
      "The signal is consistent with a cloned voice ."
    ],
    "new_mr": "<inform> inform ( <response> response: [ Yes ], <classification> classification: [ spoofed ], <spoof_type> spoof type: [ cloning ]> )"
  },
  {
    "mr": "inform(classification[spoof], edit_type[environment], change_at[20])",
    "ref": [
      "The audio sample was spoofed . There is more feedback at the 40 second mark .",
      "There is more feedback at the 40 second mark . There is more feedback at the 40 second mark .",
      "The audio sample was spoofed .",
      "The audio sample was spoofed . There is more feedback at the 40 second mark .",
      "There is more feedback at the 40 second mark . There is more feedback at the 40 second mark .",
      "The audio sample was spoofed .",
      "The audio sample was spoofed . There is more feedback at the 40 second mark .",
      "There is more feedback at the 40 second mark . There is more feedback at the 40 second mark .",
      "The audio sample was spoofed .",
      "The audio sample was spoofed . There is more feedback at the 40 second mark .",
      "There is more feedback at the 40 second mark ."
    ],
    "new_mr": "<inform> inform ( <classification> classification: [ spoof ], <edit_type> edit type: [ environment ], <change_at> change at: [ 20 ]> )"
  },
  {
    "mr": "inform(response[No])",
    "ref": [
      "No . No .",
      "There is an unusually long pause at 37 seconds . No .",
      "N . ",
      "There is an unusually long pause at 37 seconds .",
      "No . No .",
      "There is an unusually long pause at 37 seconds . No .",
      "N . ",
      "There is an unusually long pause at 37 seconds .",
      "No . No .",
      "There is an unusually long pause at 37 seconds . No .",
      "No . "
    ],
    "new_mr": "<inform> inform ( <response> response: [ No ]> )"
  },
  {
    "mr": "inform(interpreter[shap], important[PSRCC-8], shap_value[-0.2841])",
    "ref": [
      "shap determined that the PSRCC-8 feature was one of the more important features by assigning it a value of -0.2841 .  shap determined that the PSRCC-8 feature was one of the more important features by assigning it a value of -0.2841 .",
      " shap determined that the PSRCC-8 feature was one of the more important features by assigning it a value of -0 .",
      " shap determined that the -0.2841 feature was one of the more important features by assigning it a value of -0.2841 .",
      "Yes, the spoofed recording was a synthetic recording .",
      " shap determined that the PSRCC-8 feature was one of the more important features by assigning it a value of shap .",
      "Yes, the spoofed recording was a synthetic recording .  shap determined that the PSRCC-8 feature was one of the more important features by assigning it a value of -0.2841 .",
      " sha determined that the PSRCC-8 feature was one of the more important features by assigning it a value of -0.2841 .",
      " PSRCC-8 determined that the PSRCC-8 feature was one of the more important features by assigning it a value of -0.2841 .",
      " shap determined that the  feature was one of the more important features by assigning it a value of -0.2841 .",
      "shap determined that the PSRCC-8 feature was one of the more important features by assigning it a value of -0.2841 .  shap determined that the PSRCC-8 feature was one of the more important features by assigning it a value of -0.2841 .",
      " shap determined that the PSRCC-8 feature was one of the more important features by assigning it a value of -0.2841 ."
    ],
    "new_mr": "<inform> inform ( <interpreter> interpreter: [ shap ], <important> important: [ PSRCC-8 ], <shap_value> shap value: [ -0.2841 ]> )"
  },
  {
    "mr": "inform(classification[spoof], classified_by[feature])",
    "ref": [
      "The audio file was classified as being spoofed by a CNN model . The audio file was classified as being spoofed by a CNN model .",
      "Yes, person 2 was detected by GTCC-4 with a shap value of 1 . The audio file was classified as being spoofed by a CNN model .",
      "The audio file was classified as being featureed by a CNN model .",
      "The audio file was classified as being sed by a CNN model .",
      "Yes, person 2 was detected by GTCC-4 with a shap value of 1 .",
      "The audio file was classified as being spoofed by a CNN model . The audio file was classified as being spoofed by a CNN model .",
      "Yes, person 2 was detected by GTCC-4 with a shap value of 1 . The audio file was classified as being spoofed by a CNN model .",
      "The audio file was classified as being featureed by a CNN model .",
      "The audio file was classified as being sed by a CNN model .",
      "Yes, person 2 was detected by GTCC-4 with a shap value of 1 .",
      "The audio file was classified as being spoofed by a CNN model ."
    ],
    "new_mr": "<inform> inform ( <classification> classification: [ spoof ], <classified_by> classified by: [ feature ]> )"
  },
  {
    "mr": "inform(extracted[LFCC], model[CNN], important[LFCC-41], classification[replayed])",
    "ref": [
      "Yes, PSRCC-12, which a shap value of 0.9752, was used to detect the id of speaker 7 for the audio sample .  the audio sample had LFCC features extracted and LFCC-41 was determined to have a large impact on the CNN model that determined the sample to be replayed .",
      " the audio sample had LFCC features extracted and LFC was determined to have a large impact on the CNN model that determined the sample to be replayed .",
      " the audio sample had LFCC features extracted and LFCC-41 was determined to have a large impact on the LFCC model that determined the sample to be replayed .",
      " the audio sample had  features extracted and -41 was determined to have a large impact on the CNN model that determined the sample to be replayed .",
      "Yes, PSRCC-12, which a shap value of 0.9752, was used to detect the id of speaker 7 for the audio sample .",
      " the audio sample had LFCC features extracted and LFCC-41 was determined to have a large impact on the CNN model that determined the sample to be LFCC-41 .",
      " the audio sample had LFCC features extracted and LFCC-41 was determined to have a large impact on the CNN model that determined the sample to be r .",
      " the audio sample had LFCC features extracted and replayed was determined to have a large impact on the CNN model that determined the sample to be replayed .",
      "the audio sample had LFCC features extracted and LFCC-41 was determined to have a large impact on the CNN model that determined the sample to be replayed .  the audio sample had LFCC features extracted and LFCC-41 was determined to have a large impact on the CNN model that determined the sample to be replayed .",
      " the audio sample had LFCC features extracted and LFCC-41 was determined to have a large impact on the C model that determined the sample to be replayed .",
      " the audio sample had LFCC features extracted and LFCC-41 was determined to have a large impact on the CNN model that determined the sample to be replayed ."
    ],
    "new_mr": "<inform> inform ( <extracted> extracted: [ LFCC ], <model> model: [ CNN ], <important> important: [ LFCC-41 ], <classification> classification: [ replayed ]> )"
  },
  {
    "mr": "inform(interpreter[shap], important[LFCC-54], shap_value[0.2979])",
    "ref": [
      "shap determined that the LFCC-54 feature was one of the more important features by assigning it a value of 0.2979 .  shap determined that the LFCC-54 feature was one of the more important features by assigning it a value of 0.2979 .",
      "the audio sample had LFCC features extracted and LFCC-48 was determined to have a large impact on the CNN model that determined the sample to be replayed .",
      " LFCC-54 determined that the LFCC-54 feature was one of the more important features by assigning it a value of 0.2979 .",
      " shap determined that the LFCC-54 feature was one of the more important features by assigning it a value of 0.2 .",
      " shap determined that the LFCC-54 feature was one of the more important features by assigning it a value of shap .",
      " shap determined that the LFCC- feature was one of the more important features by assigning it a value of 0.2979 .",
      "the audio sample had LFCC features extracted and LFCC-48 was determined to have a large impact on the CNN model that determined the sample to be replayed .  shap determined that the LFCC-54 feature was one of the more important features by assigning it a value of 0.2979 .",
      " sh determined that the LFCC-54 feature was one of the more important features by assigning it a value of 0.2979 .",
      " shap determined that the 0.2979 feature was one of the more important features by assigning it a value of 0.2979 .",
      "shap determined that the LFCC-54 feature was one of the more important features by assigning it a value of 0.2979 .  shap determined that the LFCC-54 feature was one of the more important features by assigning it a value of 0.2979 .",
      " shap determined that the LFCC-54 feature was one of the more important features by assigning it a value of 0.2979 ."
    ],
    "new_mr": "<inform> inform ( <interpreter> interpreter: [ shap ], <important> important: [ LFCC-54 ], <shap_value> shap value: [ 0.2979 ]> )"
  },
  {
    "mr": "inform(response[Yes], interpreter[shap], important[MSRCC-2], classification[replayed], shap_value[-0.5591])",
    "ref": [
      " Yes.5591, was used to detect the sample as replayed .",
      " Yes, MSRCC-2, which a shap value of shap, was used to detect the sample as replayed .",
      "shap determined that the PSRCC-5 feature was one of the more important features by assigning it a value of -0.6687 .",
      " Yes, MSRCC-2, which a  value of -0.5591, was used to detect the sample as replayed .",
      "shap determined that the PSRCC-5 feature was one of the more important features by assigning it a value of -0.6687 .  Yes, MSRCC-2, which a shap value of -0.5591, was used to detect the sample as replayed .",
      "Yes, MSRCC-2, which a shap value of -0.5591, was used to detect the sample as replayed .  Yes, MSRCC-2, which a shap value of -0.5591, was used to detect the sample as replayed .",
      " Yes, replayed, which a shap value of -0.5591, was used to detect the sample as replayed .",
      " Ye, MSRCC-2, which a shap value of -0.5591, was used to detect the sample as replayed .",
      " Yes, MSRCC-2, which a shap value of -0.5591, was used to detect the sample as replaye .",
      " Yes, which a shap value of -0.5591, was used to detect the sample as replayed .",
      " Yes, MSRCC-2, which a shap value of -0.5591, was used to detect the sample as replayed ."
    ],
    "new_mr": "<inform> inform ( <response> response: [ Yes ], <interpreter> interpreter: [ shap ], <important> important: [ MSRCC-2 ], <classification> classification: [ replayed ], <shap_value> shap value: [ -0.5591 ]> )"
  },
  {
    "mr": "inform(interpreter[shap], important[LFCC-27], shap_value[0.8773])",
    "ref": [
      "Yes, person 5 was detected by GTCC-12 with a shap value of 0 .",
      " LFCC-27 determined that the LFCC-27 feature was one of the more important features by assigning it a value of 0.8773 .",
      "Yes, person 5 was detected by GTCC-12 with a shap value of 0 .  shap determined that the LFCC-27 feature was one of the more important features by assigning it a value of 0.8773 .",
      " shap determined that the LFCC-27 feature was one of the more important features by assigning it a value of 0.877 .",
      " shap determined that the L feature was one of the more important features by assigning it a value of 0.8773 .",
      " shap determined that the LFCC-27 feature was one of the more important features by assigning it a value of LFCC-27 .",
      " s determined that the LFCC-27 feature was one of the more important features by assigning it a value of 0.8773 .",
      " shap determined that the 0.8773 feature was one of the more important features by assigning it a value of 0.8773 .",
      "shap determined that the LFCC-27 feature was one of the more important features by assigning it a value of 0.8773 .  shap determined that the LFCC-27 feature was one of the more important features by assigning it a value of 0.8773 .",
      "Yes, person 5 was detected by GTCC-12 with a shap value of 0 .",
      " shap determined that the LFCC-27 feature was one of the more important features by assigning it a value of 0.8773 ."
    ],
    "new_mr": "<inform> inform ( <interpreter> interpreter: [ shap ], <important> important: [ LFCC-27 ], <shap_value> shap value: [ 0.8773 ]> )"
  },
  {
    "mr": "inform(classification[spoof], edit_type[software])",
    "ref": [
      "It was altered using spoof .",
      "The audio file was classified as being synthetic by a CNN model . It was altered using software .",
      "It was altered using software . It was altered using software .",
      "It was altered using softwar .",
      "The audio file was classified as being synthetic by a CNN model .",
      "It was altered using spoof .",
      "The audio file was classified as being synthetic by a CNN model . It was altered using software .",
      "It was altered using software . It was altered using software .",
      "It was altered using softwar .",
      "The audio file was classified as being synthetic by a CNN model .",
      "It was altered using software ."
    ],
    "new_mr": "<inform> inform ( <classification> classification: [ spoof ], <edit_type> edit type: [ software ]> )"
  },
  {
    "mr": "inform(response[Yes], interpreter[shap], important[LFCC-22], classification[bonafide], shap_value[0.285])",
    "ref": [
      " Yes, LFCC-22, which a shap value of LFCC-22, was used to detect the sample as bonafide .",
      " bonafide, LFCC-22, which a shap value of 0.285, was used to detect the sample as bonafide .",
      "Yes, LFCC-59, which a shap value of -0.6167, was used to detect the sample as bonafide .",
      " Yes, which a shap value of 0.285, was used to detect the sample as bonafide .",
      " Yes, 0.285, which a shap value of 0.285, was used to detect the sample as bonafide .",
      " Yes, LFCC-22, which a LFCC-22 value of 0.285, was used to detect the sample as bonafide .",
      " Yes, LFCC-22, which a shap value of 0, was used to detect the sample as bonafide .",
      " Yes.285, was used to detect the sample as bonafide .",
      " , LFCC-22, which a shap value of 0.285, was used to detect the sample as bonafide .",
      " Yes, LFCC-22, which a shap value of 0.285, was used to detect the sample as bon .",
      " Yes, LFCC-22, which a shap value of 0.285, was used to detect the sample as bonafide ."
    ],
    "new_mr": "<inform> inform ( <response> response: [ Yes ], <interpreter> interpreter: [ shap ], <important> important: [ LFCC-22 ], <classification> classification: [ bonafide ], <shap_value> shap value: [ 0.285 ]> )"
  },
  {
    "mr": "inform(extracted[LFCC], model[CNN], important[LFCC-36], classification[replayed])",
    "ref": [
      "the audio sample had LFCC features extracted and LFCC-36 was determined to have a large impact on the CNN model that determined the sample to be replayed .  the audio sample had LFCC features extracted and LFCC-36 was determined to have a large impact on the CNN model that determined the sample to be replayed .",
      " the audio sample had LFCC features extracted and LFCC-36 was determined to have a large impact on the CNN model that determined the sample to be repl .",
      " the audio sample had LFCC features extracted and LFCC-36 was determined to have a large impact on the  model that determined the sample to be replayed .",
      " the audio sample had CNN features extracted and CNN-36 was determined to have a large impact on the CNN model that determined the sample to be replayed .",
      " the audio sample had LFCC features extracted and LFCC was determined to have a large impact on the CNN model that determined the sample to be replayed .",
      " the audio sample had LFCC features extracted and LFCC-36 was determined to have a large impact on the CNN model that determined the sample to be CNN .",
      " the audio sample had LFCC features extracted and LFCC-36 was determined to have a large impact on the LFCC-36 model that determined the sample to be replayed .",
      " the audio sample had LFCC features extracted and LFCC-3 was determined to have a large impact on the CNN model that determined the sample to be replayed .",
      "The breathing rate changes  the audio sample had LFCC features extracted and LFCC-36 was determined to have a large impact on the CNN model that determined the sample to be replayed .",
      "The breathing rate changes",
      " the audio sample had LFCC features extracted and LFCC-36 was determined to have a large impact on the CNN model that determined the sample to be replayed ."
    ],
    "new_mr": "<inform> inform ( <extracted> extracted: [ LFCC ], <model> model: [ CNN ], <important> important: [ LFCC-36 ], <classification> classification: [ replayed ]> )"
  },
  {
    "mr": "inform(response[Yes], interpreter[shap], important[MFCC-26], classification[replayed], shap_value[0.737])",
    "ref": [
      " Yes, MFCC-26, which a shap value of 0., was used to detect the sample as replayed .",
      " Yes, which a shap value of 0.737, was used to detect the sample as replayed .",
      " Yes, shap, which a shap value of 0.737, was used to detect the sample as replayed .",
      " Yes.737, was used to detect the sample as replayed .",
      " Yes, MFCC-26, was used to detect the sample as replayed .",
      "Yes, MFCC-26, which a shap value of 0.737, was used to detect the sample as replayed .  Yes, MFCC-26, which a shap value of 0.737, was used to detect the sample as replayed .",
      " Yes, MFCC-26, which a shap value of shap, was used to detect the sample as replayed .",
      "the audio sample had LFCC features extracted and LFCC-27 was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      " Ye, MFCC-26, which a shap value of 0.737, was used to detect the sample as replayed .",
      " shap, MFCC-26, which a shap value of 0.737, was used to detect the sample as replayed .",
      " Yes, MFCC-26, which a shap value of 0.737, was used to detect the sample as replayed ."
    ],
    "new_mr": "<inform> inform ( <response> response: [ Yes ], <interpreter> interpreter: [ shap ], <important> important: [ MFCC-26 ], <classification> classification: [ replayed ], <shap_value> shap value: [ 0.737 ]> )"
  },
  {
    "mr": "inform(classification[bonafide], edit_type[none])",
    "ref": [
      "Yes, MFCC-31, which a shap value of -0.0766, was used to detect the id of speaker 3 for the audio sample .",
      "There were no other spoof types . There were no other spoof types .",
      "Yes, MFCC-31, which a shap value of -0.0766, was used to detect the id of speaker 3 for the audio sample . There were no other spoof types .",
      "Yes, MFCC-31, which a shap value of -0.0766, was used to detect the id of speaker 3 for the audio sample .",
      "There were no other spoof types . There were no other spoof types .",
      "Yes, MFCC-31, which a shap value of -0.0766, was used to detect the id of speaker 3 for the audio sample . There were no other spoof types .",
      "Yes, MFCC-31, which a shap value of -0.0766, was used to detect the id of speaker 3 for the audio sample .",
      "There were no other spoof types . There were no other spoof types .",
      "Yes, MFCC-31, which a shap value of -0.0766, was used to detect the id of speaker 3 for the audio sample . There were no other spoof types .",
      "Yes, MFCC-31, which a shap value of -0.0766, was used to detect the id of speaker 3 for the audio sample .",
      "There were no other spoof types ."
    ],
    "new_mr": "<inform> inform ( <classification> classification: [ bonafide ], <edit_type> edit type: [ none ]> )"
  },
  {
    "mr": "inform(interpreter[shap], important[MFCC-17], shap_value[0.8093])",
    "ref": [
      " 0.8093 determined that the MFCC-17 feature was one of the more important features by assigning it a value of 0.8093 .",
      "Yes, MSRCC-11, which a shap value of -0.6615, was used to detect the sample as bonafide .  shap determined that the MFCC-17 feature was one of the more important features by assigning it a value of 0.8093 .",
      "shap determined that the MFCC-17 feature was one of the more important features by assigning it a value of 0.8093 .  shap determined that the MFCC-17 feature was one of the more important features by assigning it a value of 0.8093 .",
      " shap determined that the  feature was one of the more important features by assigning it a value of 0.8093 .",
      " shap determined that the MFCC-17 feature was one of the more important features by assigning it a value of 0.809 .",
      " s determined that the MFCC-17 feature was one of the more important features by assigning it a value of 0.8093 .",
      " shap determined that the shap feature was one of the more important features by assigning it a value of 0.8093 .",
      "Yes, MSRCC-11, which a shap value of -0.6615, was used to detect the sample as bonafide .",
      " shap determined that the MFCC-17 feature was one of the more important features by assigning it a value of MFCC-17 .",
      " 0.8093 determined that the MFCC-17 feature was one of the more important features by assigning it a value of 0.8093 .",
      " shap determined that the MFCC-17 feature was one of the more important features by assigning it a value of 0.8093 ."
    ],
    "new_mr": "<inform> inform ( <interpreter> interpreter: [ shap ], <important> important: [ MFCC-17 ], <shap_value> shap value: [ 0.8093 ]> )"
  },
  {
    "mr": "inform(classification[bonafide], edit_type[none])",
    "ref": [
      "shap determined that the LFCC-54 feature was one of the more important features by assigning it a value of 0.2979 .",
      "The spoofed audio was converted . ",
      "The spoofed audio was not converted . The spoofed audio was not converted .",
      "shap determined that the LFCC-54 feature was one of the more important features by assigning it a value of 0.2979 . The spoofed audio was not converted .",
      "shap determined that the LFCC-54 feature was one of the more important features by assigning it a value of 0.2979 .",
      "The spoofed audio was converted . ",
      "The spoofed audio was not converted . The spoofed audio was not converted .",
      "shap determined that the LFCC-54 feature was one of the more important features by assigning it a value of 0.2979 . The spoofed audio was not converted .",
      "shap determined that the LFCC-54 feature was one of the more important features by assigning it a value of 0.2979 .",
      "The spoofed audio was converted . ",
      "The spoofed audio was not converted . "
    ],
    "new_mr": "<inform> inform ( <classification> classification: [ bonafide ], <edit_type> edit type: [ none ]> )"
  },
  {
    "mr": "inform(extracted[MFCC], model[CNN], important[MFCC-1], classification[bonafide])",
    "ref": [
      " the audio sample had MFCC features extracted and bonafide was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      " the audio sample had MFC features extracted and MFC-1 was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      " the audio sample had MFCC features extracted and MFCC-1 was determined to have a large impact on the CN model that determined the sample to be bonafide .",
      " the audio sample had MFCC features extracted and MFCC-1 was determined to have a large impact on the bonafide model that determined the sample to be bonafide .",
      "the audio sample had MFCC features extracted and MFCC-1 was determined to have a large impact on the CNN model that determined the sample to be bonafide .  the audio sample had MFCC features extracted and MFCC-1 was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      "Yes, person 3 was detected by LFCC-5 with a shap value of 0.9355 .  the audio sample had MFCC features extracted and MFCC-1 was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      "Yes, person 3 was detected by LFCC-5 with a shap value of 0.9355 .",
      " the audio sample had bonafide features extracted and bonafide-1 was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      " the audio sample had MFCC features extracted and  was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      " the audio sample had MFCC features extracted and MFCC-1 was determined to have a large impact on the CNN model that determined the sample to be MFCC .",
      " the audio sample had MFCC features extracted and MFCC-1 was determined to have a large impact on the CNN model that determined the sample to be bonafide ."
    ],
    "new_mr": "<inform> inform ( <extracted> extracted: [ MFCC ], <model> model: [ CNN ], <important> important: [ MFCC-1 ], <classification> classification: [ bonafide ]> )"
  },
  {
    "mr": "inform(classification[spoof], classified_by[feature])",
    "ref": [
      "SHAP gave CQCC-0 a value of 0.352, LFCC-2 a value of 0.0645, MFCC-4 a value of 0.0487 . ",
      "SHAP gave CQCC-0 a value of 0.352, MFCC-0 a value of 0.245, MFCC-4 a value of 0.0487 . ",
      "SHAP gave CQCC-0 a value of 0.352, MFCC-0 a value of 0.245.0645, MFCC-4 a value of 0.0487 . ",
      "SHAP gave CQCC-0 a value of 0.352, MFCC-0 a value of 0.245, LFCC-2 a value of 0.0645.0487 . ",
      "SHAP gave CQCC-0 a value of 0.352.245, LFCC-2 a value of 0.0645, MFCC-4 a value of 0.0487 . ",
      "Yes, LFCC-29, which a shap value of 0.9762, was used to detect the sample as replayed . SHAP gave CQCC-0 a value of 0.352, MFCC-0 a value of 0.245, LFCC-2 a value of 0.0645, MFCC-4 a value of 0.0487 .",
      "Yes, LFCC-29, which a shap value of 0.9762, was used to detect the sample as replayed .",
      "SHAP gave CQCC-0 a value of 0.352, MFCC-0 a value of 0.245, LFCC-2 a value of 0.0645, MFCC-4 a value of 0.0487 . SHAP gave CQCC-0 a value of 0.352, MFCC-0 a value of 0.245, LFCC-2 a value of 0.0645, MFCC-4 a value of 0.0487 .",
      "SHAP gave CQCC-0 a value of 0.352, LFCC-2 a value of 0.0645, MFCC-4 a value of 0.0487 . ",
      "SHAP gave CQCC-0 a value of 0.352, MFCC-0 a value of 0.245, MFCC-4 a value of 0.0487 . ",
      "SHAP gave CQCC-0 a value of 0.352, MFCC-0 a value of 0.245, LFCC-2 a value of 0.0645, MFCC-4 a value of 0.0487 . "
    ],
    "new_mr": "<inform> inform ( <classification> classification: [ spoof ], <classified_by> classified by: [ feature ]> )"
  },
  {
    "mr": "inform(classification[spoof], classified_by[feature])",
    "ref": [
      "SHAP gave CQCC-4 a value of 0.521, LFCC-2 a value of 0.184, MFCC-5 a value of 0.0673 . ",
      "SHAP gave CQCC-4 a value of 0.521.346, LFCC-2 a value of 0.184, MFCC-5 a value of 0.0673 . ",
      "SHAP gave CQCC-4 a value of 0.521, MFCC-0 a value of 0.346, LFCC-2 a value of 0.184.0673 . ",
      "SHAP gave CQCC-4 a value of 0.521, MFCC-0 a value of 0.346.184, MFCC-5 a value of 0.0673 . ",
      "Yes, PSRCC-9, which a shap value of 0.9541, was used to detect the sample as replayed .",
      "SHAP gave CQCC-4 a value of 0.521, MFCC-0 a value of 0.346, LFCC-2 a value of 0.184, MFCC-5 a value of 0.0673 . SHAP gave CQCC-4 a value of 0.521, MFCC-0 a value of 0.346, LFCC-2 a value of 0.184, MFCC-5 a value of 0.0673 .",
      "SHAP gave CQCC-4 a value of 0.521, MFCC-0 a value of 0.346, MFCC-5 a value of 0.0673 . ",
      "Yes, PSRCC-9, which a shap value of 0.9541, was used to detect the sample as replayed . SHAP gave CQCC-4 a value of 0.521, MFCC-0 a value of 0.346, LFCC-2 a value of 0.184, MFCC-5 a value of 0.0673 .",
      "SHAP gave CQCC-4 a value of 0.521, LFCC-2 a value of 0.184, MFCC-5 a value of 0.0673 . ",
      "SHAP gave CQCC-4 a value of 0.521.346, LFCC-2 a value of 0.184, MFCC-5 a value of 0.0673 . ",
      "SHAP gave CQCC-4 a value of 0.521, MFCC-0 a value of 0.346, LFCC-2 a value of 0.184, MFCC-5 a value of 0.0673 . "
    ],
    "new_mr": "<inform> inform ( <classification> classification: [ spoof ], <classified_by> classified by: [ feature ]> )"
  },
  {
    "mr": "inform(extracted[PSRCC], model[CNN], important[PSRCC-0], classification[bonafide])",
    "ref": [
      "Yes, MFCC-8, which a shap value of -0.7314, was used to detect the id of speaker 2 for the audio sample .",
      " the audio sample had PSRCC features extracted and PSRCC-0 was determined to have a large impact on the CNN model that determined the sample to be bonafi .",
      " the audio sample had PSRCC features extracted and PSRCC-0 was determined to have a large impact on the PSRCC model that determined the sample to be bonafide .",
      " the audio sample had PSRCC features extracted and PSRCC-0 was determined to have a large impact on the CNN model that determined the sample to be PSRCC-0 .",
      "Yes, MFCC-8, which a shap value of -0.7314, was used to detect the id of speaker 2 for the audio sample .  the audio sample had PSRCC features extracted and PSRCC-0 was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      " the audio sample had PSRCC features extracted and CNN was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      " the audio sample had PSRCC features extracted and PSRCC- was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      " the audio sample had PSR features extracted and PSR-0 was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      "the audio sample had PSRCC features extracted and PSRCC-0 was determined to have a large impact on the CNN model that determined the sample to be bonafide .  the audio sample had PSRCC features extracted and PSRCC-0 was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      " the audio sample had PSRCC features extracted and PSRCC-0 was determined to have a large impact on the CN model that determined the sample to be bonafide .",
      " the audio sample had PSRCC features extracted and PSRCC-0 was determined to have a large impact on the CNN model that determined the sample to be bonafide ."
    ],
    "new_mr": "<inform> inform ( <extracted> extracted: [ PSRCC ], <model> model: [ CNN ], <important> important: [ PSRCC-0 ], <classification> classification: [ bonafide ]> )"
  },
  {
    "mr": "inform(speaker_id[5], model[SVM])",
    "ref": [
      " the audio sample was used in a SVM model tasked at detecting speaker id.",
      " the audio sample was used in a SVM model tasked at detecting speaker id, determined to be  .",
      "the audio sample had LFCC features extracted and LFCC-7 was determined to have a large impact on the CNN model that determined the sample to be replayed .",
      "the audio sample was used in a SVM model tasked at detecting speaker id, determined to be 5 .  the audio sample was used in a SVM model tasked at detecting speaker id, determined to be 5 .",
      " the audio sample was used in a 5 model tasked at detecting speaker id, determined to be 5 .",
      "the audio sample had LFCC features extracted and LFCC-7 was determined to have a large impact on the CNN model that determined the sample to be replayed .  the audio sample was used in a SVM model tasked at detecting speaker id, determined to be 5 .",
      " the audio sample was used in a  model tasked at detecting speaker id, determined to be 5 .",
      " the audio sample was used in a SVM model tasked at detecting speaker id, determined to be SVM .",
      " the audio sample was used in a SVM model tasked at detecting speaker id.",
      " the audio sample was used in a SVM model tasked at detecting speaker id, determined to be  .",
      " the audio sample was used in a SVM model tasked at detecting speaker id, determined to be 5 ."
    ],
    "new_mr": "<inform> inform ( <speaker_id> speaker id: [ 5 ], <model> model: [ SVM ]> )"
  },
  {
    "mr": "inform(interpreter[shap], important[GTCC-12], shap_value[0])",
    "ref": [
      "shap determined that the GTCC-12 feature was one of the more important features by assigning it a value of 0 .  shap determined that the GTCC-12 feature was one of the more important features by assigning it a value of 0 .",
      " shap determined that the GTCC-12 feature was one of the more important features by assigning it a value of shap .",
      " shap determined that the GTCC-12 feature was one of the more important features by assigning it a value of  .",
      " GTCC-12 determined that the GTCC-12 feature was one of the more important features by assigning it a value of 0 .",
      " shap determined that the GTC feature was one of the more important features by assigning it a value of 0 .",
      " sha determined that the GTCC-12 feature was one of the more important features by assigning it a value of 0 .",
      "the audio sample had MFCC features extracted and MFCC-6 was determined to have a large impact on the CNN model that determined the sample to be replayed .",
      " shap determined that the shap feature was one of the more important features by assigning it a value of 0 .",
      "the audio sample had MFCC features extracted and MFCC-6 was determined to have a large impact on the CNN model that determined the sample to be replayed .  shap determined that the GTCC-12 feature was one of the more important features by assigning it a value of 0 .",
      "shap determined that the GTCC-12 feature was one of the more important features by assigning it a value of 0 .  shap determined that the GTCC-12 feature was one of the more important features by assigning it a value of 0 .",
      " shap determined that the GTCC-12 feature was one of the more important features by assigning it a value of 0 ."
    ],
    "new_mr": "<inform> inform ( <interpreter> interpreter: [ shap ], <important> important: [ GTCC-12 ], <shap_value> shap value: [ 0 ]> )"
  },
  {
    "mr": "inform(general)",
    "ref": [
      "Subband Spectral Flux Coefficients . Subband Spectral Flux Coefficients .",
      "Yes, LFCC-41, which a shap value of 0.5433, was used to detect the sample as replayed .",
      "Yes, LFCC-41, which a shap value of 0.5433, was used to detect the sample as replayed . Subband Spectral Flux Coefficients .",
      "Subband Spectral Flux Coefficients . Subband Spectral Flux Coefficients .",
      "Yes, LFCC-41, which a shap value of 0.5433, was used to detect the sample as replayed .",
      "Yes, LFCC-41, which a shap value of 0.5433, was used to detect the sample as replayed . Subband Spectral Flux Coefficients .",
      "Subband Spectral Flux Coefficients . Subband Spectral Flux Coefficients .",
      "Yes, LFCC-41, which a shap value of 0.5433, was used to detect the sample as replayed .",
      "Yes, LFCC-41, which a shap value of 0.5433, was used to detect the sample as replayed . Subband Spectral Flux Coefficients .",
      "Subband Spectral Flux Coefficients . Subband Spectral Flux Coefficients .",
      "Subband Spectral Flux Coefficients ."
    ],
    "new_mr": "<inform> inform ( > )"
  },
  {
    "mr": "inform(response[Yes], interpreter[shap], important[LFCC-31], classification[replayed], shap_value[-0.0844])",
    "ref": [
      "Yes, LFCC-31, which a shap value of -0.0844, was used to detect the sample as replayed .  Yes, LFCC-31, which a shap value of -0.0844, was used to detect the sample as replayed .",
      "Yes, MSRCC-10, which a shap value of -0.0292, was used to detect the sample as replayed .",
      " Yes, Yes, which a shap value of -0.0844, was used to detect the sample as replayed .",
      " Yes, LFCC-31, which a sh value of -0.0844, was used to detect the sample as replayed .",
      " Yes, LFCC-31, which a shap value of -0.0844.",
      " Yes, LFCC-3, which a shap value of -0.0844, was used to detect the sample as replayed .",
      " Yes, LFCC-31.0844, was used to detect the sample as replayed .",
      " replayed, LFCC-31, which a shap value of -0.0844, was used to detect the sample as replayed .",
      " Y, LFCC-31, which a shap value of -0.0844, was used to detect the sample as replayed .",
      " Yes, LFCC-31, which a shap value of LFCC-31, was used to detect the sample as replayed .",
      " Yes, LFCC-31, which a shap value of -0.0844, was used to detect the sample as replayed ."
    ],
    "new_mr": "<inform> inform ( <response> response: [ Yes ], <interpreter> interpreter: [ shap ], <important> important: [ LFCC-31 ], <classification> classification: [ replayed ], <shap_value> shap value: [ -0.0844 ]> )"
  },
  {
    "mr": "inform(interpreter[shap], important[LFCC-21], shap_value[0.3974])",
    "ref": [
      " shap determined that the  feature was one of the more important features by assigning it a value of 0.3974 .",
      "Yes, LFCC-48, which a shap value of 0.4714, was used to detect the sample as bonafide .  shap determined that the LFCC-21 feature was one of the more important features by assigning it a value of 0.3974 .",
      " shap determined that the LFCC-21 feature was one of the more important features by assigning it a value of 0.3 .",
      "Yes, LFCC-48, which a shap value of 0.4714, was used to detect the sample as bonafide .",
      " shap determined that the 0.3974 feature was one of the more important features by assigning it a value of 0.3974 .",
      " s determined that the LFCC-21 feature was one of the more important features by assigning it a value of 0.3974 .",
      "shap determined that the LFCC-21 feature was one of the more important features by assigning it a value of 0.3974 .  shap determined that the LFCC-21 feature was one of the more important features by assigning it a value of 0.3974 .",
      " 0.3974 determined that the LFCC-21 feature was one of the more important features by assigning it a value of 0.3974 .",
      " shap determined that the LFCC-21 feature was one of the more important features by assigning it a value of LFCC-21 .",
      " shap determined that the  feature was one of the more important features by assigning it a value of 0.3974 .",
      " shap determined that the LFCC-21 feature was one of the more important features by assigning it a value of 0.3974 ."
    ],
    "new_mr": "<inform> inform ( <interpreter> interpreter: [ shap ], <important> important: [ LFCC-21 ], <shap_value> shap value: [ 0.3974 ]> )"
  },
  {
    "mr": "inform(interpreter[shap], important[MFCC-30], shap_value[0.2255])",
    "ref": [
      " shap determined that the MFCC-30 feature was one of the more important features by assigning it a value of shap .",
      "There is more than one microphone signature on the recording .  shap determined that the MFCC-30 feature was one of the more important features by assigning it a value of 0.2255 .",
      " shap determined that the MFCC feature was one of the more important features by assigning it a value of 0.2255 .",
      " shap determined that the MFCC-30 feature was one of the more important features by assigning it a value of 0.2 .",
      " 0.2255 determined that the MFCC-30 feature was one of the more important features by assigning it a value of 0.2255 .",
      " sha determined that the MFCC-30 feature was one of the more important features by assigning it a value of 0.2255 .",
      "There is more than one microphone signature on the recording .",
      " shap determined that the shap feature was one of the more important features by assigning it a value of 0.2255 .",
      "shap determined that the MFCC-30 feature was one of the more important features by assigning it a value of 0.2255 .  shap determined that the MFCC-30 feature was one of the more important features by assigning it a value of 0.2255 .",
      " shap determined that the MFCC-30 feature was one of the more important features by assigning it a value of shap .",
      " shap determined that the MFCC-30 feature was one of the more important features by assigning it a value of 0.2255 ."
    ],
    "new_mr": "<inform> inform ( <interpreter> interpreter: [ shap ], <important> important: [ MFCC-30 ], <shap_value> shap value: [ 0.2255 ]> )"
  },
  {
    "mr": "inform(extracted[LFCC], model[CNN], important[LFCC-7], classification[bonafide])",
    "ref": [
      " the audio sample had LFCC features extracted and LFCC-7 was determined to have a large impact on the C model that determined the sample to be bonafide .",
      " the audio sample had LFCC features extracted and LFCC-7 was determined to have a large impact on the CNN model that determined the sample to be bon .",
      "the audio sample had MSRCC features extracted and MSRCC-1 was determined to have a large impact on the CNN model that determined the sample to be replayed .",
      " the audio sample had  features extracted and -7 was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      " the audio sample had LFCC features extracted and LFCC-7 was determined to have a large impact on the LFCC-7 model that determined the sample to be bonafide .",
      " the audio sample had LFCC-7 features extracted and LFCC-7-7 was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      " the audio sample had LFCC features extracted and LFC was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      "the audio sample had MSRCC features extracted and MSRCC-1 was determined to have a large impact on the CNN model that determined the sample to be replayed .  the audio sample had LFCC features extracted and LFCC-7 was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      " the audio sample had LFCC features extracted and LFCC was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      "the audio sample had LFCC features extracted and LFCC-7 was determined to have a large impact on the CNN model that determined the sample to be bonafide .  the audio sample had LFCC features extracted and LFCC-7 was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      " the audio sample had LFCC features extracted and LFCC-7 was determined to have a large impact on the CNN model that determined the sample to be bonafide ."
    ],
    "new_mr": "<inform> inform ( <extracted> extracted: [ LFCC ], <model> model: [ CNN ], <important> important: [ LFCC-7 ], <classification> classification: [ bonafide ]> )"
  },
  {
    "mr": "inform(response[yes], feature[MFCC-9], determined[speaker_id])",
    "ref": [
      "Spectral Centroid Frequency Coefficients .  yes, MFCC-9 was used to determine speaker id .",
      " yes,  was used to determine speaker id .",
      " ye, MFCC-9 was used to determine speaker id .",
      "Spectral Centroid Frequency Coefficients .",
      " speaker_id, MFCC-9 was used to determine speaker id .",
      " yes.",
      " yes, yes was used to determine speaker id .",
      "yes, MFCC-9 was used to determine speaker id .  yes, MFCC-9 was used to determine speaker id .",
      "Spectral Centroid Frequency Coefficients .  yes, MFCC-9 was used to determine speaker id .",
      " yes,  was used to determine speaker id .",
      " yes, MFCC-9 was used to determine speaker id ."
    ],
    "new_mr": "<inform> inform ( <response> response: [ yes ], <feature> feature: [ MFCC-9 ], <determined> determined: [ speaker_id ]> )"
  },
  {
    "mr": "inform(extracted[MFCC], model[CNN], important[MFCC-4], classification[bonafide])",
    "ref": [
      " the audio sample had MFCC features extracted and MFCC-4 was determined to have a large impact on the CNN model that determined the sample to be bon .",
      " the audio sample had MFCC features extracted and CNN was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      "the audio sample had PSRCC features extracted and PSRCC-1 was determined to have a large impact on the CNN model that determined the sample to be replayed .",
      " the audio sample had CNN features extracted and CNN-4 was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      " the audio sample had MFCC features extracted and MFCC-4 was determined to have a large impact on the MFCC-4 model that determined the sample to be bonafide .",
      "the audio sample had PSRCC features extracted and PSRCC-1 was determined to have a large impact on the CNN model that determined the sample to be replayed .  the audio sample had MFCC features extracted and MFCC-4 was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      " the audio sample had MFCC features extracted and MFCC-4 was determined to have a large impact on the  model that determined the sample to be bonafide .",
      "the audio sample had MFCC features extracted and MFCC-4 was determined to have a large impact on the CNN model that determined the sample to be bonafide .  the audio sample had MFCC features extracted and MFCC-4 was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      " the audio sample had MFCC features extracted and  was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      " the audio sample had MF features extracted and MF-4 was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      " the audio sample had MFCC features extracted and MFCC-4 was determined to have a large impact on the CNN model that determined the sample to be bonafide ."
    ],
    "new_mr": "<inform> inform ( <extracted> extracted: [ MFCC ], <model> model: [ CNN ], <important> important: [ MFCC-4 ], <classification> classification: [ bonafide ]> )"
  },
  {
    "mr": "inform(extracted[PSRCC], model[CNN], important[PSRCC-7], classification[bonafide])",
    "ref": [
      " the audio sample had PSRCC features extracted and PSRCC-7 was determined to have a large impact on the CNN model that determined the sample to be PSRCC .",
      " the audio sample had PSRCC features extracted and CNN was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      "shap determined that the MFCC-17 feature was one of the more important features by assigning it a value of 0.8093 .  the audio sample had PSRCC features extracted and PSRCC-7 was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      " the audio sample had P features extracted and P-7 was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      " the audio sample had PSRCC features extracted and PSRCC-7 was determined to have a large impact on the PSRCC model that determined the sample to be bonafide .",
      "shap determined that the MFCC-17 feature was one of the more important features by assigning it a value of 0.8093 .",
      " the audio sample had PSRCC features extracted and PSRCC-7 was determined to have a large impact on the CNN model that determined the sample to be bon .",
      " the audio sample had PSRCC features extracted and PSRCC- was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      " the audio sample had PSRCC features extracted and PSRCC-7 was determined to have a large impact on the  model that determined the sample to be bonafide .",
      "the audio sample had PSRCC features extracted and PSRCC-7 was determined to have a large impact on the CNN model that determined the sample to be bonafide .  the audio sample had PSRCC features extracted and PSRCC-7 was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      " the audio sample had PSRCC features extracted and PSRCC-7 was determined to have a large impact on the CNN model that determined the sample to be bonafide ."
    ],
    "new_mr": "<inform> inform ( <extracted> extracted: [ PSRCC ], <model> model: [ CNN ], <important> important: [ PSRCC-7 ], <classification> classification: [ bonafide ]> )"
  },
  {
    "mr": "inform(classification[spoof], edit_type[cloning])",
    "ref": [
      "Yes, MFCC-17, which a shap value of -0.0283, was used to detect the sample as replayed . Voice cloning was used .",
      "Voice clonin was used .",
      "Voice cloning was used . Voice cloning was used .",
      "Voice spoof was used .",
      "Yes, MFCC-17, which a shap value of -0.0283, was used to detect the sample as replayed .",
      "Yes, MFCC-17, which a shap value of -0.0283, was used to detect the sample as replayed . Voice cloning was used .",
      "Voice clonin was used .",
      "Voice cloning was used . Voice cloning was used .",
      "Voice spoof was used .",
      "Yes, MFCC-17, which a shap value of -0.0283, was used to detect the sample as replayed .",
      "Voice cloning was used ."
    ],
    "new_mr": "<inform> inform ( <classification> classification: [ spoof ], <edit_type> edit type: [ cloning ]> )"
  },
  {
    "mr": "inform(response[yes], feature[GTCC-4], determined[speaker_id])",
    "ref": [
      "yes, GTCC-4 was used to determine speaker id .  yes, GTCC-4 was used to determine speaker id .",
      " yes, speaker_id was used to determine speaker id .",
      "Yes, LFCC-48, which a shap value of 0.2133, was used to detect the sample as replayed .",
      " ye, GTCC-4 was used to determine speaker id .",
      " yes, GTCC- was used to determine speaker id .",
      "Yes, LFCC-48, which a shap value of 0.2133, was used to detect the sample as replayed .  yes, GTCC-4 was used to determine speaker id .",
      " yes.",
      " speaker_id, GTCC-4 was used to determine speaker id .",
      "yes, GTCC-4 was used to determine speaker id .  yes, GTCC-4 was used to determine speaker id .",
      " yes, speaker_id was used to determine speaker id .",
      " yes, GTCC-4 was used to determine speaker id ."
    ],
    "new_mr": "<inform> inform ( <response> response: [ yes ], <feature> feature: [ GTCC-4 ], <determined> determined: [ speaker_id ]> )"
  },
  {
    "mr": "inform(classification[bonafide], edit_type[none])",
    "ref": [
      "The spoofed audio was not converted . No other spoof types were detected .",
      "The spoofed audio was not converted .",
      "No other spoof types were detected . No other spoof types were detected .",
      "The spoofed audio was not converted . No other spoof types were detected .",
      "The spoofed audio was not converted .",
      "No other spoof types were detected . No other spoof types were detected .",
      "The spoofed audio was not converted . No other spoof types were detected .",
      "The spoofed audio was not converted .",
      "No other spoof types were detected . No other spoof types were detected .",
      "The spoofed audio was not converted . No other spoof types were detected .",
      "No other spoof types were detected ."
    ],
    "new_mr": "<inform> inform ( <classification> classification: [ bonafide ], <edit_type> edit type: [ none ]> )"
  },
  {
    "mr": "inform(response[yes], speaker_id[1], feature[GTCC-2], interpreter[shap], shap_value[1])",
    "ref": [
      "Yes, person 1 was detected by GTCC-2 with a shap value of 1 .  Yes, person 1 was detected by GTCC-2 with a shap value of 1 .",
      " Yes, person 1 was detected by GTCC-2 with a 1 value of 1 .",
      " Yes, person 1 was detected by GTCC-2 with a  value of 1 .",
      "That microphone was used for 5 seconds .  Yes, person 1 was detected by GTCC-2 with a shap value of 1 .",
      " Yes.",
      " Yes, person  was detected by GTCC-2 with a shap value of  .",
      " Yes, person 1 was detected by GT with a shap value of 1 .",
      " Yes, person 1 was detected by yes with a shap value of 1 .",
      " Yes, person GTCC-2 was detected by GTCC-2 with a shap value of GTCC-2 .",
      "That microphone was used for 5 seconds .",
      " Yes, person 1 was detected by GTCC-2 with a shap value of 1 ."
    ],
    "new_mr": "<inform> inform ( <response> response: [ yes ], <speaker_id> speaker id: [ 1 ], <feature> feature: [ GTCC-2 ], <interpreter> interpreter: [ shap ], <shap_value> shap value: [ 1 ]> )"
  },
  {
    "mr": "inform(classification[spoof], edit_type[speed], change_at[37])",
    "ref": [
      "shap determined that the MSRCC-7 feature was one of the more important features by assigning it a value of -0.6482 . There is an unusually long pause at 37 seconds .",
      "There is an unusually long pause at speed seconds .",
      "There is an unusually long pause at 37 seconds . There is an unusually long pause at 37 seconds .",
      "There is an unusually long pause at  seconds .",
      "shap determined that the MSRCC-7 feature was one of the more important features by assigning it a value of -0.6482 .",
      "shap determined that the MSRCC-7 feature was one of the more important features by assigning it a value of -0.6482 . There is an unusually long pause at 37 seconds .",
      "There is an unusually long pause at speed seconds .",
      "There is an unusually long pause at 37 seconds . There is an unusually long pause at 37 seconds .",
      "There is an unusually long pause at  seconds .",
      "shap determined that the MSRCC-7 feature was one of the more important features by assigning it a value of -0.6482 .",
      "There is an unusually long pause at 37 seconds ."
    ],
    "new_mr": "<inform> inform ( <classification> classification: [ spoof ], <edit_type> edit type: [ speed ], <change_at> change at: [ 37 ]> )"
  },
  {
    "mr": "inform(response[yes], speaker_id[1], feature[LFCC-52], interpreter[shap], shap_value[-0.7766])",
    "ref": [
      " Yes, , which a shap value of -0.7766, was used to detect the id of speaker 1 for the audio sample .",
      "Yes, MFCC-37, which a shap value of -0.5104, was used to detect the sample as replayed .",
      " Yes, LFCC-52, which a shap value of -0.7766.",
      " Yes, which a shap value of -0.7766, was used to detect the id of speaker 1 for the audio sample .",
      " Yes, LFCC-52, which a shap value of -0.7766, was used to detect the id of speaker yes for the audio sample .",
      "Yes, MFCC-37, which a shap value of -0.5104, was used to detect the sample as replayed .  Yes, LFCC-52, which a shap value of -0.7766, was used to detect the id of speaker 1 for the audio sample .",
      " Yes, LFCC-52, which a -0.7766 value of -0.7766, was used to detect the id of speaker 1 for the audio sample .",
      " Yes.7766, was used to detect the id of speaker 1 for the audio sample .",
      " Yes, LFCC-52.7766, was used to detect the id of speaker 1 for the audio sample .",
      " Yes, LFCC-52, which a shap value of LFCC-52, was used to detect the id of speaker 1 for the audio sample .",
      " Yes, LFCC-52, which a shap value of -0.7766, was used to detect the id of speaker 1 for the audio sample ."
    ],
    "new_mr": "<inform> inform ( <response> response: [ yes ], <speaker_id> speaker id: [ 1 ], <feature> feature: [ LFCC-52 ], <interpreter> interpreter: [ shap ], <shap_value> shap value: [ -0.7766 ]> )"
  },
  {
    "mr": "inform(speaker_id[8])",
    "ref": [
      "8 was found to be the id of the speaker in the sample .  8 was found to be the id of the speaker in the sample .",
      "  was found to be the id of the speaker in the sample .",
      "the audio sample had PSRCC features extracted and PSRCC-5 was determined to have a large impact on the CNN model that determined the sample to be replayed .",
      "the audio sample had PSRCC features extracted and PSRCC-5 was determined to have a large impact on the CNN model that determined the sample to be replayed .  8 was found to be the id of the speaker in the sample .",
      "8 was found to be the id of the speaker in the sample .  8 was found to be the id of the speaker in the sample .",
      "  was found to be the id of the speaker in the sample .",
      "the audio sample had PSRCC features extracted and PSRCC-5 was determined to have a large impact on the CNN model that determined the sample to be replayed .",
      "the audio sample had PSRCC features extracted and PSRCC-5 was determined to have a large impact on the CNN model that determined the sample to be replayed .  8 was found to be the id of the speaker in the sample .",
      "8 was found to be the id of the speaker in the sample .  8 was found to be the id of the speaker in the sample .",
      "  was found to be the id of the speaker in the sample .",
      " 8 was found to be the id of the speaker in the sample ."
    ],
    "new_mr": "<inform> inform ( <speaker_id> speaker id: [ 8 ]> )"
  },
  {
    "mr": "inform(general)",
    "ref": [
      "Spectral centroid frequency ( SCF ) is the weighted average frequency for a given subband , where the weights are the normalized energy of each frequency component in that subband . Since this measure captures the center of gravity of each subband, it can detect the approximate location of formants, which are manifested as peaks in neighbouring subband . Hence , the SCF feature is affected by changes in pitch and harmonic structure . Hence , the SCF feature is affected by changes in pitch and harmonic structure . However, the center of gravity of a subband is also affected by the harmonic structure and pitch frequencies produced by the vocal source particularly for narrow bandwidths . Hence , the SCF feature is affected by changes in pitch and harmonic structure .",
      "Spectral centroid frequency ( SCF ) is the weighted average frequency for a given subband , where the weights are the normalized energy of each frequency component in that subband .  However, the center of gravity of a subband is also affected by the harmonic structure and pitch frequencies produced by the vocal source particularly for narrow bandwidths . Hence , the SCF feature is affected by changes in pitch and harmonic structure .",
      "Spectral centroid frequency ( SCF ) is the weighted average frequency for a given subband , where the weights are the normalized energy of each frequency component in that subband . Since this measure captures the center of gravity of each subband, it can detect the approximate location of formants. However, the center of gravity of a subband is also affected by the harmonic structure and pitch frequencies produced by the vocal source particularly for narrow bandwidths . Hence , the SCF feature is affected by changes in pitch and harmonic structure .",
      "Spectral centroid frequency ( SCF ) is the weighted average frequency for a given subband , where the weights are the normalized energy of each frequency component in that subband . Since this measure captures the center of gravity of each subband, it can detect the approximate location of formants, which are manifested as peaks in neighbouring subband . However, the center of gravity of a subband is also affected by the harmonic structure and pitch frequencies produced by the vocal source particularly for narrow bandwidths .",
      "It was altered using software . Spectral centroid frequency ( SCF ) is the weighted average frequency for a given subband , where the weights are the normalized energy of each frequency component in that subband . Since this measure captures the center of gravity of each subband, it can detect the approximate location of formants, which are manifested as peaks in neighbouring subband . It was altered using software . However, the center of gravity of a subband is also affected by the harmonic structure and pitch frequencies produced by the vocal source particularly for narrow bandwidths . Hence , the SCF feature is affected by changes in pitch and harmonic structure .",
      "Spectral centroid frequency ( SCF ) is the weighted average frequency for a given subband , where the weights are the normalized energy of each frequency component in that subband . Since this measure captures the center of gravity of each subband, it can detect the approximate location of formants, which are manifested as peaks in neighbouring subband . However, the center of gravity of a subband is also affected by the harmonic structure and pitch frequencies produced by the vocal source particularly for narrow bandwidths . Hence .",
      "Spectral centroid frequency ( SCF ) is the weighted average frequency for a given subband , where the weights are the normalized energy of each frequency component in that subband . Since this measure captures the center of gravity of each subband, it can detect the approximate location of formants, which are manifested as peaks in neighbouring subband . However, the SCF feature is affected by changes in pitch and harmonic structure .",
      "Spectral centroid frequency ( SCF ) is the weighted average frequency for a given subband , where the weights are the normalized energy of each frequency component in that subband . Since this measure captures the center of gravity of each subband, it can detect the approximate location of formants, the center of gravity of a subband is also affected by the harmonic structure and pitch frequencies produced by the vocal source particularly for narrow bandwidths . Hence , the SCF feature is affected by changes in pitch and harmonic structure .",
      "Spectral centroid frequency ( SCF ) is the weighted average frequency for a given subband . Since this measure captures the center of gravity of each subband, it can detect the approximate location of formants, which are manifested as peaks in neighbouring subband . However, the center of gravity of a subband is also affected by the harmonic structure and pitch frequencies produced by the vocal source particularly for narrow bandwidths . Hence , the SCF feature is affected by changes in pitch and harmonic structure .",
      "Hence , the SCF feature is affected by changes in pitch and harmonic structure . Spectral centroid frequency ( SCF ) is the weighted average frequency for a given subband , where the weights are the normalized energy of each frequency component in that subband . Since this measure captures the center of gravity of each subband, it can detect the approximate location of formants, which are manifested as peaks in neighbouring subband . Hence , the SCF feature is affected by changes in pitch and harmonic structure . Hence , the SCF feature is affected by changes in pitch and harmonic structure . However, the center of gravity of a subband is also affected by the harmonic structure and pitch frequencies produced by the vocal source particularly for narrow bandwidths . Hence , the SCF feature is affected by changes in pitch and harmonic structure .",
      "Spectral centroid frequency ( SCF ) is the weighted average frequency for a given subband , where the weights are the normalized energy of each frequency component in that subband . Since this measure captures the center of gravity of each subband, it can detect the approximate location of formants, which are manifested as peaks in neighbouring subband . However, the center of gravity of a subband is also affected by the harmonic structure and pitch frequencies produced by the vocal source particularly for narrow bandwidths . Hence , the SCF feature is affected by changes in pitch and harmonic structure ."
    ],
    "new_mr": "<inform> inform ( > )"
  },
  {
    "mr": "inform(response[Yes], interpreter[shap], important[MFCC-37], classification[replayed], shap_value[-0.5104])",
    "ref": [
      " Yes, which a shap value of -0.5104, was used to detect the sample as replayed .",
      " Yes, MFCC-37, which a shap value of shap, was used to detect the sample as replayed .",
      " Yes, MFCC-37.5104, was used to detect the sample as replayed .",
      " Yes, MFCC-37, which a sh value of -0.5104, was used to detect the sample as replayed .",
      " Ye, MFCC-37, which a shap value of -0.5104, was used to detect the sample as replayed .",
      " Yes, MFCC-37, which a shap value of -0.5104.",
      " Yes, replayed, which a shap value of -0.5104, was used to detect the sample as replayed .",
      "Yes, MFCC-37, which a shap value of -0.5104, was used to detect the sample as replayed .  Yes, MFCC-37, which a shap value of -0.5104, was used to detect the sample as replayed .",
      " Yes.5104, was used to detect the sample as replayed .",
      "The signal is consistent with a cloned voice .  Yes, MFCC-37, which a shap value of -0.5104, was used to detect the sample as replayed .",
      " Yes, MFCC-37, which a shap value of -0.5104, was used to detect the sample as replayed ."
    ],
    "new_mr": "<inform> inform ( <response> response: [ Yes ], <interpreter> interpreter: [ shap ], <important> important: [ MFCC-37 ], <classification> classification: [ replayed ], <shap_value> shap value: [ -0.5104 ]> )"
  },
  {
    "mr": "inform(general)",
    "ref": [
      "The cut takes place at the 20 second mark .",
      "The cut takes place at the 20 second mark . The SHAP values indicate the contribution of the features on the outcome of the classification model .",
      "The SHAP values indicate the contribution of the features on the outcome of the classification model . The SHAP values indicate the contribution of the features on the outcome of the classification model .",
      "The cut takes place at the 20 second mark .",
      "The cut takes place at the 20 second mark . The SHAP values indicate the contribution of the features on the outcome of the classification model .",
      "The SHAP values indicate the contribution of the features on the outcome of the classification model . The SHAP values indicate the contribution of the features on the outcome of the classification model .",
      "The cut takes place at the 20 second mark .",
      "The cut takes place at the 20 second mark . The SHAP values indicate the contribution of the features on the outcome of the classification model .",
      "The SHAP values indicate the contribution of the features on the outcome of the classification model . The SHAP values indicate the contribution of the features on the outcome of the classification model .",
      "The cut takes place at the 20 second mark .",
      "The SHAP values indicate the contribution of the features on the outcome of the classification model ."
    ],
    "new_mr": "<inform> inform ( > )"
  },
  {
    "mr": "inform(response[yes], speaker_id[4], feature[LFCC-40], interpreter[shap], shap_value[-0.6692])",
    "ref": [
      " Yes, LFCC-40, which a shap value of -0.669, was used to detect the id of speaker 4 for the audio sample .",
      " Yes, , which a shap value of -0.6692, was used to detect the id of speaker 4 for the audio sample .",
      "Yes, LFCC-40, which a shap value of -0.6692, was used to detect the id of speaker 4 for the audio sample .  Yes, LFCC-40, which a shap value of -0.6692, was used to detect the id of speaker 4 for the audio sample .",
      " Yes, LFCC-40, was used to detect the id of speaker 4 for the audio sample .",
      " Yes, which a shap value of -0.6692, was used to detect the id of speaker 4 for the audio sample .",
      " Yes, LFCC-40, which a LFCC-40 value of -0.6692, was used to detect the id of speaker 4 for the audio sample .",
      "The spoofed audio was a replayed audio .",
      " Yes, LFCC-yes0, which a shap value of -0.6692, was used to detect the id of speaker yes for the audio sample .",
      " Yes.6692, was used to detect the id of speaker 4 for the audio sample .",
      " Yes, LFCC-40.6692, was used to detect the id of speaker 4 for the audio sample .",
      " Yes, LFCC-40, which a shap value of -0.6692, was used to detect the id of speaker 4 for the audio sample ."
    ],
    "new_mr": "<inform> inform ( <response> response: [ yes ], <speaker_id> speaker id: [ 4 ], <feature> feature: [ LFCC-40 ], <interpreter> interpreter: [ shap ], <shap_value> shap value: [ -0.6692 ]> )"
  },
  {
    "mr": "inform(response[Yes], interpreter[shap], important[PSRCC-9], classification[bonafide], shap_value[-0.9442])",
    "ref": [
      " Yes, , which a shap value of -0.9442, was used to detect the sample as bonafide .",
      " Yes, PSRCC-9, which a PSRCC-9 value of -0.9442, was used to detect the sample as bonafide .",
      " Yes, PSRCC-9, which a shap value of -0.9442, was used to detect the sample as bo .",
      "No, the recording is not converted .  Yes, PSRCC-9, which a shap value of -0.9442, was used to detect the sample as bonafide .",
      " Yes, PSRCC-9, which a shap value of -0.9442, was used to detect the sample as shap .",
      " Yes, which a shap value of -0.9442, was used to detect the sample as bonafide .",
      " Yes.9442, was used to detect the sample as bonafide .",
      " Yes, PSRCC-9, which a  value of -0.9442, was used to detect the sample as bonafide .",
      " PSRCC-9, PSRCC-9, which a shap value of -0.9442, was used to detect the sample as bonafide .",
      " Yes, PSRCC-9, which a shap value of -0.944, was used to detect the sample as bonafide .",
      " Yes, PSRCC-9, which a shap value of -0.9442, was used to detect the sample as bonafide ."
    ],
    "new_mr": "<inform> inform ( <response> response: [ Yes ], <interpreter> interpreter: [ shap ], <important> important: [ PSRCC-9 ], <classification> classification: [ bonafide ], <shap_value> shap value: [ -0.9442 ]> )"
  },
  {
    "mr": "inform(response[yes], speaker_id[3], feature[LFCC-28], interpreter[shap], shap_value[0.9935])",
    "ref": [
      " Yes, LFCC-28, was used to detect the id of speaker 3 for the audio sample .",
      " Yes, LFCC-28, which a shap value of 0.995, was used to detect the id of speaker  for the audio sample .",
      " Yes, LFCC-28, which a shap value of 0.993, was used to detect the id of speaker 3 for the audio sample .",
      " Yes, LFCC-28, which a  value of 0.9935, was used to detect the id of speaker 3 for the audio sample .",
      " Yes, LFCC-28, which a shap value of 0.9935.",
      " Yes, LFCC-28, which a shap value of yes, was used to detect the id of speaker 3 for the audio sample .",
      " Yes, 3, which a shap value of 0.9935, was used to detect the id of speaker 3 for the audio sample .",
      "Yes, LFCC-28, which a shap value of 0.9935, was used to detect the id of speaker 3 for the audio sample .  Yes, LFCC-28, which a shap value of 0.9935, was used to detect the id of speaker 3 for the audio sample .",
      " Yes, LFCC-28.9935, was used to detect the id of speaker 3 for the audio sample .",
      " Yes, LFCC-28, which a shap value of 0.99LFCC-285, was used to detect the id of speaker LFCC-28 for the audio sample .",
      " Yes, LFCC-28, which a shap value of 0.9935, was used to detect the id of speaker 3 for the audio sample ."
    ],
    "new_mr": "<inform> inform ( <response> response: [ yes ], <speaker_id> speaker id: [ 3 ], <feature> feature: [ LFCC-28 ], <interpreter> interpreter: [ shap ], <shap_value> shap value: [ 0.9935 ]> )"
  },
  {
    "mr": "inform(response[yes], speaker_id[3], feature[LFCC-31], interpreter[shap], shap_value[-0.7141])",
    "ref": [
      " Yes, LFCC-31, which a 3 value of -0.7141, was used to detect the id of speaker 3 for the audio sample .",
      " Yes, LF, which a shap value of -0.7141, was used to detect the id of speaker 3 for the audio sample .",
      " Yes, LFCC-31, which a shap value of -0.71, was used to detect the id of speaker 3 for the audio sample .",
      "Yes, LFCC-4, which a shap value of 0.2638, was used to detect the id of speaker 2 for the audio sample .",
      "Yes, LFCC-4, which a shap value of 0.2638, was used to detect the id of speaker 2 for the audio sample .  Yes, LFCC-31, which a shap value of -0.7141, was used to detect the id of speaker 3 for the audio sample .",
      "Yes, LFCC-31, which a shap value of -0.7141, was used to detect the id of speaker 3 for the audio sample .  Yes, LFCC-31, which a shap value of -0.7141, was used to detect the id of speaker 3 for the audio sample .",
      " Yes, LFCC-1, which a shap value of -0.7141, was used to detect the id of speaker  for the audio sample .",
      " Yes, LFCC-31, which a shap value of yes, was used to detect the id of speaker 3 for the audio sample .",
      " Yes, LFCC-31, was used to detect the id of speaker 3 for the audio sample .",
      " Yes, which a shap value of -0.7141, was used to detect the id of speaker 3 for the audio sample .",
      " Yes, LFCC-31, which a shap value of -0.7141, was used to detect the id of speaker 3 for the audio sample ."
    ],
    "new_mr": "<inform> inform ( <response> response: [ yes ], <speaker_id> speaker id: [ 3 ], <feature> feature: [ LFCC-31 ], <interpreter> interpreter: [ shap ], <shap_value> shap value: [ -0.7141 ]> )"
  },
  {
    "mr": "inform(speaker_id[1], model[SVM])",
    "ref": [
      "the audio sample was used in a SVM model tasked at detecting speaker id, determined to be 1 .",
      " the audio sample was used in a SVM model tasked at detecting speaker id, determined to be  .",
      " the audio sample was used in a SVM model tasked at detecting speaker id, determined to be SVM .",
      " the audio sample was used in a 1 model tasked at detecting speaker id, determined to be 1 .",
      " the audio sample was used in a S model tasked at detecting speaker id, determined to be 1 .",
      " the audio sample was used in a SVM model tasked at detecting speaker id.",
      "the audio sample was used in a SVM model tasked at detecting speaker id, determined to be 1 .  the audio sample was used in a SVM model tasked at detecting speaker id, determined to be 1 .",
      "the audio sample was used in a SVM model tasked at detecting speaker id, determined to be 1 .",
      " the audio sample was used in a SVM model tasked at detecting speaker id, determined to be  .",
      " the audio sample was used in a SVM model tasked at detecting speaker id, determined to be SVM .",
      " the audio sample was used in a SVM model tasked at detecting speaker id, determined to be 1 ."
    ],
    "new_mr": "<inform> inform ( <speaker_id> speaker id: [ 1 ], <model> model: [ SVM ]> )"
  },
  {
    "mr": "inform(classification[spoof], edit_type[computer])",
    "ref": [
      "The audio shows signs of being edited . The audio shows signs of being edited .",
      "Yes, LFCC-32, which a shap value of -0.3151, was used to detect the sample as replayed . The audio shows signs of being edited .",
      "Yes, LFCC-32, which a shap value of -0.3151, was used to detect the sample as replayed .",
      "The audio shows signs of being edited . The audio shows signs of being edited .",
      "Yes, LFCC-32, which a shap value of -0.3151, was used to detect the sample as replayed . The audio shows signs of being edited .",
      "Yes, LFCC-32, which a shap value of -0.3151, was used to detect the sample as replayed .",
      "The audio shows signs of being edited . The audio shows signs of being edited .",
      "Yes, LFCC-32, which a shap value of -0.3151, was used to detect the sample as replayed . The audio shows signs of being edited .",
      "Yes, LFCC-32, which a shap value of -0.3151, was used to detect the sample as replayed .",
      "The audio shows signs of being edited . The audio shows signs of being edited .",
      "The audio shows signs of being edited ."
    ],
    "new_mr": "<inform> inform ( <classification> classification: [ spoof ], <edit_type> edit type: [ computer ]> )"
  },
  {
    "mr": "inform(response[Yes], interpreter[shap], important[LFCC-14], classification[bonafide], shap_value[0.0192])",
    "ref": [
      "The signal indicates voice cloning .  Yes, LFCC-14, which a shap value of 0.0192, was used to detect the sample as bonafide .",
      " Yes.0192, was used to detect the sample as bonafide .",
      " Yes, which a shap value of 0.0192, was used to detect the sample as bonafide .",
      " Yes, LFCC-14, which a 0.0192 value of 0.0192, was used to detect the sample as bonafide .",
      " Yes, LFCC-14, which a shap value of 0.0192, was used to detect the sample as b .",
      " Yes, 0.0192, which a shap value of 0.0192, was used to detect the sample as bonafide .",
      " shap, LFCC-14, which a shap value of 0.0192, was used to detect the sample as bonafide .",
      " Yes, LFCC-14, which a shap value of 0.0192.",
      "Yes, LFCC-14, which a shap value of 0.0192, was used to detect the sample as bonafide .  Yes, LFCC-14, which a shap value of 0.0192, was used to detect the sample as bonafide .",
      " Yes, LFCC-14, was used to detect the sample as bonafide .",
      " Yes, LFCC-14, which a shap value of 0.0192, was used to detect the sample as bonafide ."
    ],
    "new_mr": "<inform> inform ( <response> response: [ Yes ], <interpreter> interpreter: [ shap ], <important> important: [ LFCC-14 ], <classification> classification: [ bonafide ], <shap_value> shap value: [ 0.0192 ]> )"
  },
  {
    "mr": "inform(response[Yes], interpreter[shap], important[LFCC-15], classification[bonafide], shap_value[-0.1785])",
    "ref": [
      "shap determined that the LFCC-39 feature was one of the more important features by assigning it a value of 0.6906 .",
      " Yes, LFCC-15, which a shap value of bonafide, was used to detect the sample as bonafide .",
      " Yes, LFCC-15, which a shap value of -0.1785, was used to detect the sample as shap .",
      " Yes, LFCC-15, which a  value of -0.1785, was used to detect the sample as bonafide .",
      " Yes, LFCC-15, which a shap value of -0.17, was used to detect the sample as bonafide .",
      " Yes, LFCC-15, which a Yes value of -0.1785, was used to detect the sample as bonafide .",
      "Yes, LFCC-15, which a shap value of -0.1785, was used to detect the sample as bonafide .  Yes, LFCC-15, which a shap value of -0.1785, was used to detect the sample as bonafide .",
      " Yes, L, which a shap value of -0.1785, was used to detect the sample as bonafide .",
      " Yes, LFCC-15, which a shap value of -0.1785, was used to detect the sample as bon .",
      " Yes, which a shap value of -0.1785, was used to detect the sample as bonafide .",
      " Yes, LFCC-15, which a shap value of -0.1785, was used to detect the sample as bonafide ."
    ],
    "new_mr": "<inform> inform ( <response> response: [ Yes ], <interpreter> interpreter: [ shap ], <important> important: [ LFCC-15 ], <classification> classification: [ bonafide ], <shap_value> shap value: [ -0.1785 ]> )"
  },
  {
    "mr": "inform(response[Yes], interpreter[shap], important[LFCC-3], classification[bonafide], shap_value[-0.2091])",
    "ref": [
      " Yes, which a shap value of -0.2091, was used to detect the sample as bonafide .",
      "Several features showed the Reverberation signature .",
      " Yes, LFCC-3.2091, was used to detect the sample as bonafide .",
      " Yes, LFCC-3, was used to detect the sample as bonafide .",
      " Yes, LFCC-3, which a shap value of -0.2091, was used to detect the sample as bonafid .",
      " Yes, LFCC-3, which a  value of -0.2091, was used to detect the sample as bonafide .",
      " Yes, LFCC-, which a shap value of -0.2091, was used to detect the sample as bonafide .",
      " Yes, LFCC-3, which a shap value of LFCC-3, was used to detect the sample as bonafide .",
      "Yes, LFCC-3, which a shap value of -0.2091, was used to detect the sample as bonafide .  Yes, LFCC-3, which a shap value of -0.2091, was used to detect the sample as bonafide .",
      " shap, LFCC-3, which a shap value of -0.2091, was used to detect the sample as bonafide .",
      " Yes, LFCC-3, which a shap value of -0.2091, was used to detect the sample as bonafide ."
    ],
    "new_mr": "<inform> inform ( <response> response: [ Yes ], <interpreter> interpreter: [ shap ], <important> important: [ LFCC-3 ], <classification> classification: [ bonafide ], <shap_value> shap value: [ -0.2091 ]> )"
  },
  {
    "mr": "inform(speaker_id[3])",
    "ref": [
      "person 3 spoke the audio sample .  person 3 spoke the audio sample .",
      "the audio sample had MFCC features extracted and MFCC-4 was determined to have a large impact on the CNN model that determined the sample to be replayed .",
      "the audio sample had MFCC features extracted and MFCC-4 was determined to have a large impact on the CNN model that determined the sample to be replayed .  person 3 spoke the audio sample .",
      " person  spoke the audio sample .",
      "person 3 spoke the audio sample .  person 3 spoke the audio sample .",
      "the audio sample had MFCC features extracted and MFCC-4 was determined to have a large impact on the CNN model that determined the sample to be replayed .",
      "the audio sample had MFCC features extracted and MFCC-4 was determined to have a large impact on the CNN model that determined the sample to be replayed .  person 3 spoke the audio sample .",
      " person  spoke the audio sample .",
      "person 3 spoke the audio sample .  person 3 spoke the audio sample .",
      "the audio sample had MFCC features extracted and MFCC-4 was determined to have a large impact on the CNN model that determined the sample to be replayed .",
      " person 3 spoke the audio sample ."
    ],
    "new_mr": "<inform> inform ( <speaker_id> speaker id: [ 3 ]> )"
  },
  {
    "mr": "inform(classification[spoof])",
    "ref": [
      "The audio signal shows signs of it . The audio signal shows signs of it .",
      "Yes, LFCC-4, which a shap value of -0.069, was used to detect the sample as replayed . The audio signal shows signs of it .",
      "Yes, LFCC-4, which a shap value of -0.069, was used to detect the sample as replayed .",
      "The audio signal shows signs of it . The audio signal shows signs of it .",
      "Yes, LFCC-4, which a shap value of -0.069, was used to detect the sample as replayed . The audio signal shows signs of it .",
      "Yes, LFCC-4, which a shap value of -0.069, was used to detect the sample as replayed .",
      "The audio signal shows signs of it . The audio signal shows signs of it .",
      "Yes, LFCC-4, which a shap value of -0.069, was used to detect the sample as replayed . The audio signal shows signs of it .",
      "Yes, LFCC-4, which a shap value of -0.069, was used to detect the sample as replayed .",
      "The audio signal shows signs of it . The audio signal shows signs of it .",
      "The audio signal shows signs of it . "
    ],
    "new_mr": "<inform> inform ( <classification> classification: [ spoof ]> )"
  },
  {
    "mr": "inform(response[Yes], interpreter[shap], important[MSRCC-11], classification[bonafide], shap_value[-0.6615])",
    "ref": [
      " Yes, MSRCC-11, which a shap value of -0.6615, was used to detect the sample as bonafid .",
      " Yes, MSRCC-11, which a shap value of -, was used to detect the sample as bonafide .",
      "Yes, MSRCC-11, which a shap value of -0.6615, was used to detect the sample as bonafide .  Yes, MSRCC-11, which a shap value of -0.6615, was used to detect the sample as bonafide .",
      " Yes, , which a shap value of -0.6615, was used to detect the sample as bonafide .",
      " Yes, MSRCC-11, was used to detect the sample as bonafide .",
      "There are different microphone signatures .  Yes, MSRCC-11, which a shap value of -0.6615, was used to detect the sample as bonafide .",
      " Yes, MSRCC-11, which a sh value of -0.6615, was used to detect the sample as bonafide .",
      " Yes, MSRCC-11, which a shap value of -0.6615.",
      " Yes, shap, which a shap value of -0.6615, was used to detect the sample as bonafide .",
      " Yes, MSRCC-11, which a shap value of Yes, was used to detect the sample as bonafide .",
      " Yes, MSRCC-11, which a shap value of -0.6615, was used to detect the sample as bonafide ."
    ],
    "new_mr": "<inform> inform ( <response> response: [ Yes ], <interpreter> interpreter: [ shap ], <important> important: [ MSRCC-11 ], <classification> classification: [ bonafide ], <shap_value> shap value: [ -0.6615 ]> )"
  },
  {
    "mr": "inform(response[Yes], interpreter[shap], important[LFCC-22], classification[replayed], shap_value[0.752])",
    "ref": [
      " Yes, shap, which a shap value of 0.752, was used to detect the sample as replayed .",
      " Yes, LFCC-22, which a shap value of 0.752.",
      " Yes, LFCC-22, was used to detect the sample as replayed .",
      " Yes, LFCC-22, which a shap value of 0.752, was used to detect the sample as LFCC-22 .",
      " , LFCC-22, which a shap value of 0.752, was used to detect the sample as replayed .",
      " Yes, LFCC-22, which a sh value of 0.752, was used to detect the sample as replayed .",
      " Yes.752, was used to detect the sample as replayed .",
      "Yes, LFCC-22, which a shap value of 0.752, was used to detect the sample as replayed .  Yes, LFCC-22, which a shap value of 0.752, was used to detect the sample as replayed .",
      " Yes, LFCC-22.752, was used to detect the sample as replayed .",
      " Yes, LFCC-22, which a shap value of replayed, was used to detect the sample as replayed .",
      " Yes, LFCC-22, which a shap value of 0.752, was used to detect the sample as replayed ."
    ],
    "new_mr": "<inform> inform ( <response> response: [ Yes ], <interpreter> interpreter: [ shap ], <important> important: [ LFCC-22 ], <classification> classification: [ replayed ], <shap_value> shap value: [ 0.752 ]> )"
  },
  {
    "mr": "inform(response[yes], speaker_id[3], feature[MFCC-31], interpreter[shap], shap_value[-0.0766])",
    "ref": [
      " Yes, MFCC-31, which a shap value of -, was used to detect the id of speaker 3 for the audio sample .",
      " Yes, MFCC-31.0766, was used to detect the id of speaker 3 for the audio sample .",
      "Yes, MFCC-18, which a shap value of 0.2232, was used to detect the sample as replayed .  Yes, MFCC-31, which a shap value of -0.0766, was used to detect the id of speaker 3 for the audio sample .",
      " Yes, MFCC-shap1, which a shap value of -0.0766, was used to detect the id of speaker shap for the audio sample .",
      " Yes, which a shap value of -0.0766, was used to detect the id of speaker 3 for the audio sample .",
      " Yes, M, which a shap value of -0.0766, was used to detect the id of speaker 3 for the audio sample .",
      " Yes, MFCC-31, was used to detect the id of speaker 3 for the audio sample .",
      " Yes, MFCC-31, which a shap value of -0.0766.",
      " Yes, 3, which a shap value of -0.0766, was used to detect the id of speaker 3 for the audio sample .",
      "Yes, MFCC-18, which a shap value of 0.2232, was used to detect the sample as replayed .",
      " Yes, MFCC-31, which a shap value of -0.0766, was used to detect the id of speaker 3 for the audio sample ."
    ],
    "new_mr": "<inform> inform ( <response> response: [ yes ], <speaker_id> speaker id: [ 3 ], <feature> feature: [ MFCC-31 ], <interpreter> interpreter: [ shap ], <shap_value> shap value: [ -0.0766 ]> )"
  },
  {
    "mr": "inform(response[Yes], classification[spoof], edit_type[sampling])",
    "ref": [
      "Yes, PSRCC-4, which a shap value of 0.5129, was used to detect the sample as bonafide .  Yes, PSRCC-4, which a shap value of 0.5129, was used to detect the sample as bonafide .",
      "Yes . There is evidence of Yes .",
      "Yes . Yes . There is evidence of sampling .",
      "Y . There is evidence of sampling .",
      "There is evidence of sampling .",
      "spoof . There is evidence of sampling .",
      "Yes . There is evidence of sam .",
      "Yes . Yes . Yes . There is evidence of sampling .",
      "Yes .",
      "Yes, PSRCC-4, which a shap value of 0.5129, was used to detect the sample as bonafide . Yes .  Yes, PSRCC-4, which a shap value of 0.5129, was used to detect the sample as bonafide . There is evidence of sampling .",
      "Yes . There is evidence of sampling ."
    ],
    "new_mr": "<inform> inform ( <response> response: [ Yes ], <classification> classification: [ spoof ], <edit_type> edit type: [ sampling ]> )"
  },
  {
    "mr": "inform(response[Yes], interpreter[shap], important[LFCC-49], classification[bonafide], shap_value[-0.9585])",
    "ref": [
      " Yes, LFCC-49, which a shap value of -0, was used to detect the sample as bonafide .",
      " Yes.9585, was used to detect the sample as bonafide .",
      " Yes, LFCC-49, which a  value of -0.9585, was used to detect the sample as bonafide .",
      " , LFCC-49, which a shap value of -0.9585, was used to detect the sample as bonafide .",
      " Yes, LF, which a shap value of -0.9585, was used to detect the sample as bonafide .",
      " Yes, LFCC-49, was used to detect the sample as bonafide .",
      " Yes, LFCC-49, which a shap value of -0.9585, was used to detect the sample as LFCC-49 .",
      " Yes, LFCC-49, which a shap value of -0.9585.",
      " Yes, LFCC-49.9585, was used to detect the sample as bonafide .",
      " Yes, which a shap value of -0.9585, was used to detect the sample as bonafide .",
      " Yes, LFCC-49, which a shap value of -0.9585, was used to detect the sample as bonafide ."
    ],
    "new_mr": "<inform> inform ( <response> response: [ Yes ], <interpreter> interpreter: [ shap ], <important> important: [ LFCC-49 ], <classification> classification: [ bonafide ], <shap_value> shap value: [ -0.9585 ]> )"
  },
  {
    "mr": "inform(response[yes], speaker_id[1], feature[MSRCC-2], interpreter[shap], shap_value[0.8771])",
    "ref": [
      " Yes, person 1 was detected by MSRCC- with a shap value of 0.8771 .",
      " Yes, person yes was detected by MSRCC-2 with a shap value of 0.877yes .",
      " Yes, person  was detected by MSRCC-2 with a shap value of 0.877 .",
      " Yes, person 1 was detected by MSRCC-2 with a sh value of 0.8771 .",
      " Yes, person 1 was detected by MSRCC-2 with a shap value of yes .",
      " Yes, person 1 was detected by shap with a shap value of 0.8771 .",
      "Yes, LFCC-5, which a shap value of 0.767, was used to detect the sample as bonafide .  Yes, person 1 was detected by MSRCC-2 with a shap value of 0.8771 .",
      " Yes, person 1 was detected by MSRCC-2 with a shap value of 0. .",
      " Yes, person 1 was detected by MSRCC-2 with a 1 value of 0.8771 .",
      " Yes.8771 .",
      " Yes, person 1 was detected by MSRCC-2 with a shap value of 0.8771 ."
    ],
    "new_mr": "<inform> inform ( <response> response: [ yes ], <speaker_id> speaker id: [ 1 ], <feature> feature: [ MSRCC-2 ], <interpreter> interpreter: [ shap ], <shap_value> shap value: [ 0.8771 ]> )"
  },
  {
    "mr": "inform(response[Yes], interpreter[shap], important[MFCC-36], classification[replayed], shap_value[-0.7831])",
    "ref": [
      "Yes, LFCC-57, which a shap value of -0.3017, was used to detect the sample as replayed .  Yes, MFCC-36, which a shap value of -0.7831, was used to detect the sample as replayed .",
      " Y, MFCC-36, which a shap value of -0.7831, was used to detect the sample as replayed .",
      " Yes, MFCC-36, which a shap value of -0., was used to detect the sample as replayed .",
      " Yes, MFCC, which a shap value of -0.7831, was used to detect the sample as replayed .",
      " Yes, MFCC-36, which a shap value of -0.7831.",
      " MFCC-36, MFCC-36, which a shap value of -0.7831, was used to detect the sample as replayed .",
      " Yes.7831, was used to detect the sample as replayed .",
      " Yes, -0.7831, which a shap value of -0.7831, was used to detect the sample as replayed .",
      " Yes, MFCC-36, which a Yes value of -0.7831, was used to detect the sample as replayed .",
      " Yes, MFCC-36, which a shap value of shap, was used to detect the sample as replayed .",
      " Yes, MFCC-36, which a shap value of -0.7831, was used to detect the sample as replayed ."
    ],
    "new_mr": "<inform> inform ( <response> response: [ Yes ], <interpreter> interpreter: [ shap ], <important> important: [ MFCC-36 ], <classification> classification: [ replayed ], <shap_value> shap value: [ -0.7831 ]> )"
  },
  {
    "mr": "inform(classification[spoof], edit_type[software])",
    "ref": [
      "Yes , the recording shows signs of 3 different editors . Yes , the recording shows signs of 3 different editors .",
      "shap determined that the MFCC-3 feature was one of the more important features by assigning it a value of 0.8689 .",
      "shap determined that the MFCC-3 feature was one of the more important features by assigning it a value of 0.8689 . Yes , the recording shows signs of 3 different editors .",
      "Yes .",
      "Yes , the recording shows signs of 3 different editors . Yes , the recording shows signs of 3 different editors .",
      "shap determined that the MFCC-3 feature was one of the more important features by assigning it a value of 0.8689 .",
      "shap determined that the MFCC-3 feature was one of the more important features by assigning it a value of 0.8689 . Yes , the recording shows signs of 3 different editors .",
      "Yes .",
      "Yes , the recording shows signs of 3 different editors . Yes , the recording shows signs of 3 different editors .",
      "shap determined that the MFCC-3 feature was one of the more important features by assigning it a value of 0.8689 .",
      "Yes , the recording shows signs of 3 different editors ."
    ],
    "new_mr": "<inform> inform ( <classification> classification: [ spoof ], <edit_type> edit type: [ software ]> )"
  },
  {
    "mr": "inform(response[yes], speaker_id[7], feature[LFCC-59], interpreter[shap], shap_value[0.9123])",
    "ref": [
      " Yes, L, which a shap value of 0.9123, was used to detect the id of speaker 7 for the audio sample .",
      "Yes, LFCC-13, which a shap value of 0.2183, was used to detect the sample as replayed .",
      " Yes.9123, was used to detect the id of speaker 7 for the audio sample .",
      " Yes, LFCC-59, which a shap value of 0.9123, was used to detect the id of speaker shap for the audio sample .",
      " Yes, LFCC-59, which a sha value of 0.9123, was used to detect the id of speaker 7 for the audio sample .",
      " Yes, 0.9123, which a shap value of 0.9123, was used to detect the id of speaker 7 for the audio sample .",
      " Yes, LFCC-59, which a shap value of 0.9123.",
      "Yes, LFCC-59, which a shap value of 0.9123, was used to detect the id of speaker 7 for the audio sample .  Yes, LFCC-59, which a shap value of 0.9123, was used to detect the id of speaker 7 for the audio sample .",
      " Yes, LFCC-59, which a shap value of yes, was used to detect the id of speaker 7 for the audio sample .",
      " Yes, LFCC-59, which a shap value of 0.91, was used to detect the id of speaker 7 for the audio sample .",
      " Yes, LFCC-59, which a shap value of 0.9123, was used to detect the id of speaker 7 for the audio sample ."
    ],
    "new_mr": "<inform> inform ( <response> response: [ yes ], <speaker_id> speaker id: [ 7 ], <feature> feature: [ LFCC-59 ], <interpreter> interpreter: [ shap ], <shap_value> shap value: [ 0.9123 ]> )"
  },
  {
    "mr": "inform(response[yes], feature[GTCC-11], determined[speaker_id])",
    "ref": [
      "yes, GTCC-11 was used to determine speaker id .  yes, GTCC-11 was used to determine speaker id .",
      "shap determined that the LFCC-58 feature was one of the more important features by assigning it a value of 0.1639 .",
      " yes, GTCC-1 was used to determine speaker id .",
      "shap determined that the LFCC-58 feature was one of the more important features by assigning it a value of 0.1639 .  yes, GTCC-11 was used to determine speaker id .",
      " speaker_id, GTCC-11 was used to determine speaker id .",
      " yes, yes was used to determine speaker id .",
      " , GTCC-11 was used to determine speaker id .",
      " yes.",
      "yes, GTCC-11 was used to determine speaker id .  yes, GTCC-11 was used to determine speaker id .",
      "shap determined that the LFCC-58 feature was one of the more important features by assigning it a value of 0.1639 .",
      " yes, GTCC-11 was used to determine speaker id ."
    ],
    "new_mr": "<inform> inform ( <response> response: [ yes ], <feature> feature: [ GTCC-11 ], <determined> determined: [ speaker_id ]> )"
  },
  {
    "mr": "inform(response[yes], speaker_id[6], feature[MFCC-20], interpreter[shap], shap_value[0.8416])",
    "ref": [
      " Yes.8416, was used to detect the id of speaker 6 for the audio sample .",
      "Yes, MSRCC-10, which a shap value of 0.6465, was used to detect the id of speaker 5 for the audio sample .  Yes, MFCC-20, which a shap value of 0.8416, was used to detect the id of speaker 6 for the audio sample .",
      " Yes, MFCC-20, which a shap value of shap, was used to detect the id of speaker 6 for the audio sample .",
      " Yes, MFCC-20, which a shap value of 0.841shap, was used to detect the id of speaker shap for the audio sample .",
      " Yes, MFCC-20.8416, was used to detect the id of speaker 6 for the audio sample .",
      " Yes, M, which a shap value of 0.8416, was used to detect the id of speaker 6 for the audio sample .",
      "Yes, MSRCC-10, which a shap value of 0.6465, was used to detect the id of speaker 5 for the audio sample .",
      "Yes, MFCC-20, which a shap value of 0.8416, was used to detect the id of speaker 6 for the audio sample .  Yes, MFCC-20, which a shap value of 0.8416, was used to detect the id of speaker 6 for the audio sample .",
      " Yes, MFCC-20, which a MFCC-20 value of 0.8416, was used to detect the id of speaker 6 for the audio sample .",
      " Yes, MFCC-20, which a shap value of 0.841, was used to detect the id of speaker  for the audio sample .",
      " Yes, MFCC-20, which a shap value of 0.8416, was used to detect the id of speaker 6 for the audio sample ."
    ],
    "new_mr": "<inform> inform ( <response> response: [ yes ], <speaker_id> speaker id: [ 6 ], <feature> feature: [ MFCC-20 ], <interpreter> interpreter: [ shap ], <shap_value> shap value: [ 0.8416 ]> )"
  },
  {
    "mr": "inform(extracted[PSRCC], model[CNN], important[PSRCC-10], classification[bonafide])",
    "ref": [
      " the audio sample had PSRCC features extracted and CNN was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      " the audio sample had PSRCC features extracted and PSRCC-10 was determined to have a large impact on the PSRCC model that determined the sample to be bonafide .",
      " the audio sample had PSRCC features extracted and PSRCC-10 was determined to have a large impact on the CNN model that determined the sample to be CNN .",
      " the audio sample had PSRCC features extracted and PSRCC-10 was determined to have a large impact on the  model that determined the sample to be bonafide .",
      " the audio sample had PSRCC features extracted and PSRCC-10 was determined to have a large impact on the CNN model that determined the sample to be bo .",
      " the audio sample had PSRC features extracted and PSRC-10 was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      "the audio sample had LFCC features extracted and LFCC-35 was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      " the audio sample had PSRCC-10 features extracted and PSRCC-10-10 was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      "the audio sample had LFCC features extracted and LFCC-35 was determined to have a large impact on the CNN model that determined the sample to be bonafide .  the audio sample had PSRCC features extracted and PSRCC-10 was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      " the audio sample had PSRCC features extracted and  was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      " the audio sample had PSRCC features extracted and PSRCC-10 was determined to have a large impact on the CNN model that determined the sample to be bonafide ."
    ],
    "new_mr": "<inform> inform ( <extracted> extracted: [ PSRCC ], <model> model: [ CNN ], <important> important: [ PSRCC-10 ], <classification> classification: [ bonafide ]> )"
  },
  {
    "mr": "inform(response[Yes], interpreter[shap], important[MFCC-15], classification[replayed], shap_value[-0.8137])",
    "ref": [
      " Ye, MFCC-15, which a shap value of -0.8137, was used to detect the sample as replayed .",
      " Yes, which a shap value of -0.8137, was used to detect the sample as replayed .",
      " Yes, MFCC-15, which a shap value of -0.813, was used to detect the sample as replayed .",
      "Yes, LFCC-18, which a shap value of -0.607, was used to detect the sample as replayed .  Yes, MFCC-15, which a shap value of -0.8137, was used to detect the sample as replayed .",
      " Yes, MFCC-15, was used to detect the sample as replayed .",
      " Yes, MFCC-15.8137, was used to detect the sample as replayed .",
      "Yes, MFCC-15, which a shap value of -0.8137, was used to detect the sample as replayed .  Yes, MFCC-15, which a shap value of -0.8137, was used to detect the sample as replayed .",
      " Yes, -0.8137, which a shap value of -0.8137, was used to detect the sample as replayed .",
      " -0.8137, MFCC-15, which a shap value of -0.8137, was used to detect the sample as replayed .",
      " Yes, MFCC-15, which a shap value of replayed, was used to detect the sample as replayed .",
      " Yes, MFCC-15, which a shap value of -0.8137, was used to detect the sample as replayed ."
    ],
    "new_mr": "<inform> inform ( <response> response: [ Yes ], <interpreter> interpreter: [ shap ], <important> important: [ MFCC-15 ], <classification> classification: [ replayed ], <shap_value> shap value: [ -0.8137 ]> )"
  },
  {
    "mr": "inform(extracted[LFCC], model[CNN], important[LFCC-25], classification[bonafide])",
    "ref": [
      " the audio sample had LFCC features extracted and LFCC- was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      "the audio sample had LFCC features extracted and LFCC-25 was determined to have a large impact on the CNN model that determined the sample to be bonafide .  the audio sample had LFCC features extracted and LFCC-25 was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      "Yes, MFCC-30, which a shap value of -0.1903, was used to detect the sample as bonafide .",
      "Yes, MFCC-30, which a shap value of -0.1903, was used to detect the sample as bonafide .  the audio sample had LFCC features extracted and LFCC-25 was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      " the audio sample had  features extracted and -25 was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      " the audio sample had LFCC features extracted and LFCC-25 was determined to have a large impact on the LFCC-25 model that determined the sample to be bonafide .",
      " the audio sample had LFCC features extracted and LFCC was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      " the audio sample had LFCC features extracted and LFCC-25 was determined to have a large impact on the CNN model that determined the sample to be LFCC .",
      " the audio sample had LFCC features extracted and LFCC-25 was determined to have a large impact on the CN model that determined the sample to be bonafide .",
      " the audio sample had LFCC features extracted and LFCC-25 was determined to have a large impact on the CNN model that determined the sample to be b .",
      " the audio sample had LFCC features extracted and LFCC-25 was determined to have a large impact on the CNN model that determined the sample to be bonafide ."
    ],
    "new_mr": "<inform> inform ( <extracted> extracted: [ LFCC ], <model> model: [ CNN ], <important> important: [ LFCC-25 ], <classification> classification: [ bonafide ]> )"
  },
  {
    "mr": "inform(response[Yes], interpreter[shap], important[MFCC-6], classification[replayed], shap_value[-0.2267])",
    "ref": [
      " replayed, MFCC-6, which a shap value of -0.2267, was used to detect the sample as replayed .",
      " Yes, MFCC-6, which a  value of -0.2267, was used to detect the sample as replayed .",
      " Yes, MFCC-6, which a shap value of -0.2267, was used to detect the sample as Yes .",
      " Yes, which a shap value of -0.2267, was used to detect the sample as replayed .",
      " Yes, -0.2267, which a shap value of -0.2267, was used to detect the sample as replayed .",
      " Yes, MFCC-6.2267, was used to detect the sample as replayed .",
      " Yes, MFCC-6, which a Yes value of -0.2267, was used to detect the sample as replayed .",
      "Yes, MFCC-6, which a shap value of -0.2267, was used to detect the sample as replayed .  Yes, MFCC-6, which a shap value of -0.2267, was used to detect the sample as replayed .",
      " Yes.2267, was used to detect the sample as replayed .",
      " Yes, MFCC-6, which a shap value of -0.2267, was used to detect the sample as replaye .",
      " Yes, MFCC-6, which a shap value of -0.2267, was used to detect the sample as replayed ."
    ],
    "new_mr": "<inform> inform ( <response> response: [ Yes ], <interpreter> interpreter: [ shap ], <important> important: [ MFCC-6 ], <classification> classification: [ replayed ], <shap_value> shap value: [ -0.2267 ]> )"
  },
  {
    "mr": "inform(response[Yes], interpreter[shap], important[LFCC-10], classification[replayed], shap_value[0.8478])",
    "ref": [
      " Yes, LFCC-10, which a s value of 0.8478, was used to detect the sample as replayed .",
      " Yes, LFCC-10, which a shap value of replayed, was used to detect the sample as replayed .",
      " Yes, LFCC-10, which a shap value of 0.8478, was used to detect the sample as LFCC-10 .",
      " Yes, LFC, which a shap value of 0.8478, was used to detect the sample as replayed .",
      " Yes, LFCC-10, which a shap value of 0.8478, was used to detect the sample as replay .",
      " Yes, LFCC-10.8478, was used to detect the sample as replayed .",
      " Yes, LFCC-10, which a replayed value of 0.8478, was used to detect the sample as replayed .",
      " Yes, LFCC-10, which a shap value of 0.8478.",
      " Yes, which a shap value of 0.8478, was used to detect the sample as replayed .",
      " replayed, LFCC-10, which a shap value of 0.8478, was used to detect the sample as replayed .",
      " Yes, LFCC-10, which a shap value of 0.8478, was used to detect the sample as replayed ."
    ],
    "new_mr": "<inform> inform ( <response> response: [ Yes ], <interpreter> interpreter: [ shap ], <important> important: [ LFCC-10 ], <classification> classification: [ replayed ], <shap_value> shap value: [ 0.8478 ]> )"
  },
  {
    "mr": "inform(classification[spoof], edit_type[speed], change_at[37])",
    "ref": [
      "There is an unusually long pause at 3 seconds .",
      "There is an unusually long pause at speed seconds .",
      "Yes, LFCC-31, which a shap value of -0.0632, was used to detect the sample as bonafide .",
      "There is an unusually long pause at 37 seconds . There is an unusually long pause at 37 seconds .",
      "Yes, LFCC-31, which a shap value of -0.0632, was used to detect the sample as bonafide . There is an unusually long pause at 37 seconds .",
      "There is an unusually long pause at 3 seconds .",
      "There is an unusually long pause at speed seconds .",
      "Yes, LFCC-31, which a shap value of -0.0632, was used to detect the sample as bonafide .",
      "There is an unusually long pause at 37 seconds . There is an unusually long pause at 37 seconds .",
      "Yes, LFCC-31, which a shap value of -0.0632, was used to detect the sample as bonafide . There is an unusually long pause at 37 seconds .",
      "There is an unusually long pause at 37 seconds ."
    ],
    "new_mr": "<inform> inform ( <classification> classification: [ spoof ], <edit_type> edit type: [ speed ], <change_at> change at: [ 37 ]> )"
  },
  {
    "mr": "inform(interpreter[SHAP], feature[CQCC-0], feature[MFCC-0], feature[LFCC-2], feature[MFCC-4])",
    "ref": [
      "SHAP determined that CQCC-0, MFCC-0, MFCC-4, MFCC-4 had the highest impact on classification .",
      "SHAP determined that MFCC-0, MFCC-0, LFCC-2, MFCC-4 had the highest impact on classification .",
      "SHAP determined that CQCC-0, MFCC-0, LFCC, MFCC-4 had the highest impact on classification .",
      "Yes, LFCC-25, which a shap value of -0.6414, was used to detect the id of speaker 4 for the audio sample .",
      "MFCC-0 determined that CQCC-0, MFCC-0, LFCC-2, MFCC-4 had the highest impact on classification .",
      "S determined that CQCC-0, MFCC-0, LFCC-2, MFCC-4 had the highest impact on classification .",
      "SHAP determined that CQCC-, MFCC-0, LFCC-2, MFCC-4 had the highest impact on classification .",
      "SHAP determined that CQCC-0, MFCC-0, LFCC-2.",
      "SHAP determined that CQCC-0.",
      "SHAP determined that CQCC-0, MFCC-0, LFCC-2, CQCC-0 had the highest impact on classification .",
      "SHAP determined that CQCC-0, MFCC-0, LFCC-2, MFCC-4 had the highest impact on classification ."
    ],
    "new_mr": "<inform> inform ( <interpreter> interpreter: [ SHAP ], <feature> feature: [ CQCC-0 ], <feature> feature: [ MFCC-0 ], <feature> feature: [ LFCC-2 ], <feature> feature: [ MFCC-4 ]> )"
  },
  {
    "mr": "inform(interpreter[shap], important[LFCC-17], shap_value[0.2636])",
    "ref": [
      "That microphone was used for 5 seconds .",
      "That microphone was used for 5 seconds .  shap determined that the LFCC-17 feature was one of the more important features by assigning it a value of 0.2636 .",
      " 0.2636 determined that the LFCC-17 feature was one of the more important features by assigning it a value of 0.2636 .",
      " shap determined that the LFCC-17 feature was one of the more important features by assigning it a value of  .",
      " shap determined that the LFCC-17 feature was one of the more important features by assigning it a value of shap .",
      " shap determined that the shap feature was one of the more important features by assigning it a value of 0.2636 .",
      "shap determined that the LFCC-17 feature was one of the more important features by assigning it a value of 0.2636 .  shap determined that the LFCC-17 feature was one of the more important features by assigning it a value of 0.2636 .",
      " s determined that the LFCC-17 feature was one of the more important features by assigning it a value of 0.2636 .",
      " shap determined that the  feature was one of the more important features by assigning it a value of 0.2636 .",
      "That microphone was used for 5 seconds .",
      " shap determined that the LFCC-17 feature was one of the more important features by assigning it a value of 0.2636 ."
    ],
    "new_mr": "<inform> inform ( <interpreter> interpreter: [ shap ], <important> important: [ LFCC-17 ], <shap_value> shap value: [ 0.2636 ]> )"
  },
  {
    "mr": "inform(response[No], classification[spoof], edit_type[multi_microphone])",
    "ref": [
      "Yes, MFCC-17, which a shap value of -0.0283, was used to detect the sample as replayed .",
      "No , I do not recognize any of the microphone signatures . No , I do not recognize any of the microphone signatures .",
      " , I do not recognize any of the microphone signatures .",
      "No , I do recognize any of the microphone signatures .",
      "multi_microphone , I do not recognize any of the microphone signatures .",
      "Yes, MFCC-17, which a shap value of -0.0283, was used to detect the sample as replayed . No , I do not recognize any of the microphone signatures .",
      "No .",
      "Yes, MFCC-17, which a shap value of -0.0283, was used to detect the sample as replayed .",
      "No , I do not recognize any of the microphone signatures . No , I do not recognize any of the microphone signatures .",
      " , I do not recognize any of the microphone signatures .",
      "No , I do not recognize any of the microphone signatures ."
    ],
    "new_mr": "<inform> inform ( <response> response: [ No ], <classification> classification: [ spoof ], <edit_type> edit type: [ multi_microphone ]> )"
  },
  {
    "mr": "inform(response[yes], speaker_id[3], feature[MFCC-9], interpreter[shap], shap_value[-0.8749])",
    "ref": [
      "the audio sample had LFCC features extracted and LFCC-3 was determined to have a large impact on the CNN model that determined the sample to be bonafide .  Yes, person 3 was detected by MFCC-9 with a shap value of -0.8749 .",
      "the audio sample had LFCC features extracted and LFCC-3 was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      " Yes, person 3 was detected by MFCC-9 with a shap value of shap .",
      " Yes, person 3 was detected by MFC with a shap value of -0.8749 .",
      " Yes, person 3 was detected by MFCC-9 with a shap value of -0.8 .",
      " Yes, person 3 was detected by MFCC-9 with a s value of -0.8749 .",
      " Yes, person  was detected by MFCC-9 with a shap value of -0.8749 .",
      " Yes, person 3 was detected by -0.8749 with a shap value of -0.8749 .",
      " Yes.8749 .",
      " Yes, person shap was detected by MFCC-9 with a shap value of -0.8749 .",
      " Yes, person 3 was detected by MFCC-9 with a shap value of -0.8749 ."
    ],
    "new_mr": "<inform> inform ( <response> response: [ yes ], <speaker_id> speaker id: [ 3 ], <feature> feature: [ MFCC-9 ], <interpreter> interpreter: [ shap ], <shap_value> shap value: [ -0.8749 ]> )"
  },
  {
    "mr": "inform(response[Yes], interpreter[shap], important[LFCC-55], classification[replayed], shap_value[0.3192])",
    "ref": [
      "Yes, LFCC-55, which a shap value of 0.3192, was used to detect the sample as replayed .  Yes, LFCC-55, which a shap value of 0.3192, was used to detect the sample as replayed .",
      " 0.3192, LFCC-55, which a shap value of 0.3192, was used to detect the sample as replayed .",
      "yes, GTCC-11 was used to determine speaker id .  Yes, LFCC-55, which a shap value of 0.3192, was used to detect the sample as replayed .",
      " Yes.3192, was used to detect the sample as replayed .",
      " Yes, LFCC-55, which a shap value of replayed, was used to detect the sample as replayed .",
      " Y, LFCC-55, which a shap value of 0.3192, was used to detect the sample as replayed .",
      " Yes, , which a shap value of 0.3192, was used to detect the sample as replayed .",
      " Yes, LFCC-55, which a shap value of 0.3192, was used to detect the sample as replaye .",
      " Yes, LFCC-55.3192, was used to detect the sample as replayed .",
      " Yes, LFCC-55, which a 0.3192 value of 0.3192, was used to detect the sample as replayed .",
      " Yes, LFCC-55, which a shap value of 0.3192, was used to detect the sample as replayed ."
    ],
    "new_mr": "<inform> inform ( <response> response: [ Yes ], <interpreter> interpreter: [ shap ], <important> important: [ LFCC-55 ], <classification> classification: [ replayed ], <shap_value> shap value: [ 0.3192 ]> )"
  },
  {
    "mr": "inform(response[Yes], interpreter[shap], important[LFCC-43], classification[replayed], shap_value[0.4057])",
    "ref": [
      " Yes, LFCC-43, which a LFCC-43 value of 0.4057, was used to detect the sample as replayed .",
      " Yes, LFCC-43, which a shap value of 0.4057, was used to detect the sample as 0.4057 .",
      "shap determined that the PSRCC-11 feature was one of the more important features by assigning it a value of 0.8242 .  Yes, LFCC-43, which a shap value of 0.4057, was used to detect the sample as replayed .",
      "shap determined that the PSRCC-11 feature was one of the more important features by assigning it a value of 0.8242 .",
      " Yes, LFCC-43.4057, was used to detect the sample as replayed .",
      " Yes.4057, was used to detect the sample as replayed .",
      " replayed, LFCC-43, which a shap value of 0.4057, was used to detect the sample as replayed .",
      " Yes, L, which a shap value of 0.4057, was used to detect the sample as replayed .",
      "Yes, LFCC-43, which a shap value of 0.4057, was used to detect the sample as replayed .  Yes, LFCC-43, which a shap value of 0.4057, was used to detect the sample as replayed .",
      " , LFCC-43, which a shap value of 0.4057, was used to detect the sample as replayed .",
      " Yes, LFCC-43, which a shap value of 0.4057, was used to detect the sample as replayed ."
    ],
    "new_mr": "<inform> inform ( <response> response: [ Yes ], <interpreter> interpreter: [ shap ], <important> important: [ LFCC-43 ], <classification> classification: [ replayed ], <shap_value> shap value: [ 0.4057 ]> )"
  },
  {
    "mr": "inform(response[Yes], interpreter[shap], important[LFCC-2], classification[replayed], shap_value[0.3903])",
    "ref": [
      " Yes.3903, was used to detect the sample as replayed .",
      " Yes, Yes, which a shap value of 0.3903, was used to detect the sample as replayed .",
      "Yes, MFCC-35, which a shap value of -0.6957, was used to detect the sample as bonafide .",
      " Yes, LFC, which a shap value of 0.3903, was used to detect the sample as replayed .",
      "Yes, LFCC-2, which a shap value of 0.3903, was used to detect the sample as replayed .  Yes, LFCC-2, which a shap value of 0.3903, was used to detect the sample as replayed .",
      " Yes, LFCC-2, which a shap value of replayed, was used to detect the sample as replayed .",
      " Yes, LFCC-2, was used to detect the sample as replayed .",
      " Yes, which a shap value of 0.3903, was used to detect the sample as replayed .",
      " Yes, LFCC-2, which a shap value of 0.3903.",
      " Yes, LFCC-2, which a  value of 0.3903, was used to detect the sample as replayed .",
      " Yes, LFCC-2, which a shap value of 0.3903, was used to detect the sample as replayed ."
    ],
    "new_mr": "<inform> inform ( <response> response: [ Yes ], <interpreter> interpreter: [ shap ], <important> important: [ LFCC-2 ], <classification> classification: [ replayed ], <shap_value> shap value: [ 0.3903 ]> )"
  },
  {
    "mr": "inform(response[yes], speaker_id[1], feature[MFCC-17], interpreter[shap], shap_value[0.2391])",
    "ref": [
      " Yes, person 1 was detected by MFCC-17 with a shap value of 0.23 .",
      "Yes, person 1 was detected by MFCC-17 with a shap value of 0.2391 .  Yes, person 1 was detected by MFCC-17 with a shap value of 0.2391 .",
      "the audio sample had PSRCC features extracted and PSRCC-11 was determined to have a large impact on the CNN model that determined the sample to be replayed .",
      " Yes, person 1 was detected by MFCC-17 with a shap value of 1 .",
      " Yes, person 1 was detected by MFCC-17 with a 0.2391 value of 0.2391 .",
      " Yes, person 1 was detected by MFCC-17 with a sh value of 0.2391 .",
      "the audio sample had PSRCC features extracted and PSRCC-11 was determined to have a large impact on the CNN model that determined the sample to be replayed .  Yes, person 1 was detected by MFCC-17 with a shap value of 0.2391 .",
      " Yes, person 1 was detected by MFCC with a shap value of 0.2391 .",
      " Yes.2391 .",
      " Yes, person  was detected by MFCC-7 with a shap value of 0.239 .",
      " Yes, person 1 was detected by MFCC-17 with a shap value of 0.2391 ."
    ],
    "new_mr": "<inform> inform ( <response> response: [ yes ], <speaker_id> speaker id: [ 1 ], <feature> feature: [ MFCC-17 ], <interpreter> interpreter: [ shap ], <shap_value> shap value: [ 0.2391 ]> )"
  },
  {
    "mr": "inform(response[yes], speaker_id[2], feature[MSRCC-9], interpreter[shap], shap_value[-0.007])",
    "ref": [
      " Yes, which a shap value of -0.007, was used to detect the id of speaker 2 for the audio sample .",
      " Yes, MSRCC-9, which a shap value of , was used to detect the id of speaker 2 for the audio sample .",
      " Yes, MSRCC-9, which a MSRCC-9 value of -0.007, was used to detect the id of speaker 2 for the audio sample .",
      " Yes, MSRCC-9, which a shap value of -0.007, was used to detect the id of speaker  for the audio sample .",
      " Yes, yes, which a shap value of -0.007, was used to detect the id of speaker 2 for the audio sample .",
      " Yes, MSRCC-9, which a shap value of MSRCC-9, was used to detect the id of speaker 2 for the audio sample .",
      "Yes, MSRCC-0, which a shap value of -0.5766, was used to detect the sample as bonafide .  Yes, MSRCC-9, which a shap value of -0.007, was used to detect the id of speaker 2 for the audio sample .",
      " Yes, MSRCC-9, was used to detect the id of speaker 2 for the audio sample .",
      " Yes, MSRCC-9, which a s value of -0.007, was used to detect the id of speaker 2 for the audio sample .",
      " Yes, MSRCC-9, which a shap value of -0.007.",
      " Yes, MSRCC-9, which a shap value of -0.007, was used to detect the id of speaker 2 for the audio sample ."
    ],
    "new_mr": "<inform> inform ( <response> response: [ yes ], <speaker_id> speaker id: [ 2 ], <feature> feature: [ MSRCC-9 ], <interpreter> interpreter: [ shap ], <shap_value> shap value: [ -0.007 ]> )"
  },
  {
    "mr": "inform(response[Yes], interpreter[shap], important[GTCC-11], classification[bonafide], shap_value[0])",
    "ref": [
      "Other samples show the person speaks at a different speed .  Yes, GTCC-11, which a shap value of 0, was used to detect the sample as bonafide .",
      " Yes, GTCC-11, was used to detect the sample as bonafide .",
      " , GTCC-11, which a shap value of 0, was used to detect the sample as bonafide .",
      " Yes, GTCC-11, which a shap value of 0, was used to detect the sample as Yes .",
      " Yes, which a shap value of 0, was used to detect the sample as bonafide .",
      " Yes, G, which a shap value of 0, was used to detect the sample as bonafide .",
      " Yes, shap, which a shap value of 0, was used to detect the sample as bonafide .",
      "Other samples show the person speaks at a different speed .",
      " 0, GTCC-11, which a shap value of 0, was used to detect the sample as bonafide .",
      "Yes, GTCC-11, which a shap value of 0, was used to detect the sample as bonafide .  Yes, GTCC-11, which a shap value of 0, was used to detect the sample as bonafide .",
      " Yes, GTCC-11, which a shap value of 0, was used to detect the sample as bonafide ."
    ],
    "new_mr": "<inform> inform ( <response> response: [ Yes ], <interpreter> interpreter: [ shap ], <important> important: [ GTCC-11 ], <classification> classification: [ bonafide ], <shap_value> shap value: [ 0 ]> )"
  },
  {
    "mr": "inform(response[Yes], interpreter[shap], important[MFCC-10], classification[bonafide], shap_value[0.5373])",
    "ref": [
      " Y, MFCC-10, which a shap value of 0.5373, was used to detect the sample as bonafide .",
      " Yes, bonafide, which a shap value of 0.5373, was used to detect the sample as bonafide .",
      "Yes, LFCC-3, which a shap value of -0.2091, was used to detect the sample as bonafide .",
      " Yes, MFCC-10, which a shap value of 0.5373.",
      " Yes, MFCC-10, which a s value of 0.5373, was used to detect the sample as bonafide .",
      " Yes, MFCC-10, which a 0.5373 value of 0.5373, was used to detect the sample as bonafide .",
      " Yes, MFCC-1, which a shap value of 0.5373, was used to detect the sample as bonafide .",
      " Yes, MFCC-10, which a shap value of 0., was used to detect the sample as bonafide .",
      " Yes, MFCC-10, was used to detect the sample as bonafide .",
      " Yes, which a shap value of 0.5373, was used to detect the sample as bonafide .",
      " Yes, MFCC-10, which a shap value of 0.5373, was used to detect the sample as bonafide ."
    ],
    "new_mr": "<inform> inform ( <response> response: [ Yes ], <interpreter> interpreter: [ shap ], <important> important: [ MFCC-10 ], <classification> classification: [ bonafide ], <shap_value> shap value: [ 0.5373 ]> )"
  },
  {
    "mr": "inform(response[yes], speaker_id[7], feature[MFCC-13], interpreter[shap], shap_value[0.1362])",
    "ref": [
      " Yes, shap, which a shap value of 0.1362, was used to detect the id of speaker 7 for the audio sample .",
      " Yes, MFCC-13, was used to detect the id of speaker 7 for the audio sample .",
      " Yes, MFCC-13, which a sh value of 0.1362, was used to detect the id of speaker 7 for the audio sample .",
      "yes, GTCC-11 was used to determine speaker id .",
      " Yes, , which a shap value of 0.1362, was used to detect the id of speaker 7 for the audio sample .",
      "yes, GTCC-11 was used to determine speaker id .  Yes, MFCC-13, which a shap value of 0.1362, was used to detect the id of speaker 7 for the audio sample .",
      " Yes, MFCC-13, which a shap value of 0.1362.",
      " Yes, which a shap value of 0.1362, was used to detect the id of speaker 7 for the audio sample .",
      " Yes, MFCC-13, which a shap value of 0., was used to detect the id of speaker 7 for the audio sample .",
      " Yes, MFCC-13.1362, was used to detect the id of speaker 7 for the audio sample .",
      " Yes, MFCC-13, which a shap value of 0.1362, was used to detect the id of speaker 7 for the audio sample ."
    ],
    "new_mr": "<inform> inform ( <response> response: [ yes ], <speaker_id> speaker id: [ 7 ], <feature> feature: [ MFCC-13 ], <interpreter> interpreter: [ shap ], <shap_value> shap value: [ 0.1362 ]> )"
  },
  {
    "mr": "inform(extracted[LFCC], model[CNN], important[LFCC-26], classification[replayed])",
    "ref": [
      " the audio sample had  features extracted and -26 was determined to have a large impact on the CNN model that determined the sample to be replayed .",
      " the audio sample had LFCC features extracted and LFCC-26 was determined to have a large impact on the LFCC model that determined the sample to be replayed .",
      " the audio sample had LFCC features extracted and LFCC-26 was determined to have a large impact on the C model that determined the sample to be replayed .",
      " the audio sample had LFCC features extracted and replayed was determined to have a large impact on the CNN model that determined the sample to be replayed .",
      " the audio sample had LFCC features extracted and LF was determined to have a large impact on the CNN model that determined the sample to be replayed .",
      " the audio sample had LFCC features extracted and LFCC-26 was determined to have a large impact on the CNN model that determined the sample to be re .",
      " the audio sample had CNN features extracted and CNN-26 was determined to have a large impact on the CNN model that determined the sample to be replayed .",
      "Other samples show the person speaks at a different speed .",
      "Other samples show the person speaks at a different speed .  the audio sample had LFCC features extracted and LFCC-26 was determined to have a large impact on the CNN model that determined the sample to be replayed .",
      " the audio sample had LFCC features extracted and LFCC-26 was determined to have a large impact on the CNN model that determined the sample to be LFCC .",
      " the audio sample had LFCC features extracted and LFCC-26 was determined to have a large impact on the CNN model that determined the sample to be replayed ."
    ],
    "new_mr": "<inform> inform ( <extracted> extracted: [ LFCC ], <model> model: [ CNN ], <important> important: [ LFCC-26 ], <classification> classification: [ replayed ]> )"
  },
  {
    "mr": "inform(speaker_id[2])",
    "ref": [
      "person 2 spoke the audio sample .  person 2 spoke the audio sample .",
      "the audio sample had MFCC features extracted and MFCC-4 was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      "the audio sample had MFCC features extracted and MFCC-4 was determined to have a large impact on the CNN model that determined the sample to be bonafide .  person 2 spoke the audio sample .",
      " person  spoke the audio sample .",
      "person 2 spoke the audio sample .  person 2 spoke the audio sample .",
      "the audio sample had MFCC features extracted and MFCC-4 was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      "the audio sample had MFCC features extracted and MFCC-4 was determined to have a large impact on the CNN model that determined the sample to be bonafide .  person 2 spoke the audio sample .",
      " person  spoke the audio sample .",
      "person 2 spoke the audio sample .  person 2 spoke the audio sample .",
      "the audio sample had MFCC features extracted and MFCC-4 was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      " person 2 spoke the audio sample ."
    ],
    "new_mr": "<inform> inform ( <speaker_id> speaker id: [ 2 ]> )"
  },
  {
    "mr": "inform(response[yes], feature[GTCC-9], determined[speaker_id])",
    "ref": [
      " yes.",
      " yes, speaker_id was used to determine speaker id .",
      "yes, GTCC-9 was used to determine speaker id .  yes, GTCC-9 was used to determine speaker id .",
      " yes, GTCC was used to determine speaker id .",
      "Due to the weighting function, the two signals would each be represented by different SCF and SCM values .  yes, GTCC-9 was used to determine speaker id .",
      " ye, GTCC-9 was used to determine speaker id .",
      "Due to the weighting function, the two signals would each be represented by different SCF and SCM values .",
      " GTCC-9, GTCC-9 was used to determine speaker id .",
      " yes.",
      " yes, speaker_id was used to determine speaker id .",
      " yes, GTCC-9 was used to determine speaker id ."
    ],
    "new_mr": "<inform> inform ( <response> response: [ yes ], <feature> feature: [ GTCC-9 ], <determined> determined: [ speaker_id ]> )"
  },
  {
    "mr": "inform(response[yes], speaker_id[2], feature[LFCC-38], interpreter[shap], shap_value[0.5482])",
    "ref": [
      " Yes, LFCC-38, which a shap value of 0.548yes, was used to detect the id of speaker yes for the audio sample .",
      " Yes, LFCC-38, which a shap value of 0.5, was used to detect the id of speaker 2 for the audio sample .",
      " Yes, LFCC-38, which a shap value of 0.548, was used to detect the id of speaker  for the audio sample .",
      " Yes, LF, which a shap value of 0.5482, was used to detect the id of speaker 2 for the audio sample .",
      " Yes, LFCC-38.5482, was used to detect the id of speaker 2 for the audio sample .",
      "There were 2 microphones used .",
      " Yes, LFCC-38, which a shap value of 0.5482.",
      "Yes, LFCC-38, which a shap value of 0.5482, was used to detect the id of speaker 2 for the audio sample .  Yes, LFCC-38, which a shap value of 0.5482, was used to detect the id of speaker 2 for the audio sample .",
      " Yes.5482, was used to detect the id of speaker 2 for the audio sample .",
      " Yes, LFCC-38, which a sh value of 0.5482, was used to detect the id of speaker 2 for the audio sample .",
      " Yes, LFCC-38, which a shap value of 0.5482, was used to detect the id of speaker 2 for the audio sample ."
    ],
    "new_mr": "<inform> inform ( <response> response: [ yes ], <speaker_id> speaker id: [ 2 ], <feature> feature: [ LFCC-38 ], <interpreter> interpreter: [ shap ], <shap_value> shap value: [ 0.5482 ]> )"
  },
  {
    "mr": "inform(extracted[LFCC], model[CNN], important[LFCC-23], classification[replayed])",
    "ref": [
      " the audio sample had LFCC features extracted and CNN was determined to have a large impact on the CNN model that determined the sample to be replayed .",
      " the audio sample had L features extracted and L-23 was determined to have a large impact on the CNN model that determined the sample to be replayed .",
      " the audio sample had LFCC features extracted and LFCC-23 was determined to have a large impact on the CNN model that determined the sample to be LFCC-23 .",
      " the audio sample had LFCC features extracted and LFCC-2 was determined to have a large impact on the CNN model that determined the sample to be replayed .",
      "Yes, person 3 was detected by MFCC-9 with a shap value of -0.8749 .",
      " the audio sample had LFCC features extracted and LFCC-23 was determined to have a large impact on the CNN model that determined the sample to be r .",
      "the audio sample had LFCC features extracted and LFCC-23 was determined to have a large impact on the CNN model that determined the sample to be replayed .  the audio sample had LFCC features extracted and LFCC-23 was determined to have a large impact on the CNN model that determined the sample to be replayed .",
      "Yes, person 3 was detected by MFCC-9 with a shap value of -0.8749 .  the audio sample had LFCC features extracted and LFCC-23 was determined to have a large impact on the CNN model that determined the sample to be replayed .",
      " the audio sample had LFCC features extracted and LFCC-23 was determined to have a large impact on the replayed model that determined the sample to be replayed .",
      " the audio sample had LFCC features extracted and LFCC-23 was determined to have a large impact on the  model that determined the sample to be replayed .",
      " the audio sample had LFCC features extracted and LFCC-23 was determined to have a large impact on the CNN model that determined the sample to be replayed ."
    ],
    "new_mr": "<inform> inform ( <extracted> extracted: [ LFCC ], <model> model: [ CNN ], <important> important: [ LFCC-23 ], <classification> classification: [ replayed ]> )"
  },
  {
    "mr": "inform(extracted[PSRCC], model[CNN], important[PSRCC-0], classification[replayed])",
    "ref": [
      " the audio sample had PSRCC features extracted and PSRCC-0 was determined to have a large impact on the CNN model that determined the sample to be re .",
      " the audio sample had  features extracted and -0 was determined to have a large impact on the CNN model that determined the sample to be replayed .",
      " the audio sample had PSRCC features extracted and PSRCC-0 was determined to have a large impact on the CNN model that determined the sample to be PSRCC-0 .",
      " the audio sample had PSRCC features extracted and PSRCC-0 was determined to have a large impact on the replayed model that determined the sample to be replayed .",
      "the audio sample had PSRCC features extracted and PSRCC-0 was determined to have a large impact on the CNN model that determined the sample to be replayed .  the audio sample had PSRCC features extracted and PSRCC-0 was determined to have a large impact on the CNN model that determined the sample to be replayed .",
      " the audio sample had CNN features extracted and CNN-0 was determined to have a large impact on the CNN model that determined the sample to be replayed .",
      " the audio sample had PSRCC features extracted and PSRCC-0 was determined to have a large impact on the CN model that determined the sample to be replayed .",
      "Linear Frequency Cepstral Coefficients are extracted by performing integration of the power spectrum using overlapping triangular filters spaced linearly and logarithmic compression follwed by DCT .",
      "Linear Frequency Cepstral Coefficients are extracted by performing integration of the power spectrum using overlapping triangular filters spaced linearly and logarithmic compression follwed by DCT .  the audio sample had PSRCC features extracted and PSRCC-0 was determined to have a large impact on the CNN model that determined the sample to be replayed .",
      " the audio sample had PSRCC features extracted and CNN was determined to have a large impact on the CNN model that determined the sample to be replayed .",
      " the audio sample had PSRCC features extracted and PSRCC-0 was determined to have a large impact on the CNN model that determined the sample to be replayed ."
    ],
    "new_mr": "<inform> inform ( <extracted> extracted: [ PSRCC ], <model> model: [ CNN ], <important> important: [ PSRCC-0 ], <classification> classification: [ replayed ]> )"
  },
  {
    "mr": "inform(classification[spoof], edit_type[pitch])",
    "ref": [
      "The average spoof gets higher in this section",
      "shap determined that the PSRCC-6 feature was one of the more important features by assigning it a value of -0.0158 .",
      "shap determined that the PSRCC-6 feature was one of the more important features by assigning it a value of -0.0158 . The average pitch gets higher in this section",
      "The average p gets higher in this section",
      "The average pitch gets higher in this section The average pitch gets higher in this section",
      "The average spoof gets higher in this section",
      "shap determined that the PSRCC-6 feature was one of the more important features by assigning it a value of -0.0158 .",
      "shap determined that the PSRCC-6 feature was one of the more important features by assigning it a value of -0.0158 . The average pitch gets higher in this section",
      "The average p gets higher in this section",
      "The average pitch gets higher in this section The average pitch gets higher in this section",
      "The average pitch gets higher in this section"
    ],
    "new_mr": "<inform> inform ( <classification> classification: [ spoof ], <edit_type> edit type: [ pitch ]> )"
  },
  {
    "mr": "inform(response[yes], speaker_id[7], feature[MFCC-22], interpreter[shap], shap_value[0.1394])",
    "ref": [
      " Yes, MFCC-22, which a shap value of 0.1394, was used to detect the id of speaker shap for the audio sample .",
      " Yes, MFCC-22, which a shap value of 0, was used to detect the id of speaker 7 for the audio sample .",
      "yes, GTCC-11 was used to determine speaker id .  Yes, MFCC-22, which a shap value of 0.1394, was used to detect the id of speaker 7 for the audio sample .",
      " Yes, MFCC-22, which a sha value of 0.1394, was used to detect the id of speaker 7 for the audio sample .",
      " Yes, MFCC-22, which a shap value of yes, was used to detect the id of speaker 7 for the audio sample .",
      " Yes, MFCC-22, which a shap value of 0.1394, was used to detect the id of speaker  for the audio sample .",
      " Yes, MFCC-22.1394, was used to detect the id of speaker 7 for the audio sample .",
      " Yes, MFCC-22, was used to detect the id of speaker 7 for the audio sample .",
      " Yes, MFCC-, which a shap value of 0.1394, was used to detect the id of speaker 7 for the audio sample .",
      " Yes, shap, which a shap value of 0.1394, was used to detect the id of speaker 7 for the audio sample .",
      " Yes, MFCC-22, which a shap value of 0.1394, was used to detect the id of speaker 7 for the audio sample ."
    ],
    "new_mr": "<inform> inform ( <response> response: [ yes ], <speaker_id> speaker id: [ 7 ], <feature> feature: [ MFCC-22 ], <interpreter> interpreter: [ shap ], <shap_value> shap value: [ 0.1394 ]> )"
  },
  {
    "mr": "inform(extracted[LFCC], model[CNN], important[LFCC-1], classification[bonafide])",
    "ref": [
      " the audio sample had LFCC features extracted and LFCC-1 was determined to have a large impact on the LFCC-1 model that determined the sample to be bonafide .",
      " the audio sample had LFCC-1 features extracted and LFCC-1-1 was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      " the audio sample had LFCC features extracted and LFCC was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      " the audio sample had L features extracted and L-1 was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      " the audio sample had LFCC features extracted and LFCC-1 was determined to have a large impact on the CNN model that determined the sample to be bonafid .",
      "Yes, person 6 was detected by PSRCC-6 with a shap value of -0.0215 .  the audio sample had LFCC features extracted and LFCC-1 was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      " the audio sample had LFCC features extracted and bonafide was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      " the audio sample had LFCC features extracted and LFCC-1 was determined to have a large impact on the CNN model that determined the sample to be LFCC-1 .",
      "the audio sample had LFCC features extracted and LFCC-1 was determined to have a large impact on the CNN model that determined the sample to be bonafide .  the audio sample had LFCC features extracted and LFCC-1 was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      "Yes, person 6 was detected by PSRCC-6 with a shap value of -0.0215 .",
      " the audio sample had LFCC features extracted and LFCC-1 was determined to have a large impact on the CNN model that determined the sample to be bonafide ."
    ],
    "new_mr": "<inform> inform ( <extracted> extracted: [ LFCC ], <model> model: [ CNN ], <important> important: [ LFCC-1 ], <classification> classification: [ bonafide ]> )"
  },
  {
    "mr": "inform(response[yes], speaker_id[1], feature[GTCC-7], interpreter[shap], shap_value[0])",
    "ref": [
      " Yes, GTCC-7, which a shap value of 0, was used to detect the id of speaker yes for the audio sample .",
      " Yes, GTCC, which a shap value of 0, was used to detect the id of speaker 1 for the audio sample .",
      "Yes, person 1 was detected by LFCC-15 with a shap value of 0.3767 .  Yes, GTCC-7, which a shap value of 0, was used to detect the id of speaker 1 for the audio sample .",
      " Yes, shap, which a shap value of 0, was used to detect the id of speaker 1 for the audio sample .",
      " Yes, GTCC-7.",
      " Yes.",
      " Yes, GTCC-7, which a shap value of yes, was used to detect the id of speaker 1 for the audio sample .",
      "Yes, person 1 was detected by LFCC-15 with a shap value of 0.3767 .",
      " Yes, GTCC-7, which a 0 value of 0, was used to detect the id of speaker 1 for the audio sample .",
      " Yes, GTCC-7, which a shap value of , was used to detect the id of speaker 1 for the audio sample .",
      " Yes, GTCC-7, which a shap value of 0, was used to detect the id of speaker 1 for the audio sample ."
    ],
    "new_mr": "<inform> inform ( <response> response: [ yes ], <speaker_id> speaker id: [ 1 ], <feature> feature: [ GTCC-7 ], <interpreter> interpreter: [ shap ], <shap_value> shap value: [ 0 ]> )"
  },
  {
    "mr": "inform(response[Yes], interpreter[shap], important[MFCC-31], classification[bonafide], shap_value[-0.5755])",
    "ref": [
      "Yes, MFCC-31, which a shap value of -0.5755, was used to detect the sample as bonafide .  Yes, MFCC-31, which a shap value of -0.5755, was used to detect the sample as bonafide .",
      " shap, MFCC-31, which a shap value of -0.5755, was used to detect the sample as bonafide .",
      " Yes, MFCC-31, which a -0.5755 value of -0.5755, was used to detect the sample as bonafide .",
      " Yes, which a shap value of -0.5755, was used to detect the sample as bonafide .",
      " Yes, MFCC-31, which a shap value of -0.5755.",
      " Yes, MFCC-31, which a shap value of , was used to detect the sample as bonafide .",
      " Yes, MFCC-31, which a  value of -0.5755, was used to detect the sample as bonafide .",
      " Yes, MFCC-31, was used to detect the sample as bonafide .",
      " Yes, MFCC-31, which a shap value of -0.5755, was used to detect the sample as shap .",
      "Yes, MSRCC-10, which a shap value of -0.0292, was used to detect the sample as replayed .",
      " Yes, MFCC-31, which a shap value of -0.5755, was used to detect the sample as bonafide ."
    ],
    "new_mr": "<inform> inform ( <response> response: [ Yes ], <interpreter> interpreter: [ shap ], <important> important: [ MFCC-31 ], <classification> classification: [ bonafide ], <shap_value> shap value: [ -0.5755 ]> )"
  },
  {
    "mr": "inform(response[yes], speaker_id[5], feature[GTCC-12], interpreter[shap], shap_value[0])",
    "ref": [
      " Yes, person 5 was detected by GTCC-12 with a shap value of shap .",
      "Yes, person 5 was detected by GTCC-12 with a shap value of 0 .  Yes, person 5 was detected by GTCC-12 with a shap value of 0 .",
      " Yes, person 5 was detected by GTCC-12 with a shap value of  .",
      " Yes, person 5 was detected by GTCC-12 with a GTCC-12 value of 0 .",
      " Yes, person 5 was detected by GTC with a shap value of 0 .",
      "shap determined that the MFCC-40 feature was one of the more important features by assigning it a value of -0.3421 .  Yes, person 5 was detected by GTCC-12 with a shap value of 0 .",
      " Yes, person  was detected by GTCC-12 with a shap value of 0 .",
      " Yes, person 5 was detected by 0 with a shap value of 0 .",
      "shap determined that the MFCC-40 feature was one of the more important features by assigning it a value of -0.3421 .",
      " Yes, person 5 was detected by GTCC-12 with a sh value of 0 .",
      " Yes, person 5 was detected by GTCC-12 with a shap value of 0 ."
    ],
    "new_mr": "<inform> inform ( <response> response: [ yes ], <speaker_id> speaker id: [ 5 ], <feature> feature: [ GTCC-12 ], <interpreter> interpreter: [ shap ], <shap_value> shap value: [ 0 ]> )"
  },
  {
    "mr": "informt(model[CNN], task[classification])",
    "ref": [
      "The recording was passed to a classification model for classification .",
      "The recording was passed to a CNN model for classificat .",
      "The SHAP values indicate the contribution of the features on the outcome of the classification model .",
      "The recording was passed to a CNN model for CNN .",
      "The SHAP values indicate the contribution of the features on the outcome of the classification model . The recording was passed to a CNN model for classification .",
      "The recording was passed to a  model for classification .",
      "The recording was passed to a CNN model for classification . The recording was passed to a CNN model for classification .",
      "The recording was passed to a classification model for classification .",
      "The recording was passed to a CNN model for classificat .",
      "The SHAP values indicate the contribution of the features on the outcome of the classification model .",
      "The recording was passed to a CNN model for classification ."
    ],
    "new_mr": "<informt> informt ( <model> model: [ CNN ], <task> task: [ classification ]> )"
  },
  {
    "mr": "inform(response[yes], speaker_id[6], feature[MSRCC-5], interpreter[shap], shap_value[0.2787])",
    "ref": [
      " Yes, person 6 was detected by MSRCC-5 with a shap value of 6 .",
      "It appears the audio sample was converted .  Yes, person 6 was detected by MSRCC-5 with a shap value of 0.2787 .",
      "Yes, person 6 was detected by MSRCC-5 with a shap value of 0.2787 .  Yes, person 6 was detected by MSRCC-5 with a shap value of 0.2787 .",
      " Yes, person 6 was detected by  with a shap value of 0.2787 .",
      " Yes, person 6 was detected by 0.2787 with a shap value of 0.2787 .",
      " Yes, person 6 was detected by MSRCC-5 with a s value of 0.2787 .",
      " Yes, person  was detected by MSRCC-5 with a shap value of 0.2787 .",
      " Yes, person shap was detected by MSRCC-5 with a shap value of 0.2787 .",
      "It appears the audio sample was converted .",
      " Yes, person 6 was detected by MSRCC-5 with a 6 value of 0.2787 .",
      " Yes, person 6 was detected by MSRCC-5 with a shap value of 0.2787 ."
    ],
    "new_mr": "<inform> inform ( <response> response: [ yes ], <speaker_id> speaker id: [ 6 ], <feature> feature: [ MSRCC-5 ], <interpreter> interpreter: [ shap ], <shap_value> shap value: [ 0.2787 ]> )"
  },
  {
    "mr": "inform(response[yes], speaker_id[2], feature[MFCC-8], interpreter[shap], shap_value[-0.7314])",
    "ref": [
      " Yes, MFCC-8, was used to detect the id of speaker 2 for the audio sample .",
      " Yes.7314, was used to detect the id of speaker 2 for the audio sample .",
      " Yes, yes, which a shap value of -0.7314, was used to detect the id of speaker 2 for the audio sample .",
      " Yes, MFCC-8, which a 2 value of -0.7314, was used to detect the id of speaker 2 for the audio sample .",
      " Yes, MFCC-8.7314, was used to detect the id of speaker 2 for the audio sample .",
      " Yes, MFCC-8, which a shap value of 2, was used to detect the id of speaker 2 for the audio sample .",
      "That microphone was used for 5 seconds .  Yes, MFCC-8, which a shap value of -0.7314, was used to detect the id of speaker 2 for the audio sample .",
      "Yes, MFCC-8, which a shap value of -0.7314, was used to detect the id of speaker 2 for the audio sample .  Yes, MFCC-8, which a shap value of -0.7314, was used to detect the id of speaker 2 for the audio sample .",
      " Yes, MFCC-8, which a sh value of -0.7314, was used to detect the id of speaker 2 for the audio sample .",
      " Yes, MFCC-8, which a shap value of -0.7314, was used to detect the id of speaker shap for the audio sample .",
      " Yes, MFCC-8, which a shap value of -0.7314, was used to detect the id of speaker 2 for the audio sample ."
    ],
    "new_mr": "<inform> inform ( <response> response: [ yes ], <speaker_id> speaker id: [ 2 ], <feature> feature: [ MFCC-8 ], <interpreter> interpreter: [ shap ], <shap_value> shap value: [ -0.7314 ]> )"
  },
  {
    "mr": "inform(response[Yes], interpreter[shap], important[LFCC-51], classification[bonafide], shap_value[0.9936])",
    "ref": [
      " Yes, LFCC-51, which a shap value of bonafide, was used to detect the sample as bonafide .",
      " Yes, LFCC-51, which a shap value of 0.9936, was used to detect the sample as bona .",
      " Yes, LFCC-51, which a bonafide value of 0.9936, was used to detect the sample as bonafide .",
      " Yes, LFC, which a shap value of 0.9936, was used to detect the sample as bonafide .",
      " Yes, which a shap value of 0.9936, was used to detect the sample as bonafide .",
      "Yes, LFCC-57, which a shap value of -0.3017, was used to detect the sample as replayed .",
      " Yes.9936, was used to detect the sample as bonafide .",
      " 0.9936, LFCC-51, which a shap value of 0.9936, was used to detect the sample as bonafide .",
      " Yes, LFCC-51, was used to detect the sample as bonafide .",
      "Yes, LFCC-51, which a shap value of 0.9936, was used to detect the sample as bonafide .  Yes, LFCC-51, which a shap value of 0.9936, was used to detect the sample as bonafide .",
      " Yes, LFCC-51, which a shap value of 0.9936, was used to detect the sample as bonafide ."
    ],
    "new_mr": "<inform> inform ( <response> response: [ Yes ], <interpreter> interpreter: [ shap ], <important> important: [ LFCC-51 ], <classification> classification: [ bonafide ], <shap_value> shap value: [ 0.9936 ]> )"
  },
  {
    "mr": "inform(response[Yes], interpreter[shap], important[MFCC-23], classification[replayed], shap_value[-0.3555])",
    "ref": [
      " Yes, which a shap value of -0.3555, was used to detect the sample as replayed .",
      " replayed, MFCC-23, which a shap value of -0.3555, was used to detect the sample as replayed .",
      " Yes, MFCC-23.3555, was used to detect the sample as replayed .",
      " Yes, MFCC-23, which a sh value of -0.3555, was used to detect the sample as replayed .",
      " Yes, MFCC-23, which a shap value of shap, was used to detect the sample as replayed .",
      " Yes.3555, was used to detect the sample as replayed .",
      " Yes, MFCC-23, which a shap value of -0.3555.",
      " Yes, MFCC, which a shap value of -0.3555, was used to detect the sample as replayed .",
      " Yes, -0.3555, which a shap value of -0.3555, was used to detect the sample as replayed .",
      "shap determined that the MFCC-8 feature was one of the more important features by assigning it a value of -0.4934 .",
      " Yes, MFCC-23, which a shap value of -0.3555, was used to detect the sample as replayed ."
    ],
    "new_mr": "<inform> inform ( <response> response: [ Yes ], <interpreter> interpreter: [ shap ], <important> important: [ MFCC-23 ], <classification> classification: [ replayed ], <shap_value> shap value: [ -0.3555 ]> )"
  },
  {
    "mr": "inform(response[Yes], interpreter[shap], important[MFCC-40], classification[bonafide], shap_value[-0.5765])",
    "ref": [
      " Yes, MFCC-40, was used to detect the sample as bonafide .",
      " Yes, , which a shap value of -0.5765, was used to detect the sample as bonafide .",
      "Yes, MFCC-40, which a shap value of -0.5765, was used to detect the sample as bonafide .  Yes, MFCC-40, which a shap value of -0.5765, was used to detect the sample as bonafide .",
      " Yes, MFCC-40, which a shap value of shap, was used to detect the sample as bonafide .",
      " Yes, which a shap value of -0.5765, was used to detect the sample as bonafide .",
      " Yes, Yes, which a shap value of -0.5765, was used to detect the sample as bonafide .",
      "Yes, LFCC-58, which a shap value of 0.6073, was used to detect the sample as bonafide .",
      " Yes, MFCC-40, which a shap value of -0.5765, was used to detect the sample as Yes .",
      " Yes, MFCC-40, which a shap value of -0.5, was used to detect the sample as bonafide .",
      " Yes, MFCC-40, which a bonafide value of -0.5765, was used to detect the sample as bonafide .",
      " Yes, MFCC-40, which a shap value of -0.5765, was used to detect the sample as bonafide ."
    ],
    "new_mr": "<inform> inform ( <response> response: [ Yes ], <interpreter> interpreter: [ shap ], <important> important: [ MFCC-40 ], <classification> classification: [ bonafide ], <shap_value> shap value: [ -0.5765 ]> )"
  },
  {
    "mr": "inform(extracted[LFCC], model[CNN], important[LFCC-46], classification[bonafide])",
    "ref": [
      "the audio sample had LFCC features extracted and LFCC-46 was determined to have a large impact on the CNN model that determined the sample to be bonafide .  the audio sample had LFCC features extracted and LFCC-46 was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      " the audio sample had LFCC features extracted and bonafide was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      " the audio sample had LFCC features extracted and LFCC-46 was determined to have a large impact on the CNN model that determined the sample to be LFCC .",
      " the audio sample had L features extracted and L-46 was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      "Part of the audio was played back .",
      " the audio sample had LFCC-46 features extracted and LFCC-46-46 was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      " the audio sample had LFCC features extracted and LFCC-4 was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      " the audio sample had LFCC features extracted and LFCC-46 was determined to have a large impact on the CNN model that determined the sample to be bonaf .",
      "Part of the audio was played back .  the audio sample had LFCC features extracted and LFCC-46 was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      " the audio sample had LFCC features extracted and LFCC-46 was determined to have a large impact on the  model that determined the sample to be bonafide .",
      " the audio sample had LFCC features extracted and LFCC-46 was determined to have a large impact on the CNN model that determined the sample to be bonafide ."
    ],
    "new_mr": "<inform> inform ( <extracted> extracted: [ LFCC ], <model> model: [ CNN ], <important> important: [ LFCC-46 ], <classification> classification: [ bonafide ]> )"
  },
  {
    "mr": "inform(classification[bonafide], multi_microphone[no], mic_quantity[1])",
    "ref": [
      "The microphone signature is consistent throughout the recording . The microphone signature is consistent throughout the recording .",
      "the audio sample had LFCC features extracted and LFCC-45 was determined to have a large impact on the CNN model that determined the sample to be replayed . The microphone signature is consistent throughout the recording .",
      "the audio sample had LFCC features extracted and LFCC-45 was determined to have a large impact on the CNN model that determined the sample to be replayed .",
      "The microphone signature is consistent throughout the recording . The microphone signature is consistent throughout the recording .",
      "the audio sample had LFCC features extracted and LFCC-45 was determined to have a large impact on the CNN model that determined the sample to be replayed . The microphone signature is consistent throughout the recording .",
      "the audio sample had LFCC features extracted and LFCC-45 was determined to have a large impact on the CNN model that determined the sample to be replayed .",
      "The microphone signature is consistent throughout the recording . The microphone signature is consistent throughout the recording .",
      "the audio sample had LFCC features extracted and LFCC-45 was determined to have a large impact on the CNN model that determined the sample to be replayed . The microphone signature is consistent throughout the recording .",
      "the audio sample had LFCC features extracted and LFCC-45 was determined to have a large impact on the CNN model that determined the sample to be replayed .",
      "The microphone signature is consistent throughout the recording . The microphone signature is consistent throughout the recording .",
      "The microphone signature is consistent throughout the recording . "
    ],
    "new_mr": "<inform> inform ( <classification> classification: [ bonafide ], <multi_microphone> multi microphone: [ no ], <mic_quantity> mic quantity: [ 1 ]> )"
  },
  {
    "mr": "inform(response[Yes], interpreter[shap], important[LFCC-13], classification[bonafide], shap_value[0.3337])",
    "ref": [
      "Yes, MSRCC-2, which a shap value of -0.5591, was used to detect the sample as replayed .",
      " Yes, LFCC-13, which a shap value of 0.3337, was used to detect the sample as b .",
      " Yes, 0.3337, which a shap value of 0.3337, was used to detect the sample as bonafide .",
      " Yes, LFCC-13, which a shap value of 0.3, was used to detect the sample as bonafide .",
      " Yes, LFCC-13, which a shap value of 0.3337.",
      " Yes, LFCC-13, which a bonafide value of 0.3337, was used to detect the sample as bonafide .",
      " Yes, L, which a shap value of 0.3337, was used to detect the sample as bonafide .",
      " Yes, LFCC-13, which a shap value of 0.3337, was used to detect the sample as shap .",
      " 0.3337, LFCC-13, which a shap value of 0.3337, was used to detect the sample as bonafide .",
      " Yes, LFCC-13, was used to detect the sample as bonafide .",
      " Yes, LFCC-13, which a shap value of 0.3337, was used to detect the sample as bonafide ."
    ],
    "new_mr": "<inform> inform ( <response> response: [ Yes ], <interpreter> interpreter: [ shap ], <important> important: [ LFCC-13 ], <classification> classification: [ bonafide ], <shap_value> shap value: [ 0.3337 ]> )"
  },
  {
    "mr": "inform(response[Yes], interpreter[shap], important[GTCC-5], classification[replayed], shap_value[-1])",
    "ref": [
      " Yes, GTCC-5, was used to detect the sample as replayed .",
      " Yes, GT, which a shap value of -1, was used to detect the sample as replayed .",
      " Yes, GTCC-5, which a -1 value of -1, was used to detect the sample as replayed .",
      " Yes, GTCC-5, which a shap value of -1.",
      " Yes, GTCC-5, which a shap value of replayed, was used to detect the sample as replayed .",
      " replayed, GTCC-5, which a shap value of -1, was used to detect the sample as replayed .",
      "Yes, GTCC-5, which a shap value of -1, was used to detect the sample as replayed .  Yes, GTCC-5, which a shap value of -1, was used to detect the sample as replayed .",
      " Yes, GTCC-5, which a shap value of -1, was used to detect the sample as r .",
      " Yes, GTCC-5, which a shap value of -1, was used to detect the sample as GTCC-5 .",
      " , GTCC-5, which a shap value of -1, was used to detect the sample as replayed .",
      " Yes, GTCC-5, which a shap value of -1, was used to detect the sample as replayed ."
    ],
    "new_mr": "<inform> inform ( <response> response: [ Yes ], <interpreter> interpreter: [ shap ], <important> important: [ GTCC-5 ], <classification> classification: [ replayed ], <shap_value> shap value: [ -1 ]> )"
  },
  {
    "mr": "inform(classification[spoof], edit_type[multi_microphone], mic_quantity[3])",
    "ref": [
      "There are three distinct microphone signatures . There are three distinct microphone signatures .",
      "Yes, MFCC-3, which a shap value of -0.1314, was used to detect the sample as bonafide .",
      "Yes, MFCC-3, which a shap value of -0.1314, was used to detect the sample as bonafide . There are three distinct microphone signatures .",
      "There are three distinct microphone signatures . There are three distinct microphone signatures .",
      "Yes, MFCC-3, which a shap value of -0.1314, was used to detect the sample as bonafide .",
      "Yes, MFCC-3, which a shap value of -0.1314, was used to detect the sample as bonafide . There are three distinct microphone signatures .",
      "There are three distinct microphone signatures . There are three distinct microphone signatures .",
      "Yes, MFCC-3, which a shap value of -0.1314, was used to detect the sample as bonafide .",
      "Yes, MFCC-3, which a shap value of -0.1314, was used to detect the sample as bonafide . There are three distinct microphone signatures .",
      "There are three distinct microphone signatures . There are three distinct microphone signatures .",
      "There are three distinct microphone signatures ."
    ],
    "new_mr": "<inform> inform ( <classification> classification: [ spoof ], <edit_type> edit type: [ multi_microphone ], <mic_quantity> mic quantity: [ 3 ]> )"
  },
  {
    "mr": "inform(response[Yes], interpreter[shap], important[LFCC-38], classification[bonafide], shap_value[0.8451])",
    "ref": [
      " Yes.8451, was used to detect the sample as bonafide .",
      " Yes, LFCC-38, which a  value of 0.8451, was used to detect the sample as bonafide .",
      " Yes, shap, which a shap value of 0.8451, was used to detect the sample as bonafide .",
      " Ye, LFCC-38, which a shap value of 0.8451, was used to detect the sample as bonafide .",
      "Yes, LFCC-38, which a shap value of 0.8451, was used to detect the sample as bonafide .  Yes, LFCC-38, which a shap value of 0.8451, was used to detect the sample as bonafide .",
      " Yes, LFCC-38, which a shap value of 0.8451, was used to detect the sample as 0.8451 .",
      " Yes, LFCC-38.8451, was used to detect the sample as bonafide .",
      "Yes, PSRCC-12, which a shap value of -0.5073, was used to detect the sample as bonafide .  Yes, LFCC-38, which a shap value of 0.8451, was used to detect the sample as bonafide .",
      " Yes, LFCC-38, which a shap value of 0.8451.",
      " Yes, LFCC-38, which a shap value of LFCC-38, was used to detect the sample as bonafide .",
      " Yes, LFCC-38, which a shap value of 0.8451, was used to detect the sample as bonafide ."
    ],
    "new_mr": "<inform> inform ( <response> response: [ Yes ], <interpreter> interpreter: [ shap ], <important> important: [ LFCC-38 ], <classification> classification: [ bonafide ], <shap_value> shap value: [ 0.8451 ]> )"
  },
  {
    "mr": "inform(extracted[LFCC], model[CNN], important[LFCC-27], classification[bonafide])",
    "ref": [
      " the audio sample had LF features extracted and LF-27 was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      " the audio sample had bonafide features extracted and bonafide-27 was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      " the audio sample had LFCC features extracted and LFCC-27 was determined to have a large impact on the  model that determined the sample to be bonafide .",
      " the audio sample had LFCC features extracted and LFCC-27 was determined to have a large impact on the CNN model that determined the sample to be b .",
      " the audio sample had LFCC features extracted and LFCC was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      " the audio sample had LFCC features extracted and LFCC-27 was determined to have a large impact on the LFCC-27 model that determined the sample to be bonafide .",
      "Yes, LFCC-53, which a shap value of 0.9557, was used to detect the sample as replayed .  the audio sample had LFCC features extracted and LFCC-27 was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      "the audio sample had LFCC features extracted and LFCC-27 was determined to have a large impact on the CNN model that determined the sample to be bonafide .  the audio sample had LFCC features extracted and LFCC-27 was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      "Yes, LFCC-53, which a shap value of 0.9557, was used to detect the sample as replayed .",
      " the audio sample had LFCC features extracted and LFCC-27 was determined to have a large impact on the CNN model that determined the sample to be LFCC .",
      " the audio sample had LFCC features extracted and LFCC-27 was determined to have a large impact on the CNN model that determined the sample to be bonafide ."
    ],
    "new_mr": "<inform> inform ( <extracted> extracted: [ LFCC ], <model> model: [ CNN ], <important> important: [ LFCC-27 ], <classification> classification: [ bonafide ]> )"
  },
  {
    "mr": "inform(response[yes], speaker_id[6], feature[LFCC-47], interpreter[shap], shap_value[0.5372])",
    "ref": [
      " Yes, LFCC-47, which a  value of 0.5372, was used to detect the id of speaker 6 for the audio sample .",
      "The recording has been tampered with .",
      " Yes, LFCC-47, which a shap value of 0.5372.",
      " Yes, LFCC-47, which a shap value of 0, was used to detect the id of speaker 6 for the audio sample .",
      " Yes, LFCC-47, which a shap value of 0.5372, was used to detect the id of speaker LFCC-47 for the audio sample .",
      " Yes, LFCC-47, which a shap value of LFCC-47, was used to detect the id of speaker 6 for the audio sample .",
      " Yes, LFCC-47, was used to detect the id of speaker 6 for the audio sample .",
      " Yes, which a shap value of 0.5372, was used to detect the id of speaker 6 for the audio sample .",
      " Yes, yes, which a shap value of 0.5372, was used to detect the id of speaker 6 for the audio sample .",
      " Yes, LFCC-47.5372, was used to detect the id of speaker 6 for the audio sample .",
      " Yes, LFCC-47, which a shap value of 0.5372, was used to detect the id of speaker 6 for the audio sample ."
    ],
    "new_mr": "<inform> inform ( <response> response: [ yes ], <speaker_id> speaker id: [ 6 ], <feature> feature: [ LFCC-47 ], <interpreter> interpreter: [ shap ], <shap_value> shap value: [ 0.5372 ]> )"
  },
  {
    "mr": "inform(response[yes], speaker_id[4], feature[MFCC-24], interpreter[shap], shap_value[-0.6368])",
    "ref": [
      " Yes, M, which a shap value of -0.6368, was used to detect the id of speaker 4 for the audio sample .",
      " Yes, MFCC-24, which a sha value of -0.6368, was used to detect the id of speaker 4 for the audio sample .",
      " Yes, MFCC-24.6368, was used to detect the id of speaker 4 for the audio sample .",
      " Yes, MFCC-24, was used to detect the id of speaker 4 for the audio sample .",
      " Yes, MFCC-24, which a shap value of 4, was used to detect the id of speaker 4 for the audio sample .",
      "Yes, MFCC-24, which a shap value of -0.6368, was used to detect the id of speaker 4 for the audio sample .  Yes, MFCC-24, which a shap value of -0.6368, was used to detect the id of speaker 4 for the audio sample .",
      "the audio sample had LFCC features extracted and LFCC-11 was determined to have a large impact on the CNN model that determined the sample to be bonafide .  Yes, MFCC-24, which a shap value of -0.6368, was used to detect the id of speaker 4 for the audio sample .",
      " Yes, MFCC-24, which a shap value of -0.6368.",
      " Yes, MFCC-24, which a MFCC-24 value of -0.6368, was used to detect the id of speaker 4 for the audio sample .",
      " Yes, MFCC-2, which a shap value of -0.6368, was used to detect the id of speaker  for the audio sample .",
      " Yes, MFCC-24, which a shap value of -0.6368, was used to detect the id of speaker 4 for the audio sample ."
    ],
    "new_mr": "<inform> inform ( <response> response: [ yes ], <speaker_id> speaker id: [ 4 ], <feature> feature: [ MFCC-24 ], <interpreter> interpreter: [ shap ], <shap_value> shap value: [ -0.6368 ]> )"
  },
  {
    "mr": "inform(classification[spoof], edit_type[sampling])",
    "ref": [
      "3 was found to be the id of the speaker in the sample .",
      "3 was found to be the id of the speaker in the sample . It appears that the recording was spliced .",
      "It appears that the recording was spliced . It appears that the recording was spliced .",
      "3 was found to be the id of the speaker in the sample .",
      "3 was found to be the id of the speaker in the sample . It appears that the recording was spliced .",
      "It appears that the recording was spliced . It appears that the recording was spliced .",
      "3 was found to be the id of the speaker in the sample .",
      "3 was found to be the id of the speaker in the sample . It appears that the recording was spliced .",
      "It appears that the recording was spliced . It appears that the recording was spliced .",
      "3 was found to be the id of the speaker in the sample .",
      "It appears that the recording was spliced . "
    ],
    "new_mr": "<inform> inform ( <classification> classification: [ spoof ], <edit_type> edit type: [ sampling ]> )"
  },
  {
    "mr": "inform(interpreter[shap], important[GTCC-1], shap_value[1])",
    "ref": [
      " shap determined that the shap feature was one of the more important features by assigning it a value of 1 .",
      "Yes, MFCC-2, which a shap value of -0.7935, was used to detect the id of speaker 7 for the audio sample .",
      "shap determined that the GTCC-1 feature was one of the more important features by assigning it a value of 1 .  shap determined that the GTCC-1 feature was one of the more important features by assigning it a value of 1 .",
      " shap determined that the GT feature was one of the more important features by assigning it a value of 1 .",
      " shap determined that the GTCC- feature was one of the more important features by assigning it a value of  .",
      " 1 determined that the GTCC-1 feature was one of the more important features by assigning it a value of 1 .",
      "Yes, MFCC-2, which a shap value of -0.7935, was used to detect the id of speaker 7 for the audio sample .  shap determined that the GTCC-1 feature was one of the more important features by assigning it a value of 1 .",
      " shap determined that the GTCC-shap feature was one of the more important features by assigning it a value of shap .",
      " sha determined that the GTCC-1 feature was one of the more important features by assigning it a value of 1 .",
      " shap determined that the shap feature was one of the more important features by assigning it a value of 1 .",
      " shap determined that the GTCC-1 feature was one of the more important features by assigning it a value of 1 ."
    ],
    "new_mr": "<inform> inform ( <interpreter> interpreter: [ shap ], <important> important: [ GTCC-1 ], <shap_value> shap value: [ 1 ]> )"
  },
  {
    "mr": "inform(extracted[LFCC], model[CNN], important[LFCC-59], classification[bonafide])",
    "ref": [
      " the audio sample had bonafide features extracted and bonafide-59 was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      " the audio sample had LFCC features extracted and bonafide was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      " the audio sample had LFCC features extracted and LFCC-59 was determined to have a large impact on the CNN model that determined the sample to be bonaf .",
      "Yes, MFCC-1, which a shap value of -0.0727, was used to detect the sample as bonafide .  the audio sample had LFCC features extracted and LFCC-59 was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      " the audio sample had LF features extracted and LF-59 was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      " the audio sample had LFCC features extracted and LFCC-59 was determined to have a large impact on the CN model that determined the sample to be bonafide .",
      " the audio sample had LFCC features extracted and LFCC-59 was determined to have a large impact on the CNN model that determined the sample to be CNN .",
      "Yes, MFCC-1, which a shap value of -0.0727, was used to detect the sample as bonafide .",
      "the audio sample had LFCC features extracted and LFCC-59 was determined to have a large impact on the CNN model that determined the sample to be bonafide .  the audio sample had LFCC features extracted and LFCC-59 was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      " the audio sample had LFCC features extracted and LFCC-59 was determined to have a large impact on the LFCC-59 model that determined the sample to be bonafide .",
      " the audio sample had LFCC features extracted and LFCC-59 was determined to have a large impact on the CNN model that determined the sample to be bonafide ."
    ],
    "new_mr": "<inform> inform ( <extracted> extracted: [ LFCC ], <model> model: [ CNN ], <important> important: [ LFCC-59 ], <classification> classification: [ bonafide ]> )"
  },
  {
    "mr": "inform(response[Yes], interpreter[shap], important[MFCC-40], classification[replayed], shap_value[0.1447])",
    "ref": [
      " Yes, MFCC-40, which a MFCC-40 value of 0.1447, was used to detect the sample as replayed .",
      "Yes, MFCC-40, which a shap value of 0.1447, was used to detect the sample as replayed .  Yes, MFCC-40, which a shap value of 0.1447, was used to detect the sample as replayed .",
      " Ye, MFCC-40, which a shap value of 0.1447, was used to detect the sample as replayed .",
      " Yes.1447, was used to detect the sample as replayed .",
      " Yes, MFCC-40, which a shap value of 0.1447, was used to detect the sample as  .",
      " Yes, MFCC-40, which a shap value of 0.1447.",
      " 0.1447, MFCC-40, which a shap value of 0.1447, was used to detect the sample as replayed .",
      " Yes, MFCC-40, which a shap value of MFCC-40, was used to detect the sample as replayed .",
      " Yes, MFCC-40, which a sha value of 0.1447, was used to detect the sample as replayed .",
      " Yes, MFCC-40.1447, was used to detect the sample as replayed .",
      " Yes, MFCC-40, which a shap value of 0.1447, was used to detect the sample as replayed ."
    ],
    "new_mr": "<inform> inform ( <response> response: [ Yes ], <interpreter> interpreter: [ shap ], <important> important: [ MFCC-40 ], <classification> classification: [ replayed ], <shap_value> shap value: [ 0.1447 ]> )"
  },
  {
    "mr": "inform(interpreter[shap], important[MFCC-18], shap_value[-0.1509])",
    "ref": [
      " s determined that the MFCC-18 feature was one of the more important features by assigning it a value of -0.1509 .",
      " shap determined that the MF feature was one of the more important features by assigning it a value of -0.1509 .",
      " shap determined that the shap feature was one of the more important features by assigning it a value of -0.1509 .",
      " -0.1509 determined that the MFCC-18 feature was one of the more important features by assigning it a value of -0.1509 .",
      " shap determined that the MFCC-18 feature was one of the more important features by assigning it a value of -0 .",
      "shap determined that the LFCC-6 feature was one of the more important features by assigning it a value of -0.917 .  shap determined that the MFCC-18 feature was one of the more important features by assigning it a value of -0.1509 .",
      "shap determined that the MFCC-18 feature was one of the more important features by assigning it a value of -0.1509 .  shap determined that the MFCC-18 feature was one of the more important features by assigning it a value of -0.1509 .",
      "shap determined that the LFCC-6 feature was one of the more important features by assigning it a value of -0.917 .",
      " shap determined that the MFCC-18 feature was one of the more important features by assigning it a value of MFCC-18 .",
      " s determined that the MFCC-18 feature was one of the more important features by assigning it a value of -0.1509 .",
      " shap determined that the MFCC-18 feature was one of the more important features by assigning it a value of -0.1509 ."
    ],
    "new_mr": "<inform> inform ( <interpreter> interpreter: [ shap ], <important> important: [ MFCC-18 ], <shap_value> shap value: [ -0.1509 ]> )"
  },
  {
    "mr": "inform(interpreter[shap], important[LFCC-26], shap_value[-0.1124])",
    "ref": [
      "shap determined that the LFCC-26 feature was one of the more important features by assigning it a value of -0.1124 .  shap determined that the LFCC-26 feature was one of the more important features by assigning it a value of -0.1124 .",
      " shap determined that the -0.1124 feature was one of the more important features by assigning it a value of -0.1124 .",
      "Yes, MFCC-33, which a shap value of -0.0018, was used to detect the sample as bonafide .  shap determined that the LFCC-26 feature was one of the more important features by assigning it a value of -0.1124 .",
      " shap determined that the  feature was one of the more important features by assigning it a value of -0.1124 .",
      "  determined that the LFCC-26 feature was one of the more important features by assigning it a value of -0.1124 .",
      " -0.1124 determined that the LFCC-26 feature was one of the more important features by assigning it a value of -0.1124 .",
      " shap determined that the LFCC-26 feature was one of the more important features by assigning it a value of - .",
      " shap determined that the LFCC-26 feature was one of the more important features by assigning it a value of LFCC-26 .",
      "Yes, MFCC-33, which a shap value of -0.0018, was used to detect the sample as bonafide .",
      "shap determined that the LFCC-26 feature was one of the more important features by assigning it a value of -0.1124 .  shap determined that the LFCC-26 feature was one of the more important features by assigning it a value of -0.1124 .",
      " shap determined that the LFCC-26 feature was one of the more important features by assigning it a value of -0.1124 ."
    ],
    "new_mr": "<inform> inform ( <interpreter> interpreter: [ shap ], <important> important: [ LFCC-26 ], <shap_value> shap value: [ -0.1124 ]> )"
  },
  {
    "mr": "inform(extracted[LFCC], model[CNN], important[LFCC-24], classification[bonafide])",
    "ref": [
      "Several features showed the Reverberation signature .",
      " the audio sample had L features extracted and L-24 was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      " the audio sample had LFCC features extracted and LFCC-24 was determined to have a large impact on the LFCC model that determined the sample to be bonafide .",
      " the audio sample had LFCC features extracted and LFCC-24 was determined to have a large impact on the  model that determined the sample to be bonafide .",
      " the audio sample had LFCC features extracted and CNN was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      "Several features showed the Reverberation signature .  the audio sample had LFCC features extracted and LFCC-24 was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      " the audio sample had LFCC-24 features extracted and LFCC-24-24 was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      " the audio sample had LFCC features extracted and LFCC-24 was determined to have a large impact on the CNN model that determined the sample to be bonaf .",
      " the audio sample had LFCC features extracted and LFC was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      "the audio sample had LFCC features extracted and LFCC-24 was determined to have a large impact on the CNN model that determined the sample to be bonafide .  the audio sample had LFCC features extracted and LFCC-24 was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      " the audio sample had LFCC features extracted and LFCC-24 was determined to have a large impact on the CNN model that determined the sample to be bonafide ."
    ],
    "new_mr": "<inform> inform ( <extracted> extracted: [ LFCC ], <model> model: [ CNN ], <important> important: [ LFCC-24 ], <classification> classification: [ bonafide ]> )"
  },
  {
    "mr": "inform(general)",
    "ref": [
      "Spectral centroid magnitude ( SCM ) is the weighted average magnitude for a given subband . SCM captures, to a first order approximation , the distribution of energy in a subband for two arbitrary signals with the same average energy . Due to the weighting function, the two signals would each be represented by different SCF and SCM values . The different steepness of the weighting function with respect to the subband bandwidth may also be noted; this results in different feature element variances . As the spectral centroid magnitude is the magnitude at the position of the spectral centroid frequency, it will carry formant related information which is useful for speaker recognition .",
      "Spectral centroid magnitude ( SCM ) is the weighted average magnitude for a given subband , where the weights are the frequency of each magnitude component in that subband . SCM captures, to a first order approximation , the two signals would each be represented by different SCF and SCM values . The different steepness of the weighting function with respect to the subband bandwidth may also be noted; this results in different feature element variances . As the spectral centroid magnitude is the magnitude at the position of the spectral centroid frequency, it will carry formant related information which is useful for speaker recognition .",
      "Spectral centroid magnitude ( SCM ) is the weighted average magnitude for a given subband , where the weights are the frequency of each magnitude component in that subband . SCM captures, to a first order approximation , the distribution of energy in a subband for two arbitrary signals with the same average energy . Due to the weighting function, it will carry formant related information which is useful for speaker recognition .",
      "Spectral centroid magnitude ( SCM ) is the weighted average magnitude for a given subband , where the weights are the frequency of each magnitude component in that subband .  Yes, LFCC-58, which a shap value of 0.6073, was used to detect the sample as bonafide . SCM captures, to a first order approximation , the distribution of energy in a subband for two arbitrary signals with the same average energy .  Yes, LFCC-58, which a shap value of 0.6073, was used to detect the sample as bonafide . Due to the weighting function, the two signals would each be represented by different SCF and SCM values .  Yes, LFCC-58, which a shap value of 0.6073, was used to detect the sample as bonafide . The different steepness of the weighting function with respect to the subband bandwidth may also be noted; this results in different feature element variances . As the spectral centroid magnitude is the magnitude at the position of the spectral centroid frequency, it will carry formant related information which is useful for speaker recognition .",
      "Spectral centroid magnitude ( SCM ) is the weighted average magnitude for a given subband , where the weights are the frequency of each magnitude component in that subband . SCM captures. Due to the weighting function, the two signals would each be represented by different SCF and SCM values . The different steepness of the weighting function with respect to the subband bandwidth may also be noted; this results in different feature element variances . As the spectral centroid magnitude is the magnitude at the position of the spectral centroid frequency, it will carry formant related information which is useful for speaker recognition .",
      "Spectral centroid magnitude ( SCM ) is the weighted average magnitude for a given subband , where the weights are the frequency of each magnitude component in that subband . Due to the weighting function, the two signals would each be represented by different SCF and SCM values . SCM captures, to a first order approximation , the distribution of energy in a subband for two arbitrary signals with the same average energy . Due to the weighting function, the two signals would each be represented by different SCF and SCM values . Due to the weighting function, the two signals would each be represented by different SCF and SCM values . The different steepness of the weighting function with respect to the subband bandwidth may also be noted; this results in different feature element variances . As the spectral centroid magnitude is the magnitude at the position of the spectral centroid frequency, it will carry formant related information which is useful for speaker recognition .",
      "Spectral centroid magnitude ( SCM ) is the weighted average magnitude for a given subband , where the weights are the frequency of each magnitude component in that subband . Due to the weighting function, the two signals would each be represented by different SCF and SCM values . Due to the weighting function, the two signals would each be represented by different SCF and SCM values . SCM captures, to a first order approximation , the distribution of energy in a subband for two arbitrary signals with the same average energy . Due to the weighting function, the two signals would each be represented by different SCF and SCM values . Due to the weighting function, the two signals would each be represented by different SCF and SCM values . The different steepness of the weighting function with respect to the subband bandwidth may also be noted; this results in different feature element variances . As the spectral centroid magnitude is the magnitude at the position of the spectral centroid frequency, it will carry formant related information which is useful for speaker recognition .",
      "Yes, LFCC-58, which a shap value of 0.6073, was used to detect the sample as bonafide .  Yes, LFCC-58, which a shap value of 0.6073, was used to detect the sample as bonafide .  Yes, LFCC-58, which a shap value of 0.6073, was used to detect the sample as bonafide . The different steepness of the weighting function with respect to the subband bandwidth may also be noted; this results in different feature element variances .  Yes, LFCC-58, which a shap value of 0.6073, was used to detect the sample as bonafide .",
      "SCM captures, to a first order approximation , the distribution of energy in a subband for two arbitrary signals with the same average energy . Due to the weighting function, the two signals would each be represented by different SCF and SCM values . The different steepness of the weighting function with respect to the subband bandwidth may also be noted; this results in different feature element variances . As the spectral centroid magnitude is the magnitude at the position of the spectral centroid frequency, it will carry formant related information which is useful for speaker recognition .",
      "Spectral centroid magnitude ( SCM ) is the weighted average magnitude for a given subband , where the weights are the frequency of each magnitude component in that subband . SCM captures, to a first order approximation , the distribution of energy in a subband for two arbitrary signals with the same average energy .  Yes, LFCC-58, which a shap value of 0.6073, was used to detect the sample as bonafide . Due to the weighting function, the two signals would each be represented by different SCF and SCM values .  Yes, LFCC-58, which a shap value of 0.6073, was used to detect the sample as bonafide . The different steepness of the weighting function with respect to the subband bandwidth may also be noted; this results in different feature element variances . As the spectral centroid magnitude is the magnitude at the position of the spectral centroid frequency, it will carry formant related information which is useful for speaker recognition .",
      "Spectral centroid magnitude ( SCM ) is the weighted average magnitude for a given subband , where the weights are the frequency of each magnitude component in that subband . SCM captures, to a first order approximation , the distribution of energy in a subband for two arbitrary signals with the same average energy . Due to the weighting function, the two signals would each be represented by different SCF and SCM values . The different steepness of the weighting function with respect to the subband bandwidth may also be noted; this results in different feature element variances . As the spectral centroid magnitude is the magnitude at the position of the spectral centroid frequency, it will carry formant related information which is useful for speaker recognition ."
    ],
    "new_mr": "<inform> inform ( > )"
  },
  {
    "mr": "inform(classification[spoof], edit_type[multi_microphone], mic_quantity[>1])",
    "ref": [
      "The cut takes place at the 20 second mark . There are different microphone signatures .",
      "The cut takes place at the 20 second mark .",
      "There are different microphone signatures . There are different microphone signatures .",
      "The cut takes place at the 20 second mark . There are different microphone signatures .",
      "The cut takes place at the 20 second mark .",
      "There are different microphone signatures . There are different microphone signatures .",
      "The cut takes place at the 20 second mark . There are different microphone signatures .",
      "The cut takes place at the 20 second mark .",
      "There are different microphone signatures . There are different microphone signatures .",
      "The cut takes place at the 20 second mark . There are different microphone signatures .",
      "There are different microphone signatures ."
    ],
    "new_mr": "<inform> inform ( <classification> classification: [ spoof ], <edit_type> edit type: [ multi_microphone ], <mic_quantity> mic quantity: [ >1 ]> )"
  },
  {
    "mr": "inform(response[yes], speaker_id[3], feature[LFCC-6], interpreter[shap], shap_value[0.3353])",
    "ref": [
      " Yes, person 0.3353 was detected by LFCC-6 with a shap value of 0.0.33530.335350.3353 .",
      " Yes, person 3 was detected by yes with a shap value of 0.3353 .",
      " Yes, person 3 was detected by LFCC-6 with a shap value of 0 .",
      " Yes, person 3 was detected by LFCC-6 with a shap value of 3 .",
      "Yes, MFCC-6, which a shap value of -0.2267, was used to detect the sample as replayed .  Yes, person 3 was detected by LFCC-6 with a shap value of 0.3353 .",
      "Yes, MFCC-6, which a shap value of -0.2267, was used to detect the sample as replayed .",
      " Yes, person 3 was detected by LFCC-6 with a sha value of 0.3353 .",
      " Yes, person 3 was detected by LFCC-6 with a yes value of 0.3353 .",
      " Yes, person  was detected by LFCC-6 with a shap value of 0.5 .",
      "Yes, person 3 was detected by LFCC-6 with a shap value of 0.3353 .  Yes, person 3 was detected by LFCC-6 with a shap value of 0.3353 .",
      " Yes, person 3 was detected by LFCC-6 with a shap value of 0.3353 ."
    ],
    "new_mr": "<inform> inform ( <response> response: [ yes ], <speaker_id> speaker id: [ 3 ], <feature> feature: [ LFCC-6 ], <interpreter> interpreter: [ shap ], <shap_value> shap value: [ 0.3353 ]> )"
  },
  {
    "mr": "inform(classification[bonafide], edit_type[none])",
    "ref": [
      "Yes, PSRCC-1, which a shap value of 0.1274, was used to detect the sample as bonafide . The speech patterns show where the speaker is from .",
      "Yes, PSRCC-1, which a shap value of 0.1274, was used to detect the sample as bonafide .",
      "The speech patterns show where the speaker is from . The speech patterns show where the speaker is from .",
      "Yes, PSRCC-1, which a shap value of 0.1274, was used to detect the sample as bonafide . The speech patterns show where the speaker is from .",
      "Yes, PSRCC-1, which a shap value of 0.1274, was used to detect the sample as bonafide .",
      "The speech patterns show where the speaker is from . The speech patterns show where the speaker is from .",
      "Yes, PSRCC-1, which a shap value of 0.1274, was used to detect the sample as bonafide . The speech patterns show where the speaker is from .",
      "Yes, PSRCC-1, which a shap value of 0.1274, was used to detect the sample as bonafide .",
      "The speech patterns show where the speaker is from . The speech patterns show where the speaker is from .",
      "Yes, PSRCC-1, which a shap value of 0.1274, was used to detect the sample as bonafide . The speech patterns show where the speaker is from .",
      "The speech patterns show where the speaker is from ."
    ],
    "new_mr": "<inform> inform ( <classification> classification: [ bonafide ], <edit_type> edit type: [ none ]> )"
  },
  {
    "mr": "inform(response[yes], speaker_id[2], feature[MSRCC-8], interpreter[shap], shap_value[-0.5893])",
    "ref": [
      " Yes, person 2 was detected by MSRCC-8 with a shap value of - .",
      " Yes, person 2 was detected by MSRCC- with a shap value of -0.5893 .",
      " Yes, person 2 was detected by yes with a shap value of -0.5893 .",
      "shap determined that the LFCC-9 feature was one of the more important features by assigning it a value of -0.1259 .  Yes, person 2 was detected by MSRCC-8 with a shap value of -0.5893 .",
      " Yes, person 2 was detected by MSRCC-8 with a MSRCC-8 value of -0.5893 .",
      " Yes, person  was detected by MSRCC-8 with a shap value of -0.5893 .",
      " Yes, person yes was detected by MSRCC-8 with a shap value of -0.5893 .",
      " Yes, person 2 was detected by MSRCC-8 with a s value of -0.5893 .",
      "Yes, person 2 was detected by MSRCC-8 with a shap value of -0.5893 .  Yes, person 2 was detected by MSRCC-8 with a shap value of -0.5893 .",
      "shap determined that the LFCC-9 feature was one of the more important features by assigning it a value of -0.1259 .",
      " Yes, person 2 was detected by MSRCC-8 with a shap value of -0.5893 ."
    ],
    "new_mr": "<inform> inform ( <response> response: [ yes ], <speaker_id> speaker id: [ 2 ], <feature> feature: [ MSRCC-8 ], <interpreter> interpreter: [ shap ], <shap_value> shap value: [ -0.5893 ]> )"
  },
  {
    "mr": "inform(classification[spoof], edit_type[multi_microphone], mic_quantity[>1])",
    "ref": [
      "Yes, MFCC-3, which a shap value of 0.0695, was used to detect the id of speaker 2 for the audio sample .",
      "There was more than one microphone . There was more than one microphone .",
      "Yes, MFCC-3, which a shap value of 0.0695, was used to detect the id of speaker 2 for the audio sample . There was more than one microphone .",
      "Yes, MFCC-3, which a shap value of 0.0695, was used to detect the id of speaker 2 for the audio sample .",
      "There was more than one microphone . There was more than one microphone .",
      "Yes, MFCC-3, which a shap value of 0.0695, was used to detect the id of speaker 2 for the audio sample . There was more than one microphone .",
      "Yes, MFCC-3, which a shap value of 0.0695, was used to detect the id of speaker 2 for the audio sample .",
      "There was more than one microphone . There was more than one microphone .",
      "Yes, MFCC-3, which a shap value of 0.0695, was used to detect the id of speaker 2 for the audio sample . There was more than one microphone .",
      "Yes, MFCC-3, which a shap value of 0.0695, was used to detect the id of speaker 2 for the audio sample .",
      "There was more than one microphone ."
    ],
    "new_mr": "<inform> inform ( <classification> classification: [ spoof ], <edit_type> edit type: [ multi_microphone ], <mic_quantity> mic quantity: [ >1 ]> )"
  },
  {
    "mr": "inform(classification[bonafide], edit_type[none])",
    "ref": [
      "Subband Spectral Flux Coefficients . The spoofed audio was not converted .",
      "Subband Spectral Flux Coefficients .",
      "The spoofed audio was converted . ",
      "The spoofed audio was not converted . The spoofed audio was not converted .",
      "Subband Spectral Flux Coefficients . The spoofed audio was not converted .",
      "Subband Spectral Flux Coefficients .",
      "The spoofed audio was converted . ",
      "The spoofed audio was not converted . The spoofed audio was not converted .",
      "Subband Spectral Flux Coefficients . The spoofed audio was not converted .",
      "Subband Spectral Flux Coefficients .",
      "The spoofed audio was not converted . "
    ],
    "new_mr": "<inform> inform ( <classification> classification: [ bonafide ], <edit_type> edit type: [ none ]> )"
  },
  {
    "mr": "inform(classification[spoofed], spoof_type[replayed], model[GMM])",
    "ref": [
      "The recording file was classified as being replayed by a G model .",
      "The recording file was classified as being re by a GMM model .",
      "The recording file was classified as being GMM by a GMM model .",
      "The recording file was classified as being replayed by a replayed model .",
      "shap determined that the LFCC-30 feature was one of the more important features by assigning it a value of 0.7143 .",
      "shap determined that the LFCC-30 feature was one of the more important features by assigning it a value of 0.7143 . The recording file was classified as being replayed by a GMM model .",
      "The recording file was classified as being replayed by a GMM model . The recording file was classified as being replayed by a GMM model .",
      "The recording file was classified as being replayed by a G model .",
      "The recording file was classified as being re by a GMM model .",
      "The recording file was classified as being GMM by a GMM model .",
      "The recording file was classified as being replayed by a GMM model ."
    ],
    "new_mr": "<inform> inform ( <classification> classification: [ spoofed ], <spoof_type> spoof type: [ replayed ], <model> model: [ GMM ]> )"
  },
  {
    "mr": "inform(response[yes], speaker_id[7], feature[GTCC-13], interpreter[shap], shap_value[-1])",
    "ref": [
      " Yes, person 7 was detected by GTCC-3 with a shap value of - .",
      " Yes, person 7 was detected by shap with a shap value of -1 .",
      " Yes.",
      " Yes, person yes was detected by GTCC-13 with a shap value of -1 .",
      "Yes, LFCC-31, which a shap value of -0.0632, was used to detect the sample as bonafide .  Yes, person 7 was detected by GTCC-13 with a shap value of -1 .",
      " Yes, person 7 was detected by GTCC-13 with a  value of -1 .",
      " Yes, person  was detected by GTCC-13 with a shap value of -1 .",
      " Yes, person 7 was detected by GTCC-13 with a yes value of -1 .",
      "Yes, person 7 was detected by GTCC-13 with a shap value of -1 .  Yes, person 7 was detected by GTCC-13 with a shap value of -1 .",
      " Yes, person 7 was detected by GTCC73 with a shap value of 7 .",
      " Yes, person 7 was detected by GTCC-13 with a shap value of -1 ."
    ],
    "new_mr": "<inform> inform ( <response> response: [ yes ], <speaker_id> speaker id: [ 7 ], <feature> feature: [ GTCC-13 ], <interpreter> interpreter: [ shap ], <shap_value> shap value: [ -1 ]> )"
  },
  {
    "mr": "inform(response[Yes], interpreter[shap], important[LFCC-42], classification[bonafide], shap_value[0.5541])",
    "ref": [
      "Yes, LFCC-42, which a shap value of 0.5541, was used to detect the sample as bonafide .  Yes, LFCC-42, which a shap value of 0.5541, was used to detect the sample as bonafide .",
      " LFCC-42, LFCC-42, which a shap value of 0.5541, was used to detect the sample as bonafide .",
      " Yes, LFCC-42, which a shap value of 0.5541.",
      " Yes, LFCC-42, which a Yes value of 0.5541, was used to detect the sample as bonafide .",
      " Yes, LFCC-42, was used to detect the sample as bonafide .",
      " Yes, LFCC-4, which a shap value of 0.5541, was used to detect the sample as bonafide .",
      " Yes, LFCC-42, which a shap value of , was used to detect the sample as bonafide .",
      "Yes, LFCC-6, which a shap value of 0.46, was used to detect the id of speaker 3 for the audio sample .",
      " Yes, LFCC-42, which a shap value of 0.5541, was used to detect the sample as b .",
      " Yes, LFCC-42.5541, was used to detect the sample as bonafide .",
      " Yes, LFCC-42, which a shap value of 0.5541, was used to detect the sample as bonafide ."
    ],
    "new_mr": "<inform> inform ( <response> response: [ Yes ], <interpreter> interpreter: [ shap ], <important> important: [ LFCC-42 ], <classification> classification: [ bonafide ], <shap_value> shap value: [ 0.5541 ]> )"
  },
  {
    "mr": "inform(response[yes], speaker_id[6], feature[PSRCC-6], interpreter[shap], shap_value[-0.0215])",
    "ref": [
      " Yes, person 6 was detected by  with a shap value of -0.0215 .",
      "yes, MFCC-7 was used to determine speaker id .",
      " Yes, person  was detected by PSRCC- with a shap value of -0.0215 .",
      " Yes, person 6 was detected by PSRCC-6 with a sha value of -0.0215 .",
      "yes, MFCC-7 was used to determine speaker id .  Yes, person 6 was detected by PSRCC-6 with a shap value of -0.0215 .",
      " Yes.0215 .",
      "Yes, person 6 was detected by PSRCC-6 with a shap value of -0.0215 .  Yes, person 6 was detected by PSRCC-6 with a shap value of -0.0215 .",
      " Yes, person 6 was detected by PSRCC-6 with a shap value of - .",
      " Yes, person 6 was detected by PSRCC-6 with a shap value of yes .",
      " Yes, person 6 was detected by 6 with a shap value of -0.0215 .",
      " Yes, person 6 was detected by PSRCC-6 with a shap value of -0.0215 ."
    ],
    "new_mr": "<inform> inform ( <response> response: [ yes ], <speaker_id> speaker id: [ 6 ], <feature> feature: [ PSRCC-6 ], <interpreter> interpreter: [ shap ], <shap_value> shap value: [ -0.0215 ]> )"
  },
  {
    "mr": "inform(response[Yes], interpreter[shap], important[MSRCC-8], classification[bonafide], shap_value[0.8955])",
    "ref": [
      " Yes.8955, was used to detect the sample as bonafide .",
      " Yes, MSRCC-8, which a  value of 0.8955, was used to detect the sample as bonafide .",
      "Yes, MSRCC-8, which a shap value of 0.8955, was used to detect the sample as bonafide .  Yes, MSRCC-8, which a shap value of 0.8955, was used to detect the sample as bonafide .",
      " Yes, MSRCC-8.8955, was used to detect the sample as bonafide .",
      " Yes, shap, which a shap value of 0.8955, was used to detect the sample as bonafide .",
      " Yes, MSRCC-8, which a shap value of shap, was used to detect the sample as bonafide .",
      "the audio sample had MFCC features extracted and MFCC-3 was determined to have a large impact on the CNN model that determined the sample to be replayed .  Yes, MSRCC-8, which a shap value of 0.8955, was used to detect the sample as bonafide .",
      " Yes, MSRCC-8, which a shap value of 0.8955.",
      " Yes, , which a shap value of 0.8955, was used to detect the sample as bonafide .",
      " Yes, MSRCC-8, which a shap value of 0.8955, was used to detect the sample as shap .",
      " Yes, MSRCC-8, which a shap value of 0.8955, was used to detect the sample as bonafide ."
    ],
    "new_mr": "<inform> inform ( <response> response: [ Yes ], <interpreter> interpreter: [ shap ], <important> important: [ MSRCC-8 ], <classification> classification: [ bonafide ], <shap_value> shap value: [ 0.8955 ]> )"
  },
  {
    "mr": "inform(classification[bonafide], edit_type[none])",
    "ref": [
      "Yes, PSRCC-5, which a shap value of 0.2383, was used to detect the sample as bonafide .",
      "The audio is not converted . The audio is not converted .",
      "Yes, PSRCC-5, which a shap value of 0.2383, was used to detect the sample as bonafide . The audio is not converted .",
      "The audio is converted .",
      "Yes, PSRCC-5, which a shap value of 0.2383, was used to detect the sample as bonafide .",
      "The audio is not converted . The audio is not converted .",
      "Yes, PSRCC-5, which a shap value of 0.2383, was used to detect the sample as bonafide . The audio is not converted .",
      "The audio is converted .",
      "Yes, PSRCC-5, which a shap value of 0.2383, was used to detect the sample as bonafide .",
      "The audio is not converted . The audio is not converted .",
      "The audio is not converted ."
    ],
    "new_mr": "<inform> inform ( <classification> classification: [ bonafide ], <edit_type> edit type: [ none ]> )"
  },
  {
    "mr": "inform(response[yes], speaker_id[3], feature[LFCC-44], interpreter[shap], shap_value[0.1772])",
    "ref": [
      " Yes, shap, which a shap value of 0.1772, was used to detect the id of speaker 3 for the audio sample .",
      " Yes, LFCC-44, which a shap value of 0.1772, was used to detect the id of speaker  for the audio sample .",
      " Yes, LFCC-44, which a shap value of 0., was used to detect the id of speaker 3 for the audio sample .",
      " Yes, LFCC-44, was used to detect the id of speaker 3 for the audio sample .",
      " Yes, LFCC-44, which a s value of 0.1772, was used to detect the id of speaker 3 for the audio sample .",
      " Yes, LFCC-44, which a shap value of 0.1772.",
      "the audio sample had PSRCC features extracted and PSRCC-11 was determined to have a large impact on the CNN model that determined the sample to be replayed .  Yes, LFCC-44, which a shap value of 0.1772, was used to detect the id of speaker 3 for the audio sample .",
      " Yes, which a shap value of 0.1772, was used to detect the id of speaker 3 for the audio sample .",
      " Yes, , which a shap value of 0.1772, was used to detect the id of speaker 3 for the audio sample .",
      " Yes, LFCC-44, which a shap value of LFCC-44, was used to detect the id of speaker 3 for the audio sample .",
      " Yes, LFCC-44, which a shap value of 0.1772, was used to detect the id of speaker 3 for the audio sample ."
    ],
    "new_mr": "<inform> inform ( <response> response: [ yes ], <speaker_id> speaker id: [ 3 ], <feature> feature: [ LFCC-44 ], <interpreter> interpreter: [ shap ], <shap_value> shap value: [ 0.1772 ]> )"
  },
  {
    "mr": "inform(response[Yes], interpreter[shap], important[PSRCC-3], classification[bonafide], shap_value[-0.0902])",
    "ref": [
      " Yes, PSRCC-3, which a shap value of bonafide, was used to detect the sample as bonafide .",
      " Yes, PSRCC-3, which a -0.0902 value of -0.0902, was used to detect the sample as bonafide .",
      " Yes, PSRCC-3, which a sha value of -0.0902, was used to detect the sample as bonafide .",
      "Yes, PSRCC-3, which a shap value of -0.0902, was used to detect the sample as bonafide .  Yes, PSRCC-3, which a shap value of -0.0902, was used to detect the sample as bonafide .",
      " Yes, PSRCC-3, which a shap value of -0.0902.",
      " Yes, PSRCC-3, was used to detect the sample as bonafide .",
      "Yes, MFCC-37, which a shap value of -0.5104, was used to detect the sample as replayed .",
      " Yes, PSRCC-3.0902, was used to detect the sample as bonafide .",
      " -0.0902, PSRCC-3, which a shap value of -0.0902, was used to detect the sample as bonafide .",
      " , PSRCC-3, which a shap value of -0.0902, was used to detect the sample as bonafide .",
      " Yes, PSRCC-3, which a shap value of -0.0902, was used to detect the sample as bonafide ."
    ],
    "new_mr": "<inform> inform ( <response> response: [ Yes ], <interpreter> interpreter: [ shap ], <important> important: [ PSRCC-3 ], <classification> classification: [ bonafide ], <shap_value> shap value: [ -0.0902 ]> )"
  },
  {
    "mr": "inform(extracted[LFCC], model[CNN], important[LFCC-29], classification[bonafide])",
    "ref": [
      " the audio sample had LFCC features extracted and CNN was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      "No .",
      " the audio sample had LFCC features extracted and LFCC- was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      " the audio sample had LFCC features extracted and LFCC-29 was determined to have a large impact on the CNN model that determined the sample to be  .",
      " the audio sample had LFCC features extracted and LFCC-29 was determined to have a large impact on the bonafide model that determined the sample to be bonafide .",
      " the audio sample had LFCC features extracted and LFCC-29 was determined to have a large impact on the  model that determined the sample to be bonafide .",
      " the audio sample had LFCC features extracted and LFCC-29 was determined to have a large impact on the CNN model that determined the sample to be LFCC-29 .",
      " the audio sample had CNN features extracted and CNN-29 was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      " the audio sample had L features extracted and L-29 was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      "the audio sample had LFCC features extracted and LFCC-29 was determined to have a large impact on the CNN model that determined the sample to be bonafide .  the audio sample had LFCC features extracted and LFCC-29 was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      " the audio sample had LFCC features extracted and LFCC-29 was determined to have a large impact on the CNN model that determined the sample to be bonafide ."
    ],
    "new_mr": "<inform> inform ( <extracted> extracted: [ LFCC ], <model> model: [ CNN ], <important> important: [ LFCC-29 ], <classification> classification: [ bonafide ]> )"
  },
  {
    "mr": "inform(classification[spoof], edit_type[speed])",
    "ref": [
      "There are no unusually long or short pauses . The average pitch gets higher in this section",
      "There are no unusually long or short pauses .",
      "The average pitch gets higher in this section The average pitch gets higher in this section",
      "There are no unusually long or short pauses . The average pitch gets higher in this section",
      "There are no unusually long or short pauses .",
      "The average pitch gets higher in this section The average pitch gets higher in this section",
      "There are no unusually long or short pauses . The average pitch gets higher in this section",
      "There are no unusually long or short pauses .",
      "The average pitch gets higher in this section The average pitch gets higher in this section",
      "There are no unusually long or short pauses . The average pitch gets higher in this section",
      "The average pitch gets higher in this section"
    ],
    "new_mr": "<inform> inform ( <classification> classification: [ spoof ], <edit_type> edit type: [ speed ]> )"
  },
  {
    "mr": "inform(classification[spoof], edit_type[multi_microphone], mic_quantity[3])",
    "ref": [
      "There are three distinct microphone signatures . There are three distinct microphone signatures .",
      "the audio sample had LFCC features extracted and LFCC-57 was determined to have a large impact on the CNN model that determined the sample to be replayed . There are three distinct microphone signatures .",
      "the audio sample had LFCC features extracted and LFCC-57 was determined to have a large impact on the CNN model that determined the sample to be replayed .",
      "There are three distinct microphone signatures . There are three distinct microphone signatures .",
      "the audio sample had LFCC features extracted and LFCC-57 was determined to have a large impact on the CNN model that determined the sample to be replayed . There are three distinct microphone signatures .",
      "the audio sample had LFCC features extracted and LFCC-57 was determined to have a large impact on the CNN model that determined the sample to be replayed .",
      "There are three distinct microphone signatures . There are three distinct microphone signatures .",
      "the audio sample had LFCC features extracted and LFCC-57 was determined to have a large impact on the CNN model that determined the sample to be replayed . There are three distinct microphone signatures .",
      "the audio sample had LFCC features extracted and LFCC-57 was determined to have a large impact on the CNN model that determined the sample to be replayed .",
      "There are three distinct microphone signatures . There are three distinct microphone signatures .",
      "There are three distinct microphone signatures ."
    ],
    "new_mr": "<inform> inform ( <classification> classification: [ spoof ], <edit_type> edit type: [ multi_microphone ], <mic_quantity> mic quantity: [ 3 ]> )"
  },
  {
    "mr": "inform(response[Yes], interpreter[shap], important[PSRCC-5], classification[replayed], shap_value[-0.3337])",
    "ref": [
      "Yes , the recording is fake .",
      " Y, PSRCC-5, which a shap value of -0.3337, was used to detect the sample as replayed .",
      " Yes, which a shap value of -0.3337, was used to detect the sample as replayed .",
      " Yes, PSRCC-5, which a s value of -0.3337, was used to detect the sample as replayed .",
      "Yes , the recording is fake .  Yes, PSRCC-5, which a shap value of -0.3337, was used to detect the sample as replayed .",
      " Yes, PSRCC-5, which a PSRCC-5 value of -0.3337, was used to detect the sample as replayed .",
      " Yes, PSRCC-5, which a shap value of -, was used to detect the sample as replayed .",
      " Yes, -0.3337, which a shap value of -0.3337, was used to detect the sample as replayed .",
      " Yes, PSRCC-5, which a shap value of Yes, was used to detect the sample as replayed .",
      " Yes, PSRCC-5, which a shap value of -0.3337.",
      " Yes, PSRCC-5, which a shap value of -0.3337, was used to detect the sample as replayed ."
    ],
    "new_mr": "<inform> inform ( <response> response: [ Yes ], <interpreter> interpreter: [ shap ], <important> important: [ PSRCC-5 ], <classification> classification: [ replayed ], <shap_value> shap value: [ -0.3337 ]> )"
  },
  {
    "mr": "inform(extracted[LFCC], model[CNN], important[LFCC-3], classification[bonafide])",
    "ref": [
      " the audio sample had LFCC features extracted and LFCC-3 was determined to have a large impact on the CNN model that determined the sample to be b .",
      " the audio sample had LFCC features extracted and LFCC was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      "the audio sample had LFCC features extracted and LFCC-3 was determined to have a large impact on the CNN model that determined the sample to be bonafide .  the audio sample had LFCC features extracted and LFCC-3 was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      " the audio sample had LFCC features extracted and LFCC-3 was determined to have a large impact on the CNN model that determined the sample to be LFCC-3 .",
      "Yes, MSRCC-7, which a shap value of -0.2973, was used to detect the sample as bonafide .  the audio sample had LFCC features extracted and LFCC-3 was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      " the audio sample had LFC features extracted and LFC-3 was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      " the audio sample had bonafide features extracted and bonafide-3 was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      "Yes, MSRCC-7, which a shap value of -0.2973, was used to detect the sample as bonafide .",
      " the audio sample had LFCC features extracted and LFCC-3 was determined to have a large impact on the LFCC-3 model that determined the sample to be bonafide .",
      " the audio sample had LFCC features extracted and LFCC-3 was determined to have a large impact on the CN model that determined the sample to be bonafide .",
      " the audio sample had LFCC features extracted and LFCC-3 was determined to have a large impact on the CNN model that determined the sample to be bonafide ."
    ],
    "new_mr": "<inform> inform ( <extracted> extracted: [ LFCC ], <model> model: [ CNN ], <important> important: [ LFCC-3 ], <classification> classification: [ bonafide ]> )"
  },
  {
    "mr": "inform(response[yes], speaker_id[2], feature[LFCC-29], interpreter[shap], shap_value[-0.143])",
    "ref": [
      "Yes, person 7 was detected by PSRCC-1 with a shap value of 0.6359 .  Yes, LFCC-29, which a shap value of -0.143, was used to detect the id of speaker 2 for the audio sample .",
      " Yes, LFCC-29, which a LFCC-29 value of -0.143, was used to detect the id of speaker 2 for the audio sample .",
      "Yes, person 7 was detected by PSRCC-1 with a shap value of 0.6359 .",
      " Yes, LFCC-29, was used to detect the id of speaker 2 for the audio sample .",
      " Yes, LFCC-29, which a shap value of , was used to detect the id of speaker 2 for the audio sample .",
      " Yes, LFCC-shap9, which a shap value of -0.143, was used to detect the id of speaker shap for the audio sample .",
      " Yes, LFCC-29.143, was used to detect the id of speaker 2 for the audio sample .",
      " Yes, 2, which a shap value of -0.143, was used to detect the id of speaker 2 for the audio sample .",
      " Yes.143, was used to detect the id of speaker 2 for the audio sample .",
      " Yes, LFCC-2, which a shap value of -0.143, was used to detect the id of speaker 2 for the audio sample .",
      " Yes, LFCC-29, which a shap value of -0.143, was used to detect the id of speaker 2 for the audio sample ."
    ],
    "new_mr": "<inform> inform ( <response> response: [ yes ], <speaker_id> speaker id: [ 2 ], <feature> feature: [ LFCC-29 ], <interpreter> interpreter: [ shap ], <shap_value> shap value: [ -0.143 ]> )"
  },
  {
    "mr": "inform(interpreter[shap], important[MSRCC-11], shap_value[0.9009])",
    "ref": [
      " shap determined that the 0.9009 feature was one of the more important features by assigning it a value of 0.9009 .",
      " shap determined that the MSRCC-11 feature was one of the more important features by assigning it a value of MSRCC-11 .",
      "shap determined that the MSRCC-11 feature was one of the more important features by assigning it a value of 0.9009 .  shap determined that the MSRCC-11 feature was one of the more important features by assigning it a value of 0.9009 .",
      "the audio sample had MSRCC features extracted and MSRCC-5 was determined to have a large impact on the CNN model that determined the sample to be replayed .",
      " s determined that the MSRCC-11 feature was one of the more important features by assigning it a value of 0.9009 .",
      " MSRCC-11 determined that the MSRCC-11 feature was one of the more important features by assigning it a value of 0.9009 .",
      " shap determined that the MSRCC-11 feature was one of the more important features by assigning it a value of  .",
      "the audio sample had MSRCC features extracted and MSRCC-5 was determined to have a large impact on the CNN model that determined the sample to be replayed .  shap determined that the MSRCC-11 feature was one of the more important features by assigning it a value of 0.9009 .",
      " shap determined that the M feature was one of the more important features by assigning it a value of 0.9009 .",
      " shap determined that the 0.9009 feature was one of the more important features by assigning it a value of 0.9009 .",
      " shap determined that the MSRCC-11 feature was one of the more important features by assigning it a value of 0.9009 ."
    ],
    "new_mr": "<inform> inform ( <interpreter> interpreter: [ shap ], <important> important: [ MSRCC-11 ], <shap_value> shap value: [ 0.9009 ]> )"
  },
  {
    "mr": "inform(model[SVM], task[classification])",
    "ref": [
      "The recording was passed to a  model for classification .",
      "The recording was passed to a SVM model for classification . The recording was passed to a SVM model for classification .",
      "The recording was passed to a SVM model for SVM .",
      "The recording was passed to a classification model for classification .",
      "The recording was passed to a SVM model for classificatio .",
      "person 4 was detected as the primary speaker of the audio sample . The recording was passed to a SVM model for classification .",
      "person 4 was detected as the primary speaker of the audio sample .",
      "The recording was passed to a  model for classification .",
      "The recording was passed to a SVM model for classification . The recording was passed to a SVM model for classification .",
      "The recording was passed to a SVM model for SVM .",
      "The recording was passed to a SVM model for classification ."
    ],
    "new_mr": "<inform> inform ( <model> model: [ SVM ], <task> task: [ classification ]> )"
  },
  {
    "mr": "inform(interpreter[shap], important[LFCC-52], shap_value[-0.7935])",
    "ref": [
      "  determined that the LFCC-52 feature was one of the more important features by assigning it a value of -0.7935 .",
      " -0.7935 determined that the LFCC-52 feature was one of the more important features by assigning it a value of -0.7935 .",
      " shap determined that the LFCC-52 feature was one of the more important features by assigning it a value of shap .",
      " shap determined that the  feature was one of the more important features by assigning it a value of -0.7935 .",
      " shap determined that the LFCC-52 feature was one of the more important features by assigning it a value of -0.793 .",
      "shap determined that the LFCC-52 feature was one of the more important features by assigning it a value of -0.7935 .  shap determined that the LFCC-52 feature was one of the more important features by assigning it a value of -0.7935 .",
      "Yes, person 4 was detected by LFCC-47 with a shap value of -0.8006 .",
      " shap determined that the shap feature was one of the more important features by assigning it a value of -0.7935 .",
      "Yes, person 4 was detected by LFCC-47 with a shap value of -0.8006 .  shap determined that the LFCC-52 feature was one of the more important features by assigning it a value of -0.7935 .",
      "  determined that the LFCC-52 feature was one of the more important features by assigning it a value of -0.7935 .",
      " shap determined that the LFCC-52 feature was one of the more important features by assigning it a value of -0.7935 ."
    ],
    "new_mr": "<inform> inform ( <interpreter> interpreter: [ shap ], <important> important: [ LFCC-52 ], <shap_value> shap value: [ -0.7935 ]> )"
  },
  {
    "mr": "inform(response[Yes], interpreter[shap], important[MFCC-10], classification[replayed], shap_value[-0.6103])",
    "ref": [
      " Yes, MFCC-10, which a shap value of -0, was used to detect the sample as replayed .",
      " Yes, MFCC-10, which a shap value of -0.6103, was used to detect the sample as -0.6103 .",
      " Yes, MFCC-10, which a replayed value of -0.6103, was used to detect the sample as replayed .",
      " Yes, which a shap value of -0.6103, was used to detect the sample as replayed .",
      " Yes, MFCC-10, which a shap value of -0.6103.",
      " Ye, MFCC-10, which a shap value of -0.6103, was used to detect the sample as replayed .",
      "Yes, MFCC-10, which a shap value of -0.6103, was used to detect the sample as replayed .  Yes, MFCC-10, which a shap value of -0.6103, was used to detect the sample as replayed .",
      " Yes.6103, was used to detect the sample as replayed .",
      "It appears that part of the audio was sped up .  Yes, MFCC-10, which a shap value of -0.6103, was used to detect the sample as replayed .",
      "It appears that part of the audio was sped up .",
      " Yes, MFCC-10, which a shap value of -0.6103, was used to detect the sample as replayed ."
    ],
    "new_mr": "<inform> inform ( <response> response: [ Yes ], <interpreter> interpreter: [ shap ], <important> important: [ MFCC-10 ], <classification> classification: [ replayed ], <shap_value> shap value: [ -0.6103 ]> )"
  },
  {
    "mr": "inform(classification[spoof], edit_type[conversion])",
    "ref": [
      "It appears the audio sample was converted . It appears the audio sample was converted .",
      "Yes, LFCC-31, which a shap value of -0.0844, was used to detect the sample as replayed . It appears the audio sample was converted .",
      "Yes, LFCC-31, which a shap value of -0.0844, was used to detect the sample as replayed .",
      "It appears the audio sample was converted . It appears the audio sample was converted .",
      "Yes, LFCC-31, which a shap value of -0.0844, was used to detect the sample as replayed . It appears the audio sample was converted .",
      "Yes, LFCC-31, which a shap value of -0.0844, was used to detect the sample as replayed .",
      "It appears the audio sample was converted . It appears the audio sample was converted .",
      "Yes, LFCC-31, which a shap value of -0.0844, was used to detect the sample as replayed . It appears the audio sample was converted .",
      "Yes, LFCC-31, which a shap value of -0.0844, was used to detect the sample as replayed .",
      "It appears the audio sample was converted . It appears the audio sample was converted .",
      "It appears the audio sample was converted .  "
    ],
    "new_mr": "<inform> inform ( <classification> classification: [ spoof ], <edit_type> edit type: [ conversion ]> )"
  },
  {
    "mr": "inform(interpreter[shap], important[LFCC-53], shap_value[-0.8942])",
    "ref": [
      " shap determined that the LFCC-53 feature was one of the more important features by assigning it a value of LFCC-53 .",
      "shap determined that the LFCC-53 feature was one of the more important features by assigning it a value of -0.8942 .  shap determined that the LFCC-53 feature was one of the more important features by assigning it a value of -0.8942 .",
      " shap determined that the LF feature was one of the more important features by assigning it a value of -0.8942 .",
      " sh determined that the LFCC-53 feature was one of the more important features by assigning it a value of -0.8942 .",
      " shap determined that the LFCC-53 feature was one of the more important features by assigning it a value of -0. .",
      " -0.8942 determined that the LFCC-53 feature was one of the more important features by assigning it a value of -0.8942 .",
      "Yes, MSRCC-5, which a shap value of 0.5221, was used to detect the id of speaker 3 for the audio sample .",
      "Yes, MSRCC-5, which a shap value of 0.5221, was used to detect the id of speaker 3 for the audio sample .  shap determined that the LFCC-53 feature was one of the more important features by assigning it a value of -0.8942 .",
      " shap determined that the -0.8942 feature was one of the more important features by assigning it a value of -0.8942 .",
      " shap determined that the LFCC-53 feature was one of the more important features by assigning it a value of LFCC-53 .",
      " shap determined that the LFCC-53 feature was one of the more important features by assigning it a value of -0.8942 ."
    ],
    "new_mr": "<inform> inform ( <interpreter> interpreter: [ shap ], <important> important: [ LFCC-53 ], <shap_value> shap value: [ -0.8942 ]> )"
  },
  {
    "mr": "inform(classification[spoof], known_mic_signature[dynamic])",
    "ref": [
      "Dynamic microphones were used the most . Dynamic microphones were used the most .",
      "person 4 spoke the audio sample . Dynamic microphones were used the most .",
      "person 4 spoke the audio sample .",
      "Dynamic microphones were used the most . Dynamic microphones were used the most .",
      "person 4 spoke the audio sample . Dynamic microphones were used the most .",
      "person 4 spoke the audio sample .",
      "Dynamic microphones were used the most . Dynamic microphones were used the most .",
      "person 4 spoke the audio sample . Dynamic microphones were used the most .",
      "person 4 spoke the audio sample .",
      "Dynamic microphones were used the most . Dynamic microphones were used the most .",
      "Dynamic microphones were used the most ."
    ],
    "new_mr": "<inform> inform ( <classification> classification: [ spoof ], <known_mic_signature> known mic signature: [ dynamic ]> )"
  },
  {
    "mr": "inform(interpreter[shap], important[PSRCC-9], shap_value[0.0969])",
    "ref": [
      " s determined that the PSRCC-9 feature was one of the more important features by assigning it a value of 0.0969 .",
      "shap determined that the PSRCC-9 feature was one of the more important features by assigning it a value of 0.0969 .  shap determined that the PSRCC-9 feature was one of the more important features by assigning it a value of 0.0969 .",
      " shap determined that the PSRC feature was one of the more important features by assigning it a value of 0.0969 .",
      " shap determined that the PSRCC-9 feature was one of the more important features by assigning it a value of PSRCC-9 .",
      " shap determined that the shap feature was one of the more important features by assigning it a value of 0.0969 .",
      " shap determined that the PSRCC-9 feature was one of the more important features by assigning it a value of  .",
      "Other samples show the person speaks at a different speed .",
      "Other samples show the person speaks at a different speed .  shap determined that the PSRCC-9 feature was one of the more important features by assigning it a value of 0.0969 .",
      " PSRCC-9 determined that the PSRCC-9 feature was one of the more important features by assigning it a value of 0.0969 .",
      " s determined that the PSRCC-9 feature was one of the more important features by assigning it a value of 0.0969 .",
      " shap determined that the PSRCC-9 feature was one of the more important features by assigning it a value of 0.0969 ."
    ],
    "new_mr": "<inform> inform ( <interpreter> interpreter: [ shap ], <important> important: [ PSRCC-9 ], <shap_value> shap value: [ 0.0969 ]> )"
  },
  {
    "mr": "inform(classification[spoof], edit_type[synthetic],classified_by[feature])",
    "ref": [
      "SHAP determined that CQCC-6, MFCC-0, LFCC-5.",
      "SHAP determined that CQCC-6, MFCC-0.",
      "SHAP determined that CQCC-6, MFCC-0, LFCC-5, CQCC-0 had the highest impact on classification . SHAP determined that CQCC-6, MFCC-0, LFCC-5, CQCC-0 had the highest impact on classification .",
      "SHAP determined that CQCC-6, LFCC-5, CQCC-0 had the highest impact on classification .",
      "shap determined that the LFCC-34 feature was one of the more important features by assigning it a value of -0.9876 . SHAP determined that CQCC-6, MFCC-0, LFCC-5, CQCC-0 had the highest impact on classification .",
      "SHAP determined that CQCC-6.",
      "SHAP determined that CQCC-6, MFCC-0, CQCC-0 had the highest impact on classification .",
      "shap determined that the LFCC-34 feature was one of the more important features by assigning it a value of -0.9876 .",
      "SHAP determined that CQCC-6, MFCC-0, LFCC-5.",
      "SHAP determined that CQCC-6, MFCC-0.",
      "SHAP determined that CQCC-6, MFCC-0, LFCC-5, CQCC-0 had the highest impact on classification ."
    ],
    "new_mr": "<inform> inform ( <classification> classification: [ spoof ], <edit_type> edit type: [ synthetic ]> )"
  },
  {
    "mr": "inform(response[yes], speaker_id[2], feature[LFCC-8], interpreter[shap], shap_value[-0.89])",
    "ref": [
      "Yes, person 2 was detected by LFCC-8 with a shap value of -0.89 .  Yes, person 2 was detected by LFCC-8 with a shap value of -0.89 .",
      " Yes, person 2 was detected by LFCC-8 with a  value of -0.89 .",
      " Yes, person 2 was detected by yes with a shap value of -0.89 .",
      " Yes, person LFCC-8 was detected by LFCC-8 with a shap value of -0.89 .",
      " Yes, person 2 was detected by LFCC-8 with a shap value of LFCC-8 .",
      " Yes, person 2 was detected by LFC with a shap value of -0.89 .",
      " Yes, person 2 was detected by LFCC-8 with a shap value of -0.8 .",
      " Yes, person 2 was detected by LFCC-8 with a 2 value of -0.89 .",
      "The audio is not converted .",
      " Yes, person  was detected by LFCC-8 with a shap value of -0.89 .",
      " Yes, person 2 was detected by LFCC-8 with a shap value of -0.89 ."
    ],
    "new_mr": "<inform> inform ( <response> response: [ yes ], <speaker_id> speaker id: [ 2 ], <feature> feature: [ LFCC-8 ], <interpreter> interpreter: [ shap ], <shap_value> shap value: [ -0.89 ]> )"
  },
  {
    "mr": "inform(extracted[MSRCC], model[CNN], important[MSRCC-12], classification[replayed])",
    "ref": [
      "shap determined that the MFCC-6 feature was one of the more important features by assigning it a value of 0.7385 .  the audio sample had MSRCC features extracted and MSRCC-12 was determined to have a large impact on the CNN model that determined the sample to be replayed .",
      " the audio sample had MSRCC-12 features extracted and MSRCC-12-12 was determined to have a large impact on the CNN model that determined the sample to be replayed .",
      "the audio sample had MSRCC features extracted and MSRCC-12 was determined to have a large impact on the CNN model that determined the sample to be replayed .  the audio sample had MSRCC features extracted and MSRCC-12 was determined to have a large impact on the CNN model that determined the sample to be replayed .",
      " the audio sample had MSRCC features extracted and MSRCC-12 was determined to have a large impact on the CNN model that determined the sample to be rep .",
      "shap determined that the MFCC-6 feature was one of the more important features by assigning it a value of 0.7385 .",
      " the audio sample had MS features extracted and MS-12 was determined to have a large impact on the CNN model that determined the sample to be replayed .",
      " the audio sample had MSRCC features extracted and MSR was determined to have a large impact on the CNN model that determined the sample to be replayed .",
      " the audio sample had MSRCC features extracted and MSRCC was determined to have a large impact on the CNN model that determined the sample to be replayed .",
      " the audio sample had MSRCC features extracted and MSRCC-12 was determined to have a large impact on the replayed model that determined the sample to be replayed .",
      " the audio sample had MSRCC features extracted and MSRCC-12 was determined to have a large impact on the CN model that determined the sample to be replayed .",
      " the audio sample had MSRCC features extracted and MSRCC-12 was determined to have a large impact on the CNN model that determined the sample to be replayed ."
    ],
    "new_mr": "<inform> inform ( <extracted> extracted: [ MSRCC ], <model> model: [ CNN ], <important> important: [ MSRCC-12 ], <classification> classification: [ replayed ]> )"
  },
  {
    "mr": "inform(response[yes], speaker_id[3], feature[MFCC-22], interpreter[shap], shap_value[-0.7096])",
    "ref": [
      " Yes.7096 .",
      " Yes, person 3 was detected by MFCC-22 with a  value of -0.7096 .",
      " Yes, person 3 was detected by MFCC-22 with a shap value of shap .",
      "Yes, person 3 was detected by MFCC-22 with a shap value of -0.7096 .  Yes, person 3 was detected by MFCC-22 with a shap value of -0.7096 .",
      " Yes, person yes was detected by MFCC-22 with a shap value of -0.7096 .",
      " Yes, person 3 was detected by MFCC with a shap value of -0.7096 .",
      "Yes, MFCC-10, which a shap value of 0.5373, was used to detect the sample as bonafide .  Yes, person 3 was detected by MFCC-22 with a shap value of -0.7096 .",
      " Yes, person  was detected by MFCC-22 with a shap value of -0.7096 .",
      " Yes, person 3 was detected by MFCC-22 with a shap value of -0.70 .",
      " Yes, person 3 was detected by 3 with a shap value of -0.7096 .",
      " Yes, person 3 was detected by MFCC-22 with a shap value of -0.7096 ."
    ],
    "new_mr": "<inform> inform ( <response> response: [ yes ], <speaker_id> speaker id: [ 3 ], <feature> feature: [ MFCC-22 ], <interpreter> interpreter: [ shap ], <shap_value> shap value: [ -0.7096 ]> )"
  },
  {
    "mr": "inform(response[No], classification[spoofed], spoof_type[replayed])",
    "ref": [
      "No, the  recording was not a replayed recording .",
      "No, the spoofed recording was not a replayed recording . No, the spoofed recording was not a replayed recording .",
      "No.",
      "No, the spoofed recording was a replayed recording .",
      "Yes, MFCC-22, which a shap value of 0.1394, was used to detect the id of speaker 7 for the audio sample . No, the spoofed recording was not a replayed recording .",
      "No, the replayed recording was not a replayed recording .",
      "Yes, MFCC-22, which a shap value of 0.1394, was used to detect the id of speaker 7 for the audio sample .",
      "spoofed, the spoofed recording was not a replayed recording .",
      "No, the spoofed recording was not a spoofed recording .",
      ", the spoofed recording was not a replayed recording .",
      "No, the spoofed recording was not a replayed recording ."
    ],
    "new_mr": "<inform> inform ( <response> response: [ No ], <classification> classification: [ spoofed ], <spoof_type> spoof type: [ replayed ]> )"
  },
  {
    "mr": "inform(response[yes], speaker_id[1], feature[MSRCC-11], interpreter[shap], shap_value[0.2606])",
    "ref": [
      "Yes, MSRCC-11, which a shap value of 0.2606, was used to detect the id of speaker 1 for the audio sample .  Yes, MSRCC-11, which a shap value of 0.2606, was used to detect the id of speaker 1 for the audio sample .",
      "Yes, LFCC-29, which a shap value of -0.143, was used to detect the id of speaker 2 for the audio sample .  Yes, MSRCC-11, which a shap value of 0.2606, was used to detect the id of speaker 1 for the audio sample .",
      " Yes, MSRCC-11, which a 0.2606 value of 0.2606, was used to detect the id of speaker 1 for the audio sample .",
      " Yes, which a shap value of 0.2606, was used to detect the id of speaker 1 for the audio sample .",
      " Yes, MSRCC-MSRCC-11MSRCC-11, which a shap value of 0.2606, was used to detect the id of speaker MSRCC-11 for the audio sample .",
      " Yes, MSRCC-11, which a sh value of 0.2606, was used to detect the id of speaker 1 for the audio sample .",
      " Yes, MSRCC-11, which a shap value of 1, was used to detect the id of speaker 1 for the audio sample .",
      " Yes, MSRCC-11.2606, was used to detect the id of speaker 1 for the audio sample .",
      " Yes.2606, was used to detect the id of speaker 1 for the audio sample .",
      " Yes, MSRCC, which a shap value of 0.2606, was used to detect the id of speaker 1 for the audio sample .",
      " Yes, MSRCC-11, which a shap value of 0.2606, was used to detect the id of speaker 1 for the audio sample ."
    ],
    "new_mr": "<inform> inform ( <response> response: [ yes ], <speaker_id> speaker id: [ 1 ], <feature> feature: [ MSRCC-11 ], <interpreter> interpreter: [ shap ], <shap_value> shap value: [ 0.2606 ]> )"
  },
  {
    "mr": "inform(response[Yes], interpreter[shap], important[MFCC-33], classification[bonafide], shap_value[-0.0018])",
    "ref": [
      " Yes, MFCC-33, which a shap value of -0.0018, was used to detect the sample as bon .",
      " Yes, MF, which a shap value of -0.0018, was used to detect the sample as bonafide .",
      " Y, MFCC-33, which a shap value of -0.0018, was used to detect the sample as bonafide .",
      " Yes, MFCC-33, which a shap value of -0.0018, was used to detect the sample as -0.0018 .",
      " Yes, MFCC-33, which a shap value of bonafide, was used to detect the sample as bonafide .",
      " Yes, which a shap value of -0.0018, was used to detect the sample as bonafide .",
      " Yes, MFCC-33, which a shap value of -0.0018.",
      " Yes, MFCC-33, which a shap value of -0.00, was used to detect the sample as bonafide .",
      " Yes, MFCC-33, which a sh value of -0.0018, was used to detect the sample as bonafide .",
      " Yes, MFCC-33, which a -0.0018 value of -0.0018, was used to detect the sample as bonafide .",
      " Yes, MFCC-33, which a shap value of -0.0018, was used to detect the sample as bonafide ."
    ],
    "new_mr": "<inform> inform ( <response> response: [ Yes ], <interpreter> interpreter: [ shap ], <important> important: [ MFCC-33 ], <classification> classification: [ bonafide ], <shap_value> shap value: [ -0.0018 ]> )"
  },
  {
    "mr": "inform(interpreter[shap], important[MFCC-9], shap_value[-0.6735])",
    "ref": [
      " shap determined that the -0.6735 feature was one of the more important features by assigning it a value of -0.6735 .",
      " s determined that the MFCC-9 feature was one of the more important features by assigning it a value of -0.6735 .",
      "shap determined that the MFCC-9 feature was one of the more important features by assigning it a value of -0.6735 .  shap determined that the MFCC-9 feature was one of the more important features by assigning it a value of -0.6735 .",
      " shap determined that the MFCC-9 feature was one of the more important features by assigning it a value of -0. .",
      "Yes, LFCC-49, which a shap value of -0.9585, was used to detect the sample as bonafide .",
      " MFCC-9 determined that the MFCC-9 feature was one of the more important features by assigning it a value of -0.6735 .",
      " shap determined that the M feature was one of the more important features by assigning it a value of -0.6735 .",
      " shap determined that the MFCC-9 feature was one of the more important features by assigning it a value of shap .",
      "Yes, LFCC-49, which a shap value of -0.9585, was used to detect the sample as bonafide .  shap determined that the MFCC-9 feature was one of the more important features by assigning it a value of -0.6735 .",
      " shap determined that the -0.6735 feature was one of the more important features by assigning it a value of -0.6735 .",
      " shap determined that the MFCC-9 feature was one of the more important features by assigning it a value of -0.6735 ."
    ],
    "new_mr": "<inform> inform ( <interpreter> interpreter: [ shap ], <important> important: [ MFCC-9 ], <shap_value> shap value: [ -0.6735 ]> )"
  },
  {
    "mr": "inform(classification[spoof], edit_type[computer])",
    "ref": [
      "Yes, person 1 was detected by MFCC-38 with a shap value of 0.6638 . It looks like the audio was edited using software .",
      "It looks like the audio was edited using software . It looks like the audio was edited using software .",
      "Yes, person 1 was detected by MFCC-38 with a shap value of 0.6638 .",
      "Yes, person 1 was detected by MFCC-38 with a shap value of 0.6638 . It looks like the audio was edited using software .",
      "It looks like the audio was edited using software . It looks like the audio was edited using software .",
      "Yes, person 1 was detected by MFCC-38 with a shap value of 0.6638 .",
      "Yes, person 1 was detected by MFCC-38 with a shap value of 0.6638 . It looks like the audio was edited using software .",
      "It looks like the audio was edited using software . It looks like the audio was edited using software .",
      "Yes, person 1 was detected by MFCC-38 with a shap value of 0.6638 .",
      "Yes, person 1 was detected by MFCC-38 with a shap value of 0.6638 . It looks like the audio was edited using software .",
      "It looks like the audio was edited using software ."
    ],
    "new_mr": "<inform> inform ( <classification> classification: [ spoof ], <edit_type> edit type: [ computer ]> )"
  },
  {
    "mr": "inform(interpreter[shap], important[LFCC-9], shap_value[-0.1259])",
    "ref": [
      " LFCC-9 determined that the LFCC-9 feature was one of the more important features by assigning it a value of -0.1259 .",
      " shap determined that the LFCC-9 feature was one of the more important features by assigning it a value of shap .",
      " shap determined that the -0.1259 feature was one of the more important features by assigning it a value of -0.1259 .",
      "shap determined that the MFCC-20 feature was one of the more important features by assigning it a value of 0.3878 .",
      "  determined that the LFCC-9 feature was one of the more important features by assigning it a value of -0.1259 .",
      "shap determined that the MFCC-20 feature was one of the more important features by assigning it a value of 0.3878 .  shap determined that the LFCC-9 feature was one of the more important features by assigning it a value of -0.1259 .",
      " shap determined that the LFCC-9 feature was one of the more important features by assigning it a value of - .",
      " shap determined that the LF feature was one of the more important features by assigning it a value of -0.1259 .",
      "shap determined that the LFCC-9 feature was one of the more important features by assigning it a value of -0.1259 .  shap determined that the LFCC-9 feature was one of the more important features by assigning it a value of -0.1259 .",
      " LFCC-9 determined that the LFCC-9 feature was one of the more important features by assigning it a value of -0.1259 .",
      " shap determined that the LFCC-9 feature was one of the more important features by assigning it a value of -0.1259 ."
    ],
    "new_mr": "<inform> inform ( <interpreter> interpreter: [ shap ], <important> important: [ LFCC-9 ], <shap_value> shap value: [ -0.1259 ]> )"
  },
  {
    "mr": "inform(extracted[MFCC], extracted[GTCC], model[SVM], prupose[identification])",
    "ref": [
      " The audio sample had its GTCC, and MFCC features extracted which were passed to an SVM model for identificat . ",
      " The audio sample had its GTCC, and MFCC features extracted which were passed to an SVM model for SVM . ",
      " The audio sample had its GTCC, and MFCC features extracted which were passed to an GTCC model for identification . ",
      " The audio sample had its GTCC, and SVM features extracted which were passed to an SVM model for identification . ",
      " The audio sample had its GTCC. ",
      " The audio sample had its GTC, and MFCC features extracted which were passed to an SVM model for identification . ",
      " The audio sample had its GTCC, and M features extracted which were passed to an SVM model for identification . ",
      " The audio sample had its GTCC, and MFCC features extracted which were passed to an  model for identification . ",
      "The audio sample had its GTCC, and MFCC features extracted which were passed to an SVM model for identification .  The audio sample had its GTCC, and MFCC features extracted which were passed to an SVM model for identification .",
      "shap determined that the PSRCC-5 feature was one of the more important features by assigning it a value of -0.6687 .",
      " The audio sample had its GTCC, and MFCC features extracted which were passed to an SVM model for identification . "
    ],
    "new_mr": "<inform> inform ( <extracted> extracted: [ MFCC ], <extracted> extracted: [ GTCC ], <model> model: [ SVM ], <prupose> prupose: [ identification ]> )"
  },
  {
    "mr": "inform(response[yes], speaker_id[4], feature[PSRCC-6], interpreter[shap], shap_value[-0.7884])",
    "ref": [
      " Yes, shap, which a shap value of -0.7884, was used to detect the id of speaker 4 for the audio sample .",
      " Yes, PSRCC-6, which a shap value of -0.7884.",
      "Yes, MFCC-2, which a shap value of 0.1331, was used to detect the sample as replayed .  Yes, PSRCC-6, which a shap value of -0.7884, was used to detect the id of speaker 4 for the audio sample .",
      " Yes, PSRCC-6, which a shap value of -0., was used to detect the id of speaker 4 for the audio sample .",
      " Yes, which a shap value of -0.7884, was used to detect the id of speaker 4 for the audio sample .",
      "Yes, PSRCC-6, which a shap value of -0.7884, was used to detect the id of speaker 4 for the audio sample .  Yes, PSRCC-6, which a shap value of -0.7884, was used to detect the id of speaker 4 for the audio sample .",
      " Yes, PSRCC-6, which a shap value of 4, was used to detect the id of speaker 4 for the audio sample .",
      "Yes, MFCC-2, which a shap value of 0.1331, was used to detect the sample as replayed .",
      " Yes.7884, was used to detect the id of speaker 4 for the audio sample .",
      " Yes, PSRCC-6, which a shap value of -0.788, was used to detect the id of speaker  for the audio sample .",
      " Yes, PSRCC-6, which a shap value of -0.7884, was used to detect the id of speaker 4 for the audio sample ."
    ],
    "new_mr": "<inform> inform ( <response> response: [ yes ], <speaker_id> speaker id: [ 4 ], <feature> feature: [ PSRCC-6 ], <interpreter> interpreter: [ shap ], <shap_value> shap value: [ -0.7884 ]> )"
  },
  {
    "mr": "inform(extracted[LFCC], model[CNN], important[LFCC-39], classification[bonafide])",
    "ref": [
      " the audio sample had bonafide features extracted and bonafide-39 was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      "the audio sample had LFCC features extracted and LFCC-39 was determined to have a large impact on the CNN model that determined the sample to be bonafide .  the audio sample had LFCC features extracted and LFCC-39 was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      " the audio sample had LFCC features extracted and LFCC-39 was determined to have a large impact on the CNN model that determined the sample to be bon .",
      " the audio sample had L features extracted and L-39 was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      " the audio sample had LFCC features extracted and LFCC-39 was determined to have a large impact on the  model that determined the sample to be bonafide .",
      "The spoofed audio was not a Replayed sample .",
      " the audio sample had LFCC features extracted and L was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      " the audio sample had LFCC features extracted and LFCC-39 was determined to have a large impact on the LFCC-39 model that determined the sample to be bonafide .",
      "The spoofed audio was not a Replayed sample .  the audio sample had LFCC features extracted and LFCC-39 was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      " the audio sample had LFCC features extracted and LFCC-39 was determined to have a large impact on the CNN model that determined the sample to be LFCC .",
      " the audio sample had LFCC features extracted and LFCC-39 was determined to have a large impact on the CNN model that determined the sample to be bonafide ."
    ],
    "new_mr": "<inform> inform ( <extracted> extracted: [ LFCC ], <model> model: [ CNN ], <important> important: [ LFCC-39 ], <classification> classification: [ bonafide ]> )"
  },
  {
    "mr": "inform(response[No], classification[spoof], edit_type[multi_microphone], mic_quantity[>1])",
    "ref": [
      "spoof , the entire recording was made using multiple microphones . ",
      "N , the entire recording was made using multiple microphones . ",
      "No , the entire recording was made using multiple microphones . No , the entire recording was made using multiple microphones .",
      "No . ",
      "the audio sample was used in a SVM model tasked at detecting speaker id, determined to be 1 .",
      "the audio sample was used in a SVM model tasked at detecting speaker id, determined to be 1 . No , the entire recording was made using multiple microphones .",
      "spoof , the entire recording was made using multiple microphones . ",
      "N , the entire recording was made using multiple microphones . ",
      "No , the entire recording was made using multiple microphones . No , the entire recording was made using multiple microphones .",
      "No . ",
      "No , the entire recording was made using multiple microphones . "
    ],
    "new_mr": "<inform> inform ( <response> response: [ No ], <classification> classification: [ spoof ], <edit_type> edit type: [ multi_microphone ], <mic_quantity> mic quantity: [ >1 ]> )"
  },
  {
    "mr": "inform(extracted[PSRCC], model[CNN], important[PSRCC-5], classification[replayed])",
    "ref": [
      "the audio sample had PSRCC features extracted and PSRCC-5 was determined to have a large impact on the CNN model that determined the sample to be replayed .  the audio sample had PSRCC features extracted and PSRCC-5 was determined to have a large impact on the CNN model that determined the sample to be replayed .",
      " the audio sample had PSRCC features extracted and P was determined to have a large impact on the CNN model that determined the sample to be replayed .",
      " the audio sample had PSRCC features extracted and PSRCC-5 was determined to have a large impact on the C model that determined the sample to be replayed .",
      " the audio sample had PSRCC features extracted and PSRCC-5 was determined to have a large impact on the PSRCC-5 model that determined the sample to be replayed .",
      "Yes, person 5 was detected by GTCC-12 with a shap value of 0 .  the audio sample had PSRCC features extracted and PSRCC-5 was determined to have a large impact on the CNN model that determined the sample to be replayed .",
      " the audio sample had PSRCC features extracted and PSRCC-5 was determined to have a large impact on the CNN model that determined the sample to be replay .",
      " the audio sample had CNN features extracted and CNN-5 was determined to have a large impact on the CNN model that determined the sample to be replayed .",
      " the audio sample had P features extracted and P-5 was determined to have a large impact on the CNN model that determined the sample to be replayed .",
      "Yes, person 5 was detected by GTCC-12 with a shap value of 0 .",
      " the audio sample had PSRCC features extracted and PSRCC was determined to have a large impact on the CNN model that determined the sample to be replayed .",
      " the audio sample had PSRCC features extracted and PSRCC-5 was determined to have a large impact on the CNN model that determined the sample to be replayed ."
    ],
    "new_mr": "<inform> inform ( <extracted> extracted: [ PSRCC ], <model> model: [ CNN ], <important> important: [ PSRCC-5 ], <classification> classification: [ replayed ]> )"
  },
  {
    "mr": "inform(response[Yes], interpreter[shap], important[LFCC-2], classification[bonafide], shap_value[0.7662])",
    "ref": [
      "Yes, LFCC-52, which a shap value of -0.7766, was used to detect the id of speaker 1 for the audio sample .",
      " Yes, LFCC-2, which a sh value of 0.7662, was used to detect the sample as bonafide .",
      " Yes, which a shap value of 0.7662, was used to detect the sample as bonafide .",
      "Yes, LFCC-52, which a shap value of -0.7766, was used to detect the id of speaker 1 for the audio sample .  Yes, LFCC-2, which a shap value of 0.7662, was used to detect the sample as bonafide .",
      " Yes, LFCC-2, which a shap value of 0.7662.",
      " Yes, LFCC-2, which a shap value of 0.7662, was used to detect the sample as Yes .",
      " Yes, 0.7662, which a shap value of 0.7662, was used to detect the sample as bonafide .",
      " Y, LFCC-2, which a shap value of 0.7662, was used to detect the sample as bonafide .",
      " Yes, LFCC-2, which a bonafide value of 0.7662, was used to detect the sample as bonafide .",
      " Yes, LFCC-2.7662, was used to detect the sample as bonafide .",
      " Yes, LFCC-2, which a shap value of 0.7662, was used to detect the sample as bonafide ."
    ],
    "new_mr": "<inform> inform ( <response> response: [ Yes ], <interpreter> interpreter: [ shap ], <important> important: [ LFCC-2 ], <classification> classification: [ bonafide ], <shap_value> shap value: [ 0.7662 ]> )"
  },
  {
    "mr": "inform(response[Yes], interpreter[shap], important[MFCC-13], classification[replayed], shap_value[0.2494])",
    "ref": [
      " , MFCC-13, which a shap value of 0.2494, was used to detect the sample as replayed .",
      " Yes, which a shap value of 0.2494, was used to detect the sample as replayed .",
      " Yes, M, which a shap value of 0.2494, was used to detect the sample as replayed .",
      " Yes.2494, was used to detect the sample as replayed .",
      " Yes, MFCC-13, was used to detect the sample as replayed .",
      " Yes, Yes, which a shap value of 0.2494, was used to detect the sample as replayed .",
      " Yes, MFCC-13, which a shap value of 0.249, was used to detect the sample as replayed .",
      " Yes, MFCC-13.2494, was used to detect the sample as replayed .",
      " Yes, MFCC-13, which a s value of 0.2494, was used to detect the sample as replayed .",
      " Yes, MFCC-13, which a shap value of 0.2494, was used to detect the sample as replaye .",
      " Yes, MFCC-13, which a shap value of 0.2494, was used to detect the sample as replayed ."
    ],
    "new_mr": "<inform> inform ( <response> response: [ Yes ], <interpreter> interpreter: [ shap ], <important> important: [ MFCC-13 ], <classification> classification: [ replayed ], <shap_value> shap value: [ 0.2494 ]> )"
  },
  {
    "mr": "inform(interpreter[shap], important[MFCC-26], shap_value[0.3447])",
    "ref": [
      " shap determined that the MFCC-26 feature was one of the more important features by assigning it a value of MFCC-26 .",
      "Yes, person 3 was detected by MFCC-22 with a shap value of -0.7096 .",
      " shap determined that the  feature was one of the more important features by assigning it a value of 0.3447 .",
      "shap determined that the MFCC-26 feature was one of the more important features by assigning it a value of 0.3447 .  shap determined that the MFCC-26 feature was one of the more important features by assigning it a value of 0.3447 .",
      " shap determined that the 0.3447 feature was one of the more important features by assigning it a value of 0.3447 .",
      "  determined that the MFCC-26 feature was one of the more important features by assigning it a value of 0.3447 .",
      " shap determined that the MFCC-26 feature was one of the more important features by assigning it a value of 0 .",
      " 0.3447 determined that the MFCC-26 feature was one of the more important features by assigning it a value of 0.3447 .",
      "Yes, person 3 was detected by MFCC-22 with a shap value of -0.7096 .  shap determined that the MFCC-26 feature was one of the more important features by assigning it a value of 0.3447 .",
      " shap determined that the MFCC-26 feature was one of the more important features by assigning it a value of MFCC-26 .",
      " shap determined that the MFCC-26 feature was one of the more important features by assigning it a value of 0.3447 ."
    ],
    "new_mr": "<inform> inform ( <interpreter> interpreter: [ shap ], <important> important: [ MFCC-26 ], <shap_value> shap value: [ 0.3447 ]> )"
  },
  {
    "mr": "inform(response[yes], speaker_id[3], feature[LFCC-39], interpreter[shap], shap_value[-0.3915])",
    "ref": [
      "No , the entire recording was made using multiple microphones .",
      "Yes, person 3 was detected by LFCC-39 with a shap value of -0.3915 .  Yes, person 3 was detected by LFCC-39 with a shap value of -0.3915 .",
      "No , the entire recording was made using multiple microphones .  Yes, person 3 was detected by LFCC-39 with a shap value of -0.3915 .",
      " Yes, person 3 was detected by LFCC-39 with a yes value of -0.3915 .",
      " Yes, person  was detected by LFCC-9 with a shap value of -0.915 .",
      " Yes, person shap was detected by LFCC-shap9 with a shap value of -0.shap915 .",
      " Yes, person 3 was detected by shap with a shap value of -0.3915 .",
      " Yes, person 3 was detected by LFCC-39 with a shap value of  .",
      " Yes, person 3 was detected by LFCC-39 with a shap value of LFCC-39 .",
      " Yes, person 3 was detected by LFCC-39 with a s value of -0.3915 .",
      " Yes, person 3 was detected by LFCC-39 with a shap value of -0.3915 ."
    ],
    "new_mr": "<inform> inform ( <response> response: [ yes ], <speaker_id> speaker id: [ 3 ], <feature> feature: [ LFCC-39 ], <interpreter> interpreter: [ shap ], <shap_value> shap value: [ -0.3915 ]> )"
  },
  {
    "mr": "inform(extracted[MSRCC], model[CNN], important[MSRCC-1], classification[replayed])",
    "ref": [
      " the audio sample had MSRCC features extracted and MSRCC-1 was determined to have a large impact on the CN model that determined the sample to be replayed .",
      " the audio sample had MSRCC features extracted and MSRCC was determined to have a large impact on the CNN model that determined the sample to be replayed .",
      " the audio sample had MSRCC features extracted and MSRCC-1 was determined to have a large impact on the CNN model that determined the sample to be repla .",
      "Yes, person 4 was detected by LFCC-47 with a shap value of -0.8006 .",
      "the audio sample had MSRCC features extracted and MSRCC-1 was determined to have a large impact on the CNN model that determined the sample to be replayed .  the audio sample had MSRCC features extracted and MSRCC-1 was determined to have a large impact on the CNN model that determined the sample to be replayed .",
      "Yes, person 4 was detected by LFCC-47 with a shap value of -0.8006 .  the audio sample had MSRCC features extracted and MSRCC-1 was determined to have a large impact on the CNN model that determined the sample to be replayed .",
      " the audio sample had MSRCC features extracted and MSRCC-1 was determined to have a large impact on the replayed model that determined the sample to be replayed .",
      " the audio sample had MSRCC-1 features extracted and MSRCC-1-1 was determined to have a large impact on the CNN model that determined the sample to be replayed .",
      " the audio sample had MSRCC features extracted and MSRCC-1 was determined to have a large impact on the CNN model that determined the sample to be MSRCC .",
      " the audio sample had MS features extracted and MS-1 was determined to have a large impact on the CNN model that determined the sample to be replayed .",
      " the audio sample had MSRCC features extracted and MSRCC-1 was determined to have a large impact on the CNN model that determined the sample to be replayed ."
    ],
    "new_mr": "<inform> inform ( <extracted> extracted: [ MSRCC ], <model> model: [ CNN ], <important> important: [ MSRCC-1 ], <classification> classification: [ replayed ]> )"
  },
  {
    "mr": "inform(response[Yes], interpreter[shap], important[MFCC-35], classification[replayed], shap_value[0.8008])",
    "ref": [
      " Yes, MFCC-35, was used to detect the sample as replayed .",
      " Yes, MFCC-35, which a sh value of 0.8008, was used to detect the sample as replayed .",
      "Yes, person 6 was detected by PSRCC-10 with a shap value of -0.4226 .  Yes, MFCC-35, which a shap value of 0.8008, was used to detect the sample as replayed .",
      " Yes, MFCC-35, which a shap value of 0.8008.",
      " replayed, MFCC-35, which a shap value of 0.8008, was used to detect the sample as replayed .",
      " Yes, MFCC-35, which a shap value of 0.8008, was used to detect the sample as re .",
      " Yes, MFCC-35, which a replayed value of 0.8008, was used to detect the sample as replayed .",
      " Yes.8008, was used to detect the sample as replayed .",
      " Yes, MFCC-35, which a shap value of MFCC-35, was used to detect the sample as replayed .",
      " Yes, MFCC-35.8008, was used to detect the sample as replayed .",
      " Yes, MFCC-35, which a shap value of 0.8008, was used to detect the sample as replayed ."
    ],
    "new_mr": "<inform> inform ( <response> response: [ Yes ], <interpreter> interpreter: [ shap ], <important> important: [ MFCC-35 ], <classification> classification: [ replayed ], <shap_value> shap value: [ 0.8008 ]> )"
  },
  {
    "mr": "inform(extracted[LFCC], model[CNN], important[LFCC-55], classification[bonafide])",
    "ref": [
      " the audio sample had LFCC features extracted and bonafide was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      " the audio sample had LFCC features extracted and LFC was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      " the audio sample had bonafide features extracted and bonafide-55 was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      " the audio sample had LFCC features extracted and LFCC-55 was determined to have a large impact on the LFCC-55 model that determined the sample to be bonafide .",
      " the audio sample had LFCC features extracted and LFCC-55 was determined to have a large impact on the CN model that determined the sample to be bonafide .",
      "shap determined that the LFCC-49 feature was one of the more important features by assigning it a value of -0.6011 .  the audio sample had LFCC features extracted and LFCC-55 was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      " the audio sample had LF features extracted and LF-55 was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      "the audio sample had LFCC features extracted and LFCC-55 was determined to have a large impact on the CNN model that determined the sample to be bonafide .  the audio sample had LFCC features extracted and LFCC-55 was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      "shap determined that the LFCC-49 feature was one of the more important features by assigning it a value of -0.6011 .",
      " the audio sample had LFCC features extracted and LFCC-55 was determined to have a large impact on the CNN model that determined the sample to be bona .",
      " the audio sample had LFCC features extracted and LFCC-55 was determined to have a large impact on the CNN model that determined the sample to be bonafide ."
    ],
    "new_mr": "<inform> inform ( <extracted> extracted: [ LFCC ], <model> model: [ CNN ], <important> important: [ LFCC-55 ], <classification> classification: [ bonafide ]> )"
  },
  {
    "mr": "inform(response[yes], speaker_id[3], feature[LFCC-11], interpreter[shap], shap_value[-0.3231])",
    "ref": [
      " Yes, LFCC-11, which a shap value of -0.32, was used to detect the id of speaker 3 for the audio sample .",
      " Yes, L, which a shap value of -0.3231, was used to detect the id of speaker 3 for the audio sample .",
      " Yes, which a shap value of -0.3231, was used to detect the id of speaker 3 for the audio sample .",
      " Yes, LFCC-11, which a sh value of -0.3231, was used to detect the id of speaker 3 for the audio sample .",
      " Yes, LFCC-11, which a shap value of -0.21, was used to detect the id of speaker  for the audio sample .",
      "Yes, MFCC-15, which a shap value of -0.7171, was used to detect the id of speaker 1 for the audio sample .",
      " Yes, shap, which a shap value of -0.3231, was used to detect the id of speaker 3 for the audio sample .",
      " Yes, LFCC-11, was used to detect the id of speaker 3 for the audio sample .",
      "Yes, LFCC-11, which a shap value of -0.3231, was used to detect the id of speaker 3 for the audio sample .  Yes, LFCC-11, which a shap value of -0.3231, was used to detect the id of speaker 3 for the audio sample .",
      " Yes, LFCC-11, which a shap value of -0.3231.",
      " Yes, LFCC-11, which a shap value of -0.3231, was used to detect the id of speaker 3 for the audio sample ."
    ],
    "new_mr": "<inform> inform ( <response> response: [ yes ], <speaker_id> speaker id: [ 3 ], <feature> feature: [ LFCC-11 ], <interpreter> interpreter: [ shap ], <shap_value> shap value: [ -0.3231 ]> )"
  },
  {
    "mr": "inform(interpreter[shap], important[GTCC-9], shap_value[0])",
    "ref": [
      "Yes, person 5 was detected by MFCC-19 with a shap value of -0.5025 .  shap determined that the GTCC-9 feature was one of the more important features by assigning it a value of 0 .",
      " shap determined that the 0 feature was one of the more important features by assigning it a value of 0 .",
      " s determined that the GTCC-9 feature was one of the more important features by assigning it a value of 0 .",
      " shap determined that the GTCC feature was one of the more important features by assigning it a value of 0 .",
      " shap determined that the GTCC-9 feature was one of the more important features by assigning it a value of  .",
      " 0 determined that the GTCC-9 feature was one of the more important features by assigning it a value of 0 .",
      "Yes, person 5 was detected by MFCC-19 with a shap value of -0.5025 .",
      "shap determined that the GTCC-9 feature was one of the more important features by assigning it a value of 0 .  shap determined that the GTCC-9 feature was one of the more important features by assigning it a value of 0 .",
      " shap determined that the GTCC-9 feature was one of the more important features by assigning it a value of GTCC-9 .",
      "Yes, person 5 was detected by MFCC-19 with a shap value of -0.5025 .  shap determined that the GTCC-9 feature was one of the more important features by assigning it a value of 0 .",
      " shap determined that the GTCC-9 feature was one of the more important features by assigning it a value of 0 ."
    ],
    "new_mr": "<inform> inform ( <interpreter> interpreter: [ shap ], <important> important: [ GTCC-9 ], <shap_value> shap value: [ 0 ]> )"
  },
  {
    "mr": "inform(classification[spoof], edit_type[multi_microphone], mic_quantity[2])",
    "ref": [
      "There were spoof microphones .",
      "There were 2 microphones . There were 2 microphones .",
      "The spoofed audio was not converted .",
      "The spoofed audio was not converted . There were 2 microphones .",
      "There were  microphones .",
      "There were spoof microphones .",
      "There were 2 microphones . There were 2 microphones .",
      "The spoofed audio was not converted .",
      "The spoofed audio was not converted . There were 2 microphones .",
      "There were  microphones .",
      "There were 2 microphones ."
    ],
    "new_mr": "<inform> inform ( <classification> classification: [ spoof ], <edit_type> edit type: [ multi_microphone ], <mic_quantity> mic quantity: [ 2 ]> )"
  },
  {
    "mr": "inform(response[yes], speaker_id[2], feature[MFCC-3], interpreter[shap], shap_value[-0.0673])",
    "ref": [
      " Yes, person 2 was detected by MFCC-3 with a shap value of 2 .",
      " Yes, person yes was detected by MFCC-3 with a shap value of -0.0673 .",
      " Yes.0673 .",
      " Yes, person 2 was detected by MFCC-3 with a yes value of -0.0673 .",
      " Yes, person 2 was detected by shap with a shap value of -0.0673 .",
      " Yes, person 2 was detected by MFCC-3 with a shap value of  .",
      "the audio sample had LFCC features extracted and LFCC-24 was determined to have a large impact on the CNN model that determined the sample to be replayed .",
      " Yes, person  was detected by MFCC-3 with a shap value of -0.0673 .",
      "Yes, person 2 was detected by MFCC-3 with a shap value of -0.0673 .  Yes, person 2 was detected by MFCC-3 with a shap value of -0.0673 .",
      " Yes, person 2 was detected by  with a shap value of -0.0673 .",
      " Yes, person 2 was detected by MFCC-3 with a shap value of -0.0673 ."
    ],
    "new_mr": "<inform> inform ( <response> response: [ yes ], <speaker_id> speaker id: [ 2 ], <feature> feature: [ MFCC-3 ], <interpreter> interpreter: [ shap ], <shap_value> shap value: [ -0.0673 ]> )"
  },
  {
    "mr": "inform(response[yes], speaker_id[4], feature[LFCC-48], interpreter[shap], shap_value[0.957])",
    "ref": [
      " Yes, LFCC-48, which a shap value of 0.957.",
      " Yes, LFCC-48, was used to detect the id of speaker 4 for the audio sample .",
      "Yes, LFCC-48, which a shap value of 0.957, was used to detect the id of speaker 4 for the audio sample .  Yes, LFCC-48, which a shap value of 0.957, was used to detect the id of speaker 4 for the audio sample .",
      " Yes, L, which a shap value of 0.957, was used to detect the id of speaker 4 for the audio sample .",
      "The signal is consistent with a cloned voice .",
      " Yes, LFCC-48, which a sh value of 0.957, was used to detect the id of speaker 4 for the audio sample .",
      " Yes, LFCC-48, which a shap value of 0, was used to detect the id of speaker 4 for the audio sample .",
      " Yes, LFCC-48, which a LFCC-48 value of 0.957, was used to detect the id of speaker 4 for the audio sample .",
      "The signal is consistent with a cloned voice .  Yes, LFCC-48, which a shap value of 0.957, was used to detect the id of speaker 4 for the audio sample .",
      " Yes, LFCC-48, which a shap value of shap, was used to detect the id of speaker 4 for the audio sample .",
      " Yes, LFCC-48, which a shap value of 0.957, was used to detect the id of speaker 4 for the audio sample ."
    ],
    "new_mr": "<inform> inform ( <response> response: [ yes ], <speaker_id> speaker id: [ 4 ], <feature> feature: [ LFCC-48 ], <interpreter> interpreter: [ shap ], <shap_value> shap value: [ 0.957 ]> )"
  },
  {
    "mr": "inform(interpreter[shap], important[LFCC-37], shap_value[0.4431])",
    "ref": [
      " shap determined that the LFCC- feature was one of the more important features by assigning it a value of 0.4431 .",
      " shap determined that the LFCC-37 feature was one of the more important features by assigning it a value of 0.44 .",
      "Yes, MFCC-38, which a shap value of -0.0316, was used to detect the sample as replayed .",
      " sh determined that the LFCC-37 feature was one of the more important features by assigning it a value of 0.4431 .",
      " shap determined that the shap feature was one of the more important features by assigning it a value of 0.4431 .",
      " shap determined that the LFCC-37 feature was one of the more important features by assigning it a value of shap .",
      " LFCC-37 determined that the LFCC-37 feature was one of the more important features by assigning it a value of 0.4431 .",
      "shap determined that the LFCC-37 feature was one of the more important features by assigning it a value of 0.4431 .  shap determined that the LFCC-37 feature was one of the more important features by assigning it a value of 0.4431 .",
      "Yes, MFCC-38, which a shap value of -0.0316, was used to detect the sample as replayed .  shap determined that the LFCC-37 feature was one of the more important features by assigning it a value of 0.4431 .",
      " shap determined that the LFCC- feature was one of the more important features by assigning it a value of 0.4431 .",
      " shap determined that the LFCC-37 feature was one of the more important features by assigning it a value of 0.4431 ."
    ],
    "new_mr": "<inform> inform ( <interpreter> interpreter: [ shap ], <important> important: [ LFCC-37 ], <shap_value> shap value: [ 0.4431 ]> )"
  },
  {
    "mr": "inform(response[Yes], classification[spoof], mic_type[mobile_phone], mic_type[computer])",
    "ref": [
      "the audio sample had LFCC features extracted and LFCC-35 was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      "computer , some of the recording was made with a mobile device and some with a computer . ",
      "Yes , some of the recording was made with a mobile device and some with a com . ",
      "the audio sample had LFCC features extracted and LFCC-35 was determined to have a large impact on the CNN model that determined the sample to be bonafide . Yes , some of the recording was made with a mobile device and some with a computer .",
      "Yes , some of the recording was made with a mobile device and some with a Yes . ",
      " , some of the recording was made with a mobile device and some with a computer . ",
      "Yes , some of the recording was made with a mobile device and some with a computer . Yes , some of the recording was made with a mobile device and some with a computer .",
      "Yes . ",
      "the audio sample had LFCC features extracted and LFCC-35 was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      "computer , some of the recording was made with a mobile device and some with a computer . ",
      "Yes , some of the recording was made with a mobile device and some with a computer . "
    ],
    "new_mr": "<inform> inform ( <response> response: [ Yes ], <classification> classification: [ spoof ], <mic_type> mic type: [ mobile_phone ], <mic_type> mic type: [ computer ]> )"
  },
  {
    "mr": "inform(classification[spoof], classified_by[feature])",
    "ref": [
      "SHAP determined that RFCC-4, MFCC-0, LFCC-2, MFCC-5 had the highest impact on classification .",
      "The audio sample was passed to a _model_type_ model for classification . The audio sample was passed to a _model_type_ model for classification .",
      "SHAP determined that RFCC-4, MFCC-0, LFCC-2, MFCC-5 had the highest impact on classification . The audio sample was passed to a _model_type_ model for classification .",
      "SHAP determined that RFCC-4, MFCC-0, LFCC-2, MFCC-5 had the highest impact on classification .",
      "The audio sample was passed to a _model_type_ model for classification . The audio sample was passed to a _model_type_ model for classification .",
      "SHAP determined that RFCC-4, MFCC-0, LFCC-2, MFCC-5 had the highest impact on classification . The audio sample was passed to a _model_type_ model for classification .",
      "SHAP determined that RFCC-4, MFCC-0, LFCC-2, MFCC-5 had the highest impact on classification .",
      "The audio sample was passed to a _model_type_ model for classification . The audio sample was passed to a _model_type_ model for classification .",
      "SHAP determined that RFCC-4, MFCC-0, LFCC-2, MFCC-5 had the highest impact on classification . The audio sample was passed to a _model_type_ model for classification .",
      "SHAP determined that RFCC-4, MFCC-0, LFCC-2, MFCC-5 had the highest impact on classification .",
      "The audio sample was passed to a _model_type_ model for classification ."
    ],
    "new_mr": "<inform> inform ( <classification> classification: [ spoof ], <classified_by> classified by: [ feature ]> )"
  },
  {
    "mr": "inform(response[yes], speaker_id[6], feature[LFCC-37], interpreter[shap], shap_value[0.1008])",
    "ref": [
      " Yes, person 6 was detected by LFCC-37 with a shap value of 0 .",
      "shap determined that the MFCC-0 feature was one of the more important features by assigning it a value of -0.3268 .  Yes, person 6 was detected by LFCC-37 with a shap value of 0.1008 .",
      " Yes, person 6 was detected by 0.1008 with a shap value of 0.1008 .",
      " Yes, person 6 was detected by LFCC-37 with a shap value of 6 .",
      "shap determined that the MFCC-0 feature was one of the more important features by assigning it a value of -0.3268 .",
      " Yes, person  was detected by LFCC-37 with a shap value of 0.1008 .",
      " Yes, person 6 was detected by LFCC-37 with a s value of 0.1008 .",
      " Yes, person yes was detected by LFCC-37 with a shap value of 0.1008 .",
      "Yes, person 6 was detected by LFCC-37 with a shap value of 0.1008 .  Yes, person 6 was detected by LFCC-37 with a shap value of 0.1008 .",
      " Yes.1008 .",
      " Yes, person 6 was detected by LFCC-37 with a shap value of 0.1008 ."
    ],
    "new_mr": "<inform> inform ( <response> response: [ yes ], <speaker_id> speaker id: [ 6 ], <feature> feature: [ LFCC-37 ], <interpreter> interpreter: [ shap ], <shap_value> shap value: [ 0.1008 ]> )"
  },
  {
    "mr": "inform(extracted[PSRCC], model[CNN], important[PSRCC-1], classification[replayed])",
    "ref": [
      " the audio sample had PSRCC features extracted and PSRCC-1 was determined to have a large impact on the PSRCC model that determined the sample to be replayed .",
      " the audio sample had CNN features extracted and CNN-1 was determined to have a large impact on the CNN model that determined the sample to be replayed .",
      " the audio sample had PSRCC features extracted and PSRCC-1 was determined to have a large impact on the CN model that determined the sample to be replayed .",
      "Yes, MFCC-22, which a shap value of -0.4098, was used to detect the sample as replayed .  the audio sample had PSRCC features extracted and PSRCC-1 was determined to have a large impact on the CNN model that determined the sample to be replayed .",
      "Yes, MFCC-22, which a shap value of -0.4098, was used to detect the sample as replayed .",
      "the audio sample had PSRCC features extracted and PSRCC-1 was determined to have a large impact on the CNN model that determined the sample to be replayed .  the audio sample had PSRCC features extracted and PSRCC-1 was determined to have a large impact on the CNN model that determined the sample to be replayed .",
      " the audio sample had PSRCC features extracted and PSRCC-1 was determined to have a large impact on the CNN model that determined the sample to be CNN .",
      " the audio sample had PSRCC features extracted and PSRCC-1 was determined to have a large impact on the CNN model that determined the sample to be replaye .",
      " the audio sample had PS features extracted and PS-1 was determined to have a large impact on the CNN model that determined the sample to be replayed .",
      " the audio sample had PSRCC features extracted and replayed was determined to have a large impact on the CNN model that determined the sample to be replayed .",
      " the audio sample had PSRCC features extracted and PSRCC-1 was determined to have a large impact on the CNN model that determined the sample to be replayed ."
    ],
    "new_mr": "<inform> inform ( <extracted> extracted: [ PSRCC ], <model> model: [ CNN ], <important> important: [ PSRCC-1 ], <classification> classification: [ replayed ]> )"
  },
  {
    "mr": "inform(response[Yes], interpreter[shap], important[PSRCC-1], classification[replayed], shap_value[-0.5782])",
    "ref": [
      " Y, PSRCC-1, which a shap value of -0.5782, was used to detect the sample as replayed .",
      " Yes, PSRCC-1, which a shap value of -0.5782, was used to detect the sample as replaye .",
      " Yes, PSRCC-1, which a shap value of -0.5782.",
      "Yes, PSRCC-1, which a shap value of -0.5782, was used to detect the sample as replayed .  Yes, PSRCC-1, which a shap value of -0.5782, was used to detect the sample as replayed .",
      "person 5 was detected as the primary speaker of the audio sample .",
      " PSRCC-1, PSRCC-1, which a shap value of -0.5782, was used to detect the sample as replayed .",
      " Yes, PSRCC-1, which a shap value of PSRCC-1, was used to detect the sample as replayed .",
      " Yes, PSRCC-1, was used to detect the sample as replayed .",
      " Yes, PSRCC-1, which a shap value of -0., was used to detect the sample as replayed .",
      " Yes, PSRCC-1.5782, was used to detect the sample as replayed .",
      " Yes, PSRCC-1, which a shap value of -0.5782, was used to detect the sample as replayed ."
    ],
    "new_mr": "<inform> inform ( <response> response: [ Yes ], <interpreter> interpreter: [ shap ], <important> important: [ PSRCC-1 ], <classification> classification: [ replayed ], <shap_value> shap value: [ -0.5782 ]> )"
  },
  {
    "mr": "inform(speaker_id[4])",
    "ref": [
      "Yes, person 1 was detected by GTCC-2 with a shap value of 1 .  person 4 was detected as the primary speaker of the audio sample .",
      " person  was detected as the primary speaker of the audio sample .",
      "person 4 was detected as the primary speaker of the audio sample .  person 4 was detected as the primary speaker of the audio sample .",
      "Yes, person 1 was detected by GTCC-2 with a shap value of 1 .",
      "Yes, person 1 was detected by GTCC-2 with a shap value of 1 .  person 4 was detected as the primary speaker of the audio sample .",
      " person  was detected as the primary speaker of the audio sample .",
      "person 4 was detected as the primary speaker of the audio sample .  person 4 was detected as the primary speaker of the audio sample .",
      "Yes, person 1 was detected by GTCC-2 with a shap value of 1 .",
      "Yes, person 1 was detected by GTCC-2 with a shap value of 1 .  person 4 was detected as the primary speaker of the audio sample .",
      " person  was detected as the primary speaker of the audio sample .",
      " person 4 was detected as the primary speaker of the audio sample ."
    ],
    "new_mr": "<inform> inform ( <speaker_id> speaker id: [ 4 ]> )"
  },
  {
    "mr": "inform(response[Yes], interpreter[shap], important[MSRCC-5], classification[replayed], shap_value[0.0597])",
    "ref": [
      " Yes, which a shap value of 0.0597, was used to detect the sample as replayed .",
      "Yes, MSRCC-5, which a shap value of 0.0597, was used to detect the sample as replayed .  Yes, MSRCC-5, which a shap value of 0.0597, was used to detect the sample as replayed .",
      " Yes, MSRCC-5, which a shap value of 0.0597, was used to detect the sample as shap .",
      " Yes, MSRCC-5, which a MSRCC-5 value of 0.0597, was used to detect the sample as replayed .",
      " Yes, MSRCC-5, which a shap value of 0.05, was used to detect the sample as replayed .",
      " Yes, MSRCC-5, which a shap value of replayed, was used to detect the sample as replayed .",
      " Yes, MSRCC-5, which a  value of 0.0597, was used to detect the sample as replayed .",
      "Yes, MFCC-0, which a shap value of 0.0234, was used to detect the sample as bonafide .",
      " Ye, MSRCC-5, which a shap value of 0.0597, was used to detect the sample as replayed .",
      " Yes, replayed, which a shap value of 0.0597, was used to detect the sample as replayed .",
      " Yes, MSRCC-5, which a shap value of 0.0597, was used to detect the sample as replayed ."
    ],
    "new_mr": "<inform> inform ( <response> response: [ Yes ], <interpreter> interpreter: [ shap ], <important> important: [ MSRCC-5 ], <classification> classification: [ replayed ], <shap_value> shap value: [ 0.0597 ]> )"
  },
  {
    "mr": "inform(extracted[MFCC], model[CNN], important[MFCC-5], classification[replayed])",
    "ref": [
      " the audio sample had MFC features extracted and MFC-5 was determined to have a large impact on the CNN model that determined the sample to be replayed .",
      "the audio sample had MFCC features extracted and MFCC-5 was determined to have a large impact on the CNN model that determined the sample to be replayed .  the audio sample had MFCC features extracted and MFCC-5 was determined to have a large impact on the CNN model that determined the sample to be replayed .",
      " the audio sample had MFCC features extracted and MFCC- was determined to have a large impact on the CNN model that determined the sample to be replayed .",
      " the audio sample had MFCC features extracted and MFCC-5 was determined to have a large impact on the CNN model that determined the sample to be MFCC .",
      "shap determined that the LFCC-45 feature was one of the more important features by assigning it a value of 0.3935 .  the audio sample had MFCC features extracted and MFCC-5 was determined to have a large impact on the CNN model that determined the sample to be replayed .",
      "shap determined that the LFCC-45 feature was one of the more important features by assigning it a value of 0.3935 .",
      " the audio sample had MFCC features extracted and MFCC-5 was determined to have a large impact on the replayed model that determined the sample to be replayed .",
      " the audio sample had MFCC features extracted and MFCC-5 was determined to have a large impact on the C model that determined the sample to be replayed .",
      " the audio sample had replayed features extracted and replayed-5 was determined to have a large impact on the CNN model that determined the sample to be replayed .",
      " the audio sample had MFCC features extracted and MFCC was determined to have a large impact on the CNN model that determined the sample to be replayed .",
      " the audio sample had MFCC features extracted and MFCC-5 was determined to have a large impact on the CNN model that determined the sample to be replayed ."
    ],
    "new_mr": "<inform> inform ( <extracted> extracted: [ MFCC ], <model> model: [ CNN ], <important> important: [ MFCC-5 ], <classification> classification: [ replayed ]> )"
  },
  {
    "mr": "inform(response[yes], speaker_id[5], feature[LFCC-50], interpreter[shap], shap_value[0.2635])",
    "ref": [
      "Yes, person 5 was detected by LFCC-50 with a shap value of 0.2635 .  Yes, person 5 was detected by LFCC-50 with a shap value of 0.2635 .",
      " Yes, person 5 was detected by 5 with a shap value of 0.2635 .",
      " Yes, person 0.2635 was detected by LFCC-0.26350 with a shap value of 0.2630.2635 .",
      " Yes, person 5 was detected by L with a shap value of 0.2635 .",
      "The spoofed audio was not a replayed audio .  Yes, person 5 was detected by LFCC-50 with a shap value of 0.2635 .",
      " Yes, person  was detected by LFCC-0 with a shap value of 0.263 .",
      " Yes, person 5 was detected by LFCC-50 with a yes value of 0.2635 .",
      "The spoofed audio was not a replayed audio .",
      " Yes, person 5 was detected by LFCC-50 with a shap value of 0.26 .",
      " Yes.2635 .",
      " Yes, person 5 was detected by LFCC-50 with a shap value of 0.2635 ."
    ],
    "new_mr": "<inform> inform ( <response> response: [ yes ], <speaker_id> speaker id: [ 5 ], <feature> feature: [ LFCC-50 ], <interpreter> interpreter: [ shap ], <shap_value> shap value: [ 0.2635 ]> )"
  },
  {
    "mr": "inform(extracted[LFCC], model[CNN], important[LFCC-10], classification[bonafide])",
    "ref": [
      " the audio sample had CNN features extracted and CNN-10 was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      " the audio sample had LFCC features extracted and  was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      " the audio sample had LFCC features extracted and bonafide was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      " the audio sample had LFCC features extracted and LFCC-10 was determined to have a large impact on the CN model that determined the sample to be bonafide .",
      " the audio sample had LFCC features extracted and LFCC-10 was determined to have a large impact on the LFCC-10 model that determined the sample to be bonafide .",
      "the audio sample had LFCC features extracted and LFCC-10 was determined to have a large impact on the CNN model that determined the sample to be bonafide .  the audio sample had LFCC features extracted and LFCC-10 was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      " the audio sample had LFCC features extracted and LFCC-10 was determined to have a large impact on the CNN model that determined the sample to be LFCC-10 .",
      " the audio sample had LFCC features extracted and LFCC-10 was determined to have a large impact on the CNN model that determined the sample to be  .",
      "the audio sample had LFCC features extracted and LFCC-15 was determined to have a large impact on the CNN model that determined the sample to be replayed .  the audio sample had LFCC features extracted and LFCC-10 was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      " the audio sample had L features extracted and L-10 was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      " the audio sample had LFCC features extracted and LFCC-10 was determined to have a large impact on the CNN model that determined the sample to be bonafide ."
    ],
    "new_mr": "<inform> inform ( <extracted> extracted: [ LFCC ], <model> model: [ CNN ], <important> important: [ LFCC-10 ], <classification> classification: [ bonafide ]> )"
  },
  {
    "mr": "inform(interpreter[shap], important[MSRCC-2], shap_value[-0.2448])",
    "ref": [
      "Yes, person 2 was detected by MFCC-15 with a shap value of 0.1546 .  shap determined that the MSRCC-2 feature was one of the more important features by assigning it a value of -0.2448 .",
      " shap determined that the MSRCC-2 feature was one of the more important features by assigning it a value of -0. .",
      " shap determined that the MSRCC-2 feature was one of the more important features by assigning it a value of MSRCC-2 .",
      " shap determined that the MSR feature was one of the more important features by assigning it a value of -0.2448 .",
      " shap determined that the shap feature was one of the more important features by assigning it a value of -0.2448 .",
      " -0.2448 determined that the MSRCC-2 feature was one of the more important features by assigning it a value of -0.2448 .",
      "  determined that the MSRCC-2 feature was one of the more important features by assigning it a value of -0.2448 .",
      "Yes, person 2 was detected by MFCC-15 with a shap value of 0.1546 .",
      "shap determined that the MSRCC-2 feature was one of the more important features by assigning it a value of -0.2448 .  shap determined that the MSRCC-2 feature was one of the more important features by assigning it a value of -0.2448 .",
      "Yes, person 2 was detected by MFCC-15 with a shap value of 0.1546 .  shap determined that the MSRCC-2 feature was one of the more important features by assigning it a value of -0.2448 .",
      " shap determined that the MSRCC-2 feature was one of the more important features by assigning it a value of -0.2448 ."
    ],
    "new_mr": "<inform> inform ( <interpreter> interpreter: [ shap ], <important> important: [ MSRCC-2 ], <shap_value> shap value: [ -0.2448 ]> )"
  },
  {
    "mr": "inform(response[Yes], interpreter[shap], important[MFCC-5], classification[replayed], shap_value[-0.2026])",
    "ref": [
      " Y, MFCC-5, which a shap value of -0.2026, was used to detect the sample as replayed .",
      " Yes, MFCC-5.2026, was used to detect the sample as replayed .",
      " Yes, MFCC-5, which a shap value of -0.2026.",
      " Yes, MFCC-5, was used to detect the sample as replayed .",
      " Yes, MFCC-5, which a sh value of -0.2026, was used to detect the sample as replayed .",
      " Yes, MFCC-5, which a shap value of Yes, was used to detect the sample as replayed .",
      " Yes.2026, was used to detect the sample as replayed .",
      " Yes, MFCC-5, which a shap value of -0.2026, was used to detect the sample as  .",
      " Yes, -0.2026, which a shap value of -0.2026, was used to detect the sample as replayed .",
      " Yes, MFCC-5, which a shap value of , was used to detect the sample as replayed .",
      " Yes, MFCC-5, which a shap value of -0.2026, was used to detect the sample as replayed ."
    ],
    "new_mr": "<inform> inform ( <response> response: [ Yes ], <interpreter> interpreter: [ shap ], <important> important: [ MFCC-5 ], <classification> classification: [ replayed ], <shap_value> shap value: [ -0.2026 ]> )"
  },
  {
    "mr": "inform(classification[bonafide], edit_type[none])",
    "ref": [
      "There was no Reverberation signature . There was no Reverberation signature .",
      "Yes, MFCC-40, which a shap value of 0.1447, was used to detect the sample as replayed .",
      "Yes, MFCC-40, which a shap value of 0.1447, was used to detect the sample as replayed . There was no Reverberation signature .",
      "There was no Reverberation signature . There was no Reverberation signature .",
      "Yes, MFCC-40, which a shap value of 0.1447, was used to detect the sample as replayed .",
      "Yes, MFCC-40, which a shap value of 0.1447, was used to detect the sample as replayed . There was no Reverberation signature .",
      "There was no Reverberation signature . There was no Reverberation signature .",
      "Yes, MFCC-40, which a shap value of 0.1447, was used to detect the sample as replayed .",
      "Yes, MFCC-40, which a shap value of 0.1447, was used to detect the sample as replayed . There was no Reverberation signature .",
      "There was no Reverberation signature . There was no Reverberation signature .",
      "There was no Reverberation signature ."
    ],
    "new_mr": "<inform> inform ( <classification> classification: [ bonafide ], <edit_type> edit type: [ none ]> )"
  },
  {
    "mr": "inform(speaker_id[8], model[SVM])",
    "ref": [
      "the audio sample was used in a SVM model tasked at detecting speaker id, determined to be 8 .  the audio sample was used in a SVM model tasked at detecting speaker id, determined to be 8 .",
      "Yes, PSRCC-12, which a shap value of -0.5073, was used to detect the sample as bonafide .  the audio sample was used in a SVM model tasked at detecting speaker id, determined to be 8 .",
      " the audio sample was used in a SVM model tasked at detecting speaker id, determined to be SVM .",
      "Yes, PSRCC-12, which a shap value of -0.5073, was used to detect the sample as bonafide .",
      " the audio sample was used in a SVM model tasked at detecting speaker id.",
      " the audio sample was used in a SVM model tasked at detecting speaker id, determined to be  .",
      " the audio sample was used in a  model tasked at detecting speaker id, determined to be 8 .",
      " the audio sample was used in a 8 model tasked at detecting speaker id, determined to be 8 .",
      "the audio sample was used in a SVM model tasked at detecting speaker id, determined to be 8 .  the audio sample was used in a SVM model tasked at detecting speaker id, determined to be 8 .",
      "Yes, PSRCC-12, which a shap value of -0.5073, was used to detect the sample as bonafide .  the audio sample was used in a SVM model tasked at detecting speaker id, determined to be 8 .",
      " the audio sample was used in a SVM model tasked at detecting speaker id, determined to be 8 ."
    ],
    "new_mr": "<inform> inform ( <speaker_id> speaker id: [ 8 ], <model> model: [ SVM ]> )"
  },
  {
    "mr": "inform(response[No], classification[spoofed], spoof_type[replayed])",
    "ref": [
      "No, the sp recording was not a replayed recording .",
      "N, the spoofed recording was not a replayed recording .",
      "the audio sample had LFCC features extracted and LFCC-58 was determined to have a large impact on the CNN model that determined the sample to be bonafide . No, the spoofed recording was not a replayed recording .",
      "No, the spoofed recording was not a rep recording .",
      "the audio sample had LFCC features extracted and LFCC-58 was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      "No.",
      "No, the replayed recording was not a replayed recording .",
      "No, the spoofed recording was not a replayed recording . No, the spoofed recording was not a replayed recording .",
      "No, the spoofed recording was not a No recording .",
      "spoofed, the spoofed recording was not a replayed recording .",
      "No, the spoofed recording was not a replayed recording ."
    ],
    "new_mr": "<inform> inform ( <response> response: [ No ], <classification> classification: [ spoofed ], <spoof_type> spoof type: [ replayed ]> )"
  },
  {
    "mr": "inform(classification[spoof], edit_type[replay])",
    "ref": [
      "The audio is replayed . The audio is replayed .",
      "The audio is spoofed .",
      "Part of the audio was played back .",
      "The audio is replaed .",
      "Part of the audio was played back . The audio is replayed .",
      "The audio is replayed . The audio is replayed .",
      "The audio is spoofed .",
      "Part of the audio was played back .",
      "The audio is replaed .",
      "Part of the audio was played back . The audio is replayed .",
      "The audio is replayed ."
    ],
    "new_mr": "<inform> inform ( <classification> classification: [ spoof ], <edit_type> edit type: [ replay ]> )"
  },
  {
    "mr": "inform(interpreter[shap], important[LFCC-22], shap_value[0.8296])",
    "ref": [
      " 0.8296 determined that the LFCC-22 feature was one of the more important features by assigning it a value of 0.8296 .",
      " shap determined that the L feature was one of the more important features by assigning it a value of 0.8296 .",
      " shap determined that the LFCC-22 feature was one of the more important features by assigning it a value of LFCC-22 .",
      " shap determined that the shap feature was one of the more important features by assigning it a value of 0.8296 .",
      "shap determined that the LFCC-22 feature was one of the more important features by assigning it a value of 0.8296 .  shap determined that the LFCC-22 feature was one of the more important features by assigning it a value of 0.8296 .",
      " sha determined that the LFCC-22 feature was one of the more important features by assigning it a value of 0.8296 .",
      "7 was found to be the id of the speaker in the sample .",
      " shap determined that the LFCC-22 feature was one of the more important features by assigning it a value of 0. .",
      "7 was found to be the id of the speaker in the sample .  shap determined that the LFCC-22 feature was one of the more important features by assigning it a value of 0.8296 .",
      " 0.8296 determined that the LFCC-22 feature was one of the more important features by assigning it a value of 0.8296 .",
      " shap determined that the LFCC-22 feature was one of the more important features by assigning it a value of 0.8296 ."
    ],
    "new_mr": "<inform> inform ( <interpreter> interpreter: [ shap ], <important> important: [ LFCC-22 ], <shap_value> shap value: [ 0.8296 ]> )"
  },
  {
    "mr": "inform(response[Yes], interpreter[shap], important[GTCC-2], classification[replayed], shap_value[1])",
    "ref": [
      " Yes, GTCC-2, which a shap value of 1, was used to detect the sample as GTCC-2 .",
      " Yes, GTCC-2, which a shap value of 1.",
      "Yes, GTCC-2, which a shap value of 1, was used to detect the sample as replayed .  Yes, GTCC-2, which a shap value of 1, was used to detect the sample as replayed .",
      " Yes, GTCC-2, which a GTCC-2 value of 1, was used to detect the sample as replayed .",
      " Yes, replayed, which a shap value of 1, was used to detect the sample as replayed .",
      " Yes, GTCC-2, which a sha value of 1, was used to detect the sample as replayed .",
      " Yes, which a shap value of 1, was used to detect the sample as replayed .",
      " Yes, , which a shap value of 1, was used to detect the sample as replayed .",
      " Yes, GTCC-2.",
      " Yes, GTCC-2, was used to detect the sample as replayed .",
      " Yes, GTCC-2, which a shap value of 1, was used to detect the sample as replayed ."
    ],
    "new_mr": "<inform> inform ( <response> response: [ Yes ], <interpreter> interpreter: [ shap ], <important> important: [ GTCC-2 ], <classification> classification: [ replayed ], <shap_value> shap value: [ 1 ]> )"
  },
  {
    "mr": "inform(response[yes], speaker_id[7], feature[MFCC-14], interpreter[shap], shap_value[0.9466])",
    "ref": [
      " Yes, MFCC-14, which a sh value of 0.9466, was used to detect the id of speaker 7 for the audio sample .",
      " Yes, MFCC-14, which a shap value of 0.9466.",
      "Yes, person 6 was detected by LFCC-54 with a shap value of 0.7811 .",
      " Yes, MFCC-14, which a shap value of 0.9, was used to detect the id of speaker 7 for the audio sample .",
      " Yes, MFCC-14.9466, was used to detect the id of speaker 7 for the audio sample .",
      "Yes, MFCC-14, which a shap value of 0.9466, was used to detect the id of speaker 7 for the audio sample .  Yes, MFCC-14, which a shap value of 0.9466, was used to detect the id of speaker 7 for the audio sample .",
      " Yes, , which a shap value of 0.9466, was used to detect the id of speaker 7 for the audio sample .",
      " Yes, which a shap value of 0.9466, was used to detect the id of speaker 7 for the audio sample .",
      "Yes, person 6 was detected by LFCC-54 with a shap value of 0.7811 .  Yes, MFCC-14, which a shap value of 0.9466, was used to detect the id of speaker 7 for the audio sample .",
      " Yes, MFCC-14, was used to detect the id of speaker 7 for the audio sample .",
      " Yes, MFCC-14, which a shap value of 0.9466, was used to detect the id of speaker 7 for the audio sample ."
    ],
    "new_mr": "<inform> inform ( <response> response: [ yes ], <speaker_id> speaker id: [ 7 ], <feature> feature: [ MFCC-14 ], <interpreter> interpreter: [ shap ], <shap_value> shap value: [ 0.9466 ]> )"
  },
  {
    "mr": "inform(classification[bonafide], edit_type[none])",
    "ref": [
      "the audio sample had LFCC features extracted and LFCC-7 was determined to have a large impact on the CNN model that determined the sample to be replayed . There are no inconsistencies which indicate a Conversion sample .",
      "There are no inconsistencies which indicate a Conversion sample . There are no inconsistencies which indicate a Conversion sample .",
      "the audio sample had LFCC features extracted and LFCC-7 was determined to have a large impact on the CNN model that determined the sample to be replayed .",
      "the audio sample had LFCC features extracted and LFCC-7 was determined to have a large impact on the CNN model that determined the sample to be replayed . There are no inconsistencies which indicate a Conversion sample .",
      "There are no inconsistencies which indicate a Conversion sample . There are no inconsistencies which indicate a Conversion sample .",
      "the audio sample had LFCC features extracted and LFCC-7 was determined to have a large impact on the CNN model that determined the sample to be replayed .",
      "the audio sample had LFCC features extracted and LFCC-7 was determined to have a large impact on the CNN model that determined the sample to be replayed . There are no inconsistencies which indicate a Conversion sample .",
      "There are no inconsistencies which indicate a Conversion sample . There are no inconsistencies which indicate a Conversion sample .",
      "the audio sample had LFCC features extracted and LFCC-7 was determined to have a large impact on the CNN model that determined the sample to be replayed .",
      "the audio sample had LFCC features extracted and LFCC-7 was determined to have a large impact on the CNN model that determined the sample to be replayed . There are no inconsistencies which indicate a Conversion sample .",
      "There are no inconsistencies which indicate a Conversion sample . "
    ],
    "new_mr": "<inform> inform ( <classification> classification: [ bonafide ], <edit_type> edit type: [ none ]> )"
  },
  {
    "mr": "inform(interpreter[shap], important[GTCC-2], shap_value[-1])",
    "ref": [
      "shap determined that the GTCC-2 feature was one of the more important features by assigning it a value of -1 .  shap determined that the GTCC-2 feature was one of the more important features by assigning it a value of -1 .",
      "the audio sample had LFCC features extracted and LFCC-50 was determined to have a large impact on the CNN model that determined the sample to be replayed .  shap determined that the GTCC-2 feature was one of the more important features by assigning it a value of -1 .",
      " sh determined that the GTCC-2 feature was one of the more important features by assigning it a value of -1 .",
      " shap determined that the -1 feature was one of the more important features by assigning it a value of -1 .",
      " shap determined that the GTCC feature was one of the more important features by assigning it a value of -1 .",
      "the audio sample had LFCC features extracted and LFCC-50 was determined to have a large impact on the CNN model that determined the sample to be replayed .",
      " shap determined that the GTCC-2 feature was one of the more important features by assigning it a value of - .",
      " -1 determined that the GTCC-2 feature was one of the more important features by assigning it a value of -1 .",
      " shap determined that the GTCC-2 feature was one of the more important features by assigning it a value of shap .",
      "shap determined that the GTCC-2 feature was one of the more important features by assigning it a value of -1 .  shap determined that the GTCC-2 feature was one of the more important features by assigning it a value of -1 .",
      " shap determined that the GTCC-2 feature was one of the more important features by assigning it a value of -1 ."
    ],
    "new_mr": "<inform> inform ( <interpreter> interpreter: [ shap ], <important> important: [ GTCC-2 ], <shap_value> shap value: [ -1 ]> )"
  },
  {
    "mr": "inform(classification[spoof], edit_type[multi_speaker], speaker_quantity[>1])",
    "ref": [
      "There are inconsistencies in the number of people speaking . There are inconsistencies in the number of people speaking .",
      "Yes, MFCC-20, which a shap value of 0.0087, was used to detect the sample as bonafide .",
      "Yes, MFCC-20, which a shap value of 0.0087, was used to detect the sample as bonafide . There are inconsistencies in the number of people speaking .",
      "There are inconsistencies in the number of people speaking . There are inconsistencies in the number of people speaking .",
      "Yes, MFCC-20, which a shap value of 0.0087, was used to detect the sample as bonafide .",
      "Yes, MFCC-20, which a shap value of 0.0087, was used to detect the sample as bonafide . There are inconsistencies in the number of people speaking .",
      "There are inconsistencies in the number of people speaking . There are inconsistencies in the number of people speaking .",
      "Yes, MFCC-20, which a shap value of 0.0087, was used to detect the sample as bonafide .",
      "Yes, MFCC-20, which a shap value of 0.0087, was used to detect the sample as bonafide . There are inconsistencies in the number of people speaking .",
      "There are inconsistencies in the number of people speaking . There are inconsistencies in the number of people speaking .",
      "There are inconsistencies in the number of people speaking ."
    ],
    "new_mr": "<inform> inform ( <classification> classification: [ spoof ], <edit_type> edit type: [ multi_speaker ], <speaker_quantity> speaker quantity: [ >1 ]> )"
  },
  {
    "mr": "inform(response[Yes], interpreter[shap], important[MFCC-1], classification[replayed], shap_value[-0.5673])",
    "ref": [
      " Yes, MFCC-1, which a shap value of -, was used to detect the sample as replayed .",
      " Yes, M, which a shap value of -0.5673, was used to detect the sample as replayed .",
      " Yes, MFCC-1, which a shap value of -0.5673, was used to detect the sample as MFCC-1 .",
      " Yes, MFCC-1, which a sh value of -0.5673, was used to detect the sample as replayed .",
      " Yes, MFCC-1, which a shap value of -0.5673, was used to detect the sample as r .",
      " Yes, MFCC-1, which a -0.5673 value of -0.5673, was used to detect the sample as replayed .",
      " Yes, MFCC-1, which a shap value of -0.5673.",
      " shap, MFCC-1, which a shap value of -0.5673, was used to detect the sample as replayed .",
      " Yes.5673, was used to detect the sample as replayed .",
      "Yes, MFCC-8, which a shap value of -0.7314, was used to detect the id of speaker 2 for the audio sample .  Yes, MFCC-1, which a shap value of -0.5673, was used to detect the sample as replayed .",
      " Yes, MFCC-1, which a shap value of -0.5673, was used to detect the sample as replayed ."
    ],
    "new_mr": "<inform> inform ( <response> response: [ Yes ], <interpreter> interpreter: [ shap ], <important> important: [ MFCC-1 ], <classification> classification: [ replayed ], <shap_value> shap value: [ -0.5673 ]> )"
  },
  {
    "mr": "inform(response[yes], speaker_id[4], feature[MFCC-12], interpreter[shap], shap_value[-0.3913])",
    "ref": [
      " Yes, person  was detected by MFCC-12 with a shap value of -0.3913 .",
      " Yes, person 4 was detected by MF with a shap value of -0.3913 .",
      " Yes.3913 .",
      "Yes, person 4 was detected by MFCC-12 with a shap value of -0.3913 .  Yes, person 4 was detected by MFCC-12 with a shap value of -0.3913 .",
      " Yes, person 4 was detected by MFCC-12 with a -0.3913 value of -0.3913 .",
      "Yes, MFCC-37, which a shap value of -0.6786, was used to detect the id of speaker 4 for the audio sample .  Yes, person 4 was detected by MFCC-12 with a shap value of -0.3913 .",
      " Yes, person 4 was detected by MFCC-12 with a shap value of -0.3 .",
      "Yes, MFCC-37, which a shap value of -0.6786, was used to detect the id of speaker 4 for the audio sample .",
      " Yes, person yes was detected by MFCC-12 with a shap value of -0.3913 .",
      " Yes, person 4 was detected by yes with a shap value of -0.3913 .",
      " Yes, person 4 was detected by MFCC-12 with a shap value of -0.3913 ."
    ],
    "new_mr": "<inform> inform ( <response> response: [ yes ], <speaker_id> speaker id: [ 4 ], <feature> feature: [ MFCC-12 ], <interpreter> interpreter: [ shap ], <shap_value> shap value: [ -0.3913 ]> )"
  },
  {
    "mr": "inform(response[Yes], interpreter[shap], important[LFCC-58], classification[bonafide], shap_value[0.6073])",
    "ref": [
      " Yes, LFCC-58, was used to detect the sample as bonafide .",
      " Yes, LFCC-58.6073, was used to detect the sample as bonafide .",
      "The audio sample had its GTCC, and MFCC features extracted which were passed to an SVM model for identification .",
      "Yes, LFCC-58, which a shap value of 0.6073, was used to detect the sample as bonafide .  Yes, LFCC-58, which a shap value of 0.6073, was used to detect the sample as bonafide .",
      " Yes, LFCC-58, which a shap value of 0.6073, was used to detect the sample as b .",
      " Yes, LFCC-58, which a shap value of 0.6073.",
      " Yes, bonafide, which a shap value of 0.6073, was used to detect the sample as bonafide .",
      " Yes.6073, was used to detect the sample as bonafide .",
      " Yes, LFCC-58, which a shap value of 0.6073, was used to detect the sample as LFCC-58 .",
      " Yes, LFCC-58, which a shap value of , was used to detect the sample as bonafide .",
      " Yes, LFCC-58, which a shap value of 0.6073, was used to detect the sample as bonafide ."
    ],
    "new_mr": "<inform> inform ( <response> response: [ Yes ], <interpreter> interpreter: [ shap ], <important> important: [ LFCC-58 ], <classification> classification: [ bonafide ], <shap_value> shap value: [ 0.6073 ]> )"
  },
  {
    "mr": "inform(classification[spoof], edit_type[speed])",
    "ref": [
      "Yes, person 2 was detected by MFCC-37 with a shap value of 0.2651 .",
      "The audio is artificially slowed . The audio is artificially slowed .",
      "Yes, person 2 was detected by MFCC-37 with a shap value of 0.2651 . The audio is artificially slowed .",
      "Yes, person 2 was detected by MFCC-37 with a shap value of 0.2651 .",
      "The audio is artificially slowed . The audio is artificially slowed .",
      "Yes, person 2 was detected by MFCC-37 with a shap value of 0.2651 . The audio is artificially slowed .",
      "Yes, person 2 was detected by MFCC-37 with a shap value of 0.2651 .",
      "The audio is artificially slowed . The audio is artificially slowed .",
      "Yes, person 2 was detected by MFCC-37 with a shap value of 0.2651 . The audio is artificially slowed .",
      "Yes, person 2 was detected by MFCC-37 with a shap value of 0.2651 .",
      "The audio is artificially slowed ."
    ],
    "new_mr": "<inform> inform ( <classification> classification: [ spoof ], <edit_type> edit type: [ speed ]> )"
  },
  {
    "mr": "inform(response[Yes], interpreter[shap], important[LFCC-23], classification[replayed], shap_value[-0.561])",
    "ref": [
      " Yes, LFCC-23, which a shap value of Yes, was used to detect the sample as replayed .",
      "Yes, PSRCC-6, which a shap value of 0.8902, was used to detect the sample as replayed .",
      " Yes, shap, which a shap value of -0.561, was used to detect the sample as replayed .",
      "Yes, PSRCC-6, which a shap value of 0.8902, was used to detect the sample as replayed .  Yes, LFCC-23, which a shap value of -0.561, was used to detect the sample as replayed .",
      " Yes, LFCC-23, which a shap value of -, was used to detect the sample as replayed .",
      " Yes, LFCC-23, which a s value of -0.561, was used to detect the sample as replayed .",
      "Yes, LFCC-23, which a shap value of -0.561, was used to detect the sample as replayed .  Yes, LFCC-23, which a shap value of -0.561, was used to detect the sample as replayed .",
      " replayed, LFCC-23, which a shap value of -0.561, was used to detect the sample as replayed .",
      " Yes, LFCC-23, was used to detect the sample as replayed .",
      " Yes.561, was used to detect the sample as replayed .",
      " Yes, LFCC-23, which a shap value of -0.561, was used to detect the sample as replayed ."
    ],
    "new_mr": "<inform> inform ( <response> response: [ Yes ], <interpreter> interpreter: [ shap ], <important> important: [ LFCC-23 ], <classification> classification: [ replayed ], <shap_value> shap value: [ -0.561 ]> )"
  },
  {
    "mr": "inform(response[Yes], classification[spoofed], spoof_type[replayed])",
    "ref": [
      "replayed the recording was faked using playback .",
      "Ye the recording was faked using playback .",
      "the audio sample had LFCC features extracted and LFCC-40 was determined to have a large impact on the CNN model that determined the sample to be bonafide . Yes the recording was faked using playback .",
      "the audio sample had LFCC features extracted and LFCC-40 was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      "Yes the recording was faked using playback . Yes the recording was faked using playback .",
      "replayed the recording was faked using playback .",
      "Ye the recording was faked using playback .",
      "the audio sample had LFCC features extracted and LFCC-40 was determined to have a large impact on the CNN model that determined the sample to be bonafide . Yes the recording was faked using playback .",
      "the audio sample had LFCC features extracted and LFCC-40 was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      "Yes the recording was faked using playback . Yes the recording was faked using playback .",
      "Yes the recording was faked using playback ."
    ],
    "new_mr": "<inform> inform ( <response> response: [ Yes ], <classification> classification: [ spoofed ], <spoof_type> spoof type: [ replayed ]> )"
  },
  {
    "mr": "inform(interpreter[shap], important[LFCC-29], shap_value[0.7373])",
    "ref": [
      "the audio sample had PSRCC features extracted and PSRCC-2 was determined to have a large impact on the CNN model that determined the sample to be replayed .  shap determined that the LFCC-29 feature was one of the more important features by assigning it a value of 0.7373 .",
      "the audio sample had PSRCC features extracted and PSRCC-2 was determined to have a large impact on the CNN model that determined the sample to be replayed .",
      " shap determined that the LFCC-29 feature was one of the more important features by assigning it a value of 0.73 .",
      " s determined that the LFCC-29 feature was one of the more important features by assigning it a value of 0.7373 .",
      "shap determined that the LFCC-29 feature was one of the more important features by assigning it a value of 0.7373 .  shap determined that the LFCC-29 feature was one of the more important features by assigning it a value of 0.7373 .",
      " LFCC-29 determined that the LFCC-29 feature was one of the more important features by assigning it a value of 0.7373 .",
      " shap determined that the LFCC- feature was one of the more important features by assigning it a value of 0.7373 .",
      " shap determined that the LFCC-29 feature was one of the more important features by assigning it a value of shap .",
      " shap determined that the 0.7373 feature was one of the more important features by assigning it a value of 0.7373 .",
      "the audio sample had PSRCC features extracted and PSRCC-2 was determined to have a large impact on the CNN model that determined the sample to be replayed .  shap determined that the LFCC-29 feature was one of the more important features by assigning it a value of 0.7373 .",
      " shap determined that the LFCC-29 feature was one of the more important features by assigning it a value of 0.7373 ."
    ],
    "new_mr": "<inform> inform ( <interpreter> interpreter: [ shap ], <important> important: [ LFCC-29 ], <shap_value> shap value: [ 0.7373 ]> )"
  },
  {
    "mr": "inform(extracted[LFCC], model[CNN], important[LFCC-47], classification[bonafide])",
    "ref": [
      " the audio sample had LFCC features extracted and LFCC-4 was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      " the audio sample had LFCC features extracted and LFCC-47 was determined to have a large impact on the C model that determined the sample to be bonafide .",
      " the audio sample had LFCC features extracted and bonafide was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      " the audio sample had LFCC features extracted and LFCC-47 was determined to have a large impact on the CNN model that determined the sample to be b .",
      " the audio sample had LFCC features extracted and LFCC-47 was determined to have a large impact on the LFCC model that determined the sample to be bonafide .",
      "the audio sample had LFCC features extracted and LFCC-47 was determined to have a large impact on the CNN model that determined the sample to be bonafide .  the audio sample had LFCC features extracted and LFCC-47 was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      "yes, MFCC-11 was used to determine speaker id .",
      " the audio sample had LF features extracted and LF-47 was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      "yes, MFCC-11 was used to determine speaker id .  the audio sample had LFCC features extracted and LFCC-47 was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      " the audio sample had LFCC features extracted and LFCC-47 was determined to have a large impact on the CNN model that determined the sample to be CNN .",
      " the audio sample had LFCC features extracted and LFCC-47 was determined to have a large impact on the CNN model that determined the sample to be bonafide ."
    ],
    "new_mr": "<inform> inform ( <extracted> extracted: [ LFCC ], <model> model: [ CNN ], <important> important: [ LFCC-47 ], <classification> classification: [ bonafide ]> )"
  },
  {
    "mr": "inform(interpreter[shap], important[MSRCC-7], shap_value[-0.6482])",
    "ref": [
      "shap determined that the LFCC-27 feature was one of the more important features by assigning it a value of 0.8773 .  shap determined that the MSRCC-7 feature was one of the more important features by assigning it a value of -0.6482 .",
      "shap determined that the MSRCC-7 feature was one of the more important features by assigning it a value of -0.6482 .  shap determined that the MSRCC-7 feature was one of the more important features by assigning it a value of -0.6482 .",
      " shap determined that the MSRCC-7 feature was one of the more important features by assigning it a value of MSRCC-7 .",
      " -0.6482 determined that the MSRCC-7 feature was one of the more important features by assigning it a value of -0.6482 .",
      " shap determined that the shap feature was one of the more important features by assigning it a value of -0.6482 .",
      " shap determined that the  feature was one of the more important features by assigning it a value of -0.6482 .",
      " sh determined that the MSRCC-7 feature was one of the more important features by assigning it a value of -0.6482 .",
      " shap determined that the MSRCC-7 feature was one of the more important features by assigning it a value of -0.64 .",
      "shap determined that the LFCC-27 feature was one of the more important features by assigning it a value of 0.8773 .",
      "shap determined that the LFCC-27 feature was one of the more important features by assigning it a value of 0.8773 .  shap determined that the MSRCC-7 feature was one of the more important features by assigning it a value of -0.6482 .",
      " shap determined that the MSRCC-7 feature was one of the more important features by assigning it a value of -0.6482 ."
    ],
    "new_mr": "<inform> inform ( <interpreter> interpreter: [ shap ], <important> important: [ MSRCC-7 ], <shap_value> shap value: [ -0.6482 ]> )"
  },
  {
    "mr": "inform(response[yes], speaker_id[1], feature[GTCC-8], interpreter[shap], shap_value[0])",
    "ref": [
      " Yes, person  was detected by GTCC-8 with a shap value of 0 .",
      " Yes, person 1 was detected by 1 with a shap value of 0 .",
      " Yes, person 1 was detected by GTCC-8 with a shap value of shap .",
      " Yes, person 1 was detected by GTCC-8 with a sha value of 0 .",
      " Yes, person 1 was detected by G with a shap value of 0 .",
      " Yes, person 1 was detected by GTCC-8 with a 0 value of 0 .",
      " Yes, person 1 was detected by GTCC-8 with a shap value of  .",
      "Yes, GTCC-12, which a shap value of 0, was used to detect the id of speaker 5 for the audio sample .",
      " Yes.",
      "Yes, GTCC-12, which a shap value of 0, was used to detect the id of speaker 5 for the audio sample .  Yes, person 1 was detected by GTCC-8 with a shap value of 0 .",
      " Yes, person 1 was detected by GTCC-8 with a shap value of 0 ."
    ],
    "new_mr": "<inform> inform ( <response> response: [ yes ], <speaker_id> speaker id: [ 1 ], <feature> feature: [ GTCC-8 ], <interpreter> interpreter: [ shap ], <shap_value> shap value: [ 0 ]> )"
  },
  {
    "mr": "inform(response[Yes], interpreter[shap], important[MFCC-25], classification[replayed], shap_value[0.9811])",
    "ref": [
      " Yes, MFCC-25, which a shap value of Yes, was used to detect the sample as replayed .",
      "Yes, MFCC-25, which a shap value of 0.9811, was used to detect the sample as replayed .  Yes, MFCC-25, which a shap value of 0.9811, was used to detect the sample as replayed .",
      " Yes, replayed, which a shap value of 0.9811, was used to detect the sample as replayed .",
      " Yes, which a shap value of 0.9811, was used to detect the sample as replayed .",
      " Yes, MFCC-25, which a s value of 0.9811, was used to detect the sample as replayed .",
      " Y, MFCC-25, which a shap value of 0.9811, was used to detect the sample as replayed .",
      " replayed, MFCC-25, which a shap value of 0.9811, was used to detect the sample as replayed .",
      " Yes, MFCC-2, which a shap value of 0.9811, was used to detect the sample as replayed .",
      "the audio sample had PSRCC features extracted and PSRCC-9 was determined to have a large impact on the CNN model that determined the sample to be replayed .  Yes, MFCC-25, which a shap value of 0.9811, was used to detect the sample as replayed .",
      "the audio sample had PSRCC features extracted and PSRCC-9 was determined to have a large impact on the CNN model that determined the sample to be replayed .",
      " Yes, MFCC-25, which a shap value of 0.9811, was used to detect the sample as replayed ."
    ],
    "new_mr": "<inform> inform ( <response> response: [ Yes ], <interpreter> interpreter: [ shap ], <important> important: [ MFCC-25 ], <classification> classification: [ replayed ], <shap_value> shap value: [ 0.9811 ]> )"
  },
  {
    "mr": "inform(speaker_id[2], model[SVM])",
    "ref": [
      " the audio sample was used in a SVM model tasked at detecting speaker id, determined to be SVM .",
      "Yes, LFCC-17, which a shap value of 0.809, was used to detect the sample as bonafide .",
      " the audio sample was used in a SVM model tasked at detecting speaker id.",
      "the audio sample was used in a SVM model tasked at detecting speaker id, determined to be 2 .  the audio sample was used in a SVM model tasked at detecting speaker id, determined to be 2 .",
      "Yes, LFCC-17, which a shap value of 0.809, was used to detect the sample as bonafide .  the audio sample was used in a SVM model tasked at detecting speaker id, determined to be 2 .",
      " the audio sample was used in a 2 model tasked at detecting speaker id, determined to be 2 .",
      " the audio sample was used in a SVM model tasked at detecting speaker id, determined to be  .",
      " the audio sample was used in a S model tasked at detecting speaker id, determined to be 2 .",
      " the audio sample was used in a SVM model tasked at detecting speaker id, determined to be SVM .",
      "Yes, LFCC-17, which a shap value of 0.809, was used to detect the sample as bonafide .",
      " the audio sample was used in a SVM model tasked at detecting speaker id, determined to be 2 ."
    ],
    "new_mr": "<inform> inform ( <speaker_id> speaker id: [ 2 ], <model> model: [ SVM ]> )"
  },
  {
    "mr": "inform(interpreter[shap], important[LFCC-31], shap_value[-0.9197])",
    "ref": [
      "Yes, MFCC-0, which a shap value of 0.0234, was used to detect the sample as bonafide .",
      " shap determined that the LFCC-31 feature was one of the more important features by assigning it a value of -0.919 .",
      " sh determined that the LFCC-31 feature was one of the more important features by assigning it a value of -0.9197 .",
      "shap determined that the LFCC-31 feature was one of the more important features by assigning it a value of -0.9197 .  shap determined that the LFCC-31 feature was one of the more important features by assigning it a value of -0.9197 .",
      " shap determined that the LFCC-31 feature was one of the more important features by assigning it a value of shap .",
      " shap determined that the LFC feature was one of the more important features by assigning it a value of -0.9197 .",
      " shap determined that the -0.9197 feature was one of the more important features by assigning it a value of -0.9197 .",
      " -0.9197 determined that the LFCC-31 feature was one of the more important features by assigning it a value of -0.9197 .",
      "Yes, MFCC-0, which a shap value of 0.0234, was used to detect the sample as bonafide .  shap determined that the LFCC-31 feature was one of the more important features by assigning it a value of -0.9197 .",
      "Yes, MFCC-0, which a shap value of 0.0234, was used to detect the sample as bonafide .",
      " shap determined that the LFCC-31 feature was one of the more important features by assigning it a value of -0.9197 ."
    ],
    "new_mr": "<inform> inform ( <interpreter> interpreter: [ shap ], <important> important: [ LFCC-31 ], <shap_value> shap value: [ -0.9197 ]> )"
  },
  {
    "mr": "inform(response[Yes], interpreter[shap], important[LFCC-1], classification[replayed], shap_value[0.109])",
    "ref": [
      " Yes, LFCC-1, which a shap value of 0.109, was used to detect the sample as replay .",
      " Yes, LFCC-1, which a shap value of 0.109.",
      " replayed, LFCC-1, which a shap value of 0.109, was used to detect the sample as replayed .",
      " Yes, LFCC-1, which a shap value of shap, was used to detect the sample as replayed .",
      " Yes, LFCC-1, which a shap value of 0.109, was used to detect the sample as 0.109 .",
      " Yes, LFCC-1, which a 0.109 value of 0.109, was used to detect the sample as replayed .",
      " Yes, LFCC-1.109, was used to detect the sample as replayed .",
      "Yes, LFCC-1, which a shap value of 0.109, was used to detect the sample as replayed .  Yes, LFCC-1, which a shap value of 0.109, was used to detect the sample as replayed .",
      " , LFCC-1, which a shap value of 0.109, was used to detect the sample as replayed .",
      " Yes, which a shap value of 0.109, was used to detect the sample as replayed .",
      " Yes, LFCC-1, which a shap value of 0.109, was used to detect the sample as replayed ."
    ],
    "new_mr": "<inform> inform ( <response> response: [ Yes ], <interpreter> interpreter: [ shap ], <important> important: [ LFCC-1 ], <classification> classification: [ replayed ], <shap_value> shap value: [ 0.109 ]> )"
  },
  {
    "mr": "inform(response[Yes], interpreter[shap], important[LFCC-48], classification[replayed], shap_value[0.2133])",
    "ref": [
      " Yes, LFCC-48.2133, was used to detect the sample as replayed .",
      " Yes, LFCC-48, which a shap value of 0.2133, was used to detect the sample as LFCC-48 .",
      "Yes, LFCC-48, which a shap value of 0.2133, was used to detect the sample as replayed .  Yes, LFCC-48, which a shap value of 0.2133, was used to detect the sample as replayed .",
      " Ye, LFCC-48, which a shap value of 0.2133, was used to detect the sample as replayed .",
      " 0.2133, LFCC-48, which a shap value of 0.2133, was used to detect the sample as replayed .",
      " Yes, LFCC-48, was used to detect the sample as replayed .",
      " Yes, shap, which a shap value of 0.2133, was used to detect the sample as replayed .",
      " Yes, LFCC-48, which a shap value of 0.2133, was used to detect the sample as rep .",
      " Yes, LFCC-48, which a Yes value of 0.2133, was used to detect the sample as replayed .",
      " Yes, LFCC-48, which a shap value of 0.2133.",
      " Yes, LFCC-48, which a shap value of 0.2133, was used to detect the sample as replayed ."
    ],
    "new_mr": "<inform> inform ( <response> response: [ Yes ], <interpreter> interpreter: [ shap ], <important> important: [ LFCC-48 ], <classification> classification: [ replayed ], <shap_value> shap value: [ 0.2133 ]> )"
  },
  {
    "mr": "inform(response[Yes], interpreter[shap], important[PSRCC-0], classification[bonafide], shap_value[0.6244])",
    "ref": [
      " Yes, PSRCC-0, was used to detect the sample as bonafide .",
      " Yes, PSRCC-0.6244, was used to detect the sample as bonafide .",
      " Yes, PSRCC-0, which a sh value of 0.6244, was used to detect the sample as bonafide .",
      "shap determined that the LFCC-3 feature was one of the more important features by assigning it a value of 0.7891 .",
      " Yes, PSRCC-0, which a shap value of 0.6244.",
      " Yes, PSRCC-0, which a shap value of 0.6244, was used to detect the sample as Yes .",
      " Yes, , which a shap value of 0.6244, was used to detect the sample as bonafide .",
      " Ye, PSRCC-0, which a shap value of 0.6244, was used to detect the sample as bonafide .",
      " Yes, 0.6244, which a shap value of 0.6244, was used to detect the sample as bonafide .",
      " Yes, which a shap value of 0.6244, was used to detect the sample as bonafide .",
      " Yes, PSRCC-0, which a shap value of 0.6244, was used to detect the sample as bonafide ."
    ],
    "new_mr": "<inform> inform ( <response> response: [ Yes ], <interpreter> interpreter: [ shap ], <important> important: [ PSRCC-0 ], <classification> classification: [ bonafide ], <shap_value> shap value: [ 0.6244 ]> )"
  },
  {
    "mr": "inform(extracted[LFCC], model[CNN], important[LFCC-28], classification[bonafide])",
    "ref": [
      " the audio sample had LFCC features extracted and LFCC-28 was determined to have a large impact on the C model that determined the sample to be bonafide .",
      " the audio sample had LFCC features extracted and CNN was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      " the audio sample had L features extracted and L-28 was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      " the audio sample had LFCC features extracted and LFCC-28 was determined to have a large impact on the CNN model that determined the sample to be bonafi .",
      "the audio sample had LFCC features extracted and LFCC-28 was determined to have a large impact on the CNN model that determined the sample to be bonafide .  the audio sample had LFCC features extracted and LFCC-28 was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      " the audio sample had LFCC features extracted and LFCC-28 was determined to have a large impact on the CNN model that determined the sample to be LFCC-28 .",
      " the audio sample had LFCC features extracted and LFC was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      " the audio sample had bonafide features extracted and bonafide-28 was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      "Yes, person 1 was detected by GTCC-2 with a shap value of 1 .",
      "Yes, person 1 was detected by GTCC-2 with a shap value of 1 .  the audio sample had LFCC features extracted and LFCC-28 was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      " the audio sample had LFCC features extracted and LFCC-28 was determined to have a large impact on the CNN model that determined the sample to be bonafide ."
    ],
    "new_mr": "<inform> inform ( <extracted> extracted: [ LFCC ], <model> model: [ CNN ], <important> important: [ LFCC-28 ], <classification> classification: [ bonafide ]> )"
  },
  {
    "mr": "inform(general)",
    "ref": [
      "The spoofed audio was a synthetic audio . Linear Frequency Cepstral Coefficients are extracted by performing integration of the power spectrum using overlapping triangular filters spaced linearly and logarithmic compression follwed by DCT .",
      "Linear Frequency Cepstral Coefficients are extracted by performing integration of the power spectrum using overlapping triangular filters spaced linearly and logarithmic compression follwed by DCT . Linear Frequency Cepstral Coefficients are extracted by performing integration of the power spectrum using overlapping triangular filters spaced linearly and logarithmic compression follwed by DCT .",
      "The spoofed audio was a synthetic audio .",
      "The spoofed audio was a synthetic audio . Linear Frequency Cepstral Coefficients are extracted by performing integration of the power spectrum using overlapping triangular filters spaced linearly and logarithmic compression follwed by DCT .",
      "Linear Frequency Cepstral Coefficients are extracted by performing integration of the power spectrum using overlapping triangular filters spaced linearly and logarithmic compression follwed by DCT . Linear Frequency Cepstral Coefficients are extracted by performing integration of the power spectrum using overlapping triangular filters spaced linearly and logarithmic compression follwed by DCT .",
      "The spoofed audio was a synthetic audio .",
      "The spoofed audio was a synthetic audio . Linear Frequency Cepstral Coefficients are extracted by performing integration of the power spectrum using overlapping triangular filters spaced linearly and logarithmic compression follwed by DCT .",
      "Linear Frequency Cepstral Coefficients are extracted by performing integration of the power spectrum using overlapping triangular filters spaced linearly and logarithmic compression follwed by DCT . Linear Frequency Cepstral Coefficients are extracted by performing integration of the power spectrum using overlapping triangular filters spaced linearly and logarithmic compression follwed by DCT .",
      "The spoofed audio was a synthetic audio .",
      "The spoofed audio was a synthetic audio . Linear Frequency Cepstral Coefficients are extracted by performing integration of the power spectrum using overlapping triangular filters spaced linearly and logarithmic compression follwed by DCT .",
      "Linear Frequency Cepstral Coefficients are extracted by performing integration of the power spectrum using overlapping triangular filters spaced linearly and logarithmic compression follwed by DCT ."
    ],
    "new_mr": "<inform> inform ( > )"
  },
  {
    "mr": "inform(interpreter[shap], important[LFCC-6], shap_value[-0.917])",
    "ref": [
      "Yes, LFCC-29, which a shap value of 0.9762, was used to detect the sample as replayed .  shap determined that the LFCC-6 feature was one of the more important features by assigning it a value of -0.917 .",
      "shap determined that the LFCC-6 feature was one of the more important features by assigning it a value of -0.917 .  shap determined that the LFCC-6 feature was one of the more important features by assigning it a value of -0.917 .",
      "  determined that the LFCC-6 feature was one of the more important features by assigning it a value of -0.917 .",
      "Yes, LFCC-29, which a shap value of 0.9762, was used to detect the sample as replayed .",
      " -0.917 determined that the LFCC-6 feature was one of the more important features by assigning it a value of -0.917 .",
      " shap determined that the  feature was one of the more important features by assigning it a value of -0.917 .",
      " shap determined that the LFCC-6 feature was one of the more important features by assigning it a value of shap .",
      " shap determined that the -0.917 feature was one of the more important features by assigning it a value of -0.917 .",
      " shap determined that the LFCC-6 feature was one of the more important features by assigning it a value of -0. .",
      "Yes, LFCC-29, which a shap value of 0.9762, was used to detect the sample as replayed .  shap determined that the LFCC-6 feature was one of the more important features by assigning it a value of -0.917 .",
      " shap determined that the LFCC-6 feature was one of the more important features by assigning it a value of -0.917 ."
    ],
    "new_mr": "<inform> inform ( <interpreter> interpreter: [ shap ], <important> important: [ LFCC-6 ], <shap_value> shap value: [ -0.917 ]> )"
  },
  {
    "mr": "inform(response[Yes])",
    "ref": [
      " .",
      "Yes, PSRCC-4, which a shap value of 0.5129, was used to detect the sample as bonafide . Yes .",
      "Yes . Yes .",
      "Yes, PSRCC-4, which a shap value of 0.5129, was used to detect the sample as bonafide .",
      " .",
      "Yes, PSRCC-4, which a shap value of 0.5129, was used to detect the sample as bonafide . Yes .",
      "Yes . Yes .",
      "Yes, PSRCC-4, which a shap value of 0.5129, was used to detect the sample as bonafide .",
      " .",
      "Yes, PSRCC-4, which a shap value of 0.5129, was used to detect the sample as bonafide . Yes .",
      "Yes ."
    ],
    "new_mr": "<inform> inform ( <response> response: [ Yes ]> )"
  },
  {
    "mr": "inform(response[yes], speaker_id[3], feature[MSRCC-4], interpreter[shap], shap_value[-0.666])",
    "ref": [
      " Yes, MSRCC-4, was used to detect the id of speaker 3 for the audio sample .",
      " Yes, MSRCC-4, which a shap value of shap, was used to detect the id of speaker 3 for the audio sample .",
      " Yes.666, was used to detect the id of speaker 3 for the audio sample .",
      "Yes, MSRCC-4, which a shap value of -0.666, was used to detect the id of speaker 3 for the audio sample .  Yes, MSRCC-4, which a shap value of -0.666, was used to detect the id of speaker 3 for the audio sample .",
      " Yes, MSRCC-4, which a shap value of -0.666, was used to detect the id of speaker  for the audio sample .",
      " Yes, MSRCC-4, which a shap value of -0.666, was used to detect the id of speaker MSRCC-4 for the audio sample .",
      " Yes, MSRCC-4, which a shap value of -0.666.",
      " Yes, MSRCC-4, which a shap value of -0.6, was used to detect the id of speaker 3 for the audio sample .",
      "Yes, MFCC-21, which a shap value of 0.0724, was used to detect the sample as replayed .  Yes, MSRCC-4, which a shap value of -0.666, was used to detect the id of speaker 3 for the audio sample .",
      " Yes, which a shap value of -0.666, was used to detect the id of speaker 3 for the audio sample .",
      " Yes, MSRCC-4, which a shap value of -0.666, was used to detect the id of speaker 3 for the audio sample ."
    ],
    "new_mr": "<inform> inform ( <response> response: [ yes ], <speaker_id> speaker id: [ 3 ], <feature> feature: [ MSRCC-4 ], <interpreter> interpreter: [ shap ], <shap_value> shap value: [ -0.666 ]> )"
  },
  {
    "mr": "inform(response[No], classification[spoof], edit_type[multi_microphone], mic_quantity[>1])",
    "ref": [
      "No . No . There was more than one microphone .",
      "No . No . No . There was more than one microphone .",
      "There was more than one microphone .",
      "spoof . There was more than one microphone .",
      "Yes, person 4 was detected by MFCC-28 with a shap value of -0.1756 .  Yes, person 4 was detected by MFCC-28 with a shap value of -0.1756 .",
      "Yes, person 4 was detected by MFCC-28 with a shap value of -0.1756 . There was more than one microphone .",
      "Yes, person 4 was detected by MFCC-28 with a shap value of -0.1756 . No .  Yes, person 4 was detected by MFCC-28 with a shap value of -0.1756 . There was more than one microphone .",
      "N . There was more than one microphone .",
      "No .",
      "No .  Yes, person 4 was detected by MFCC-28 with a shap value of -0.1756 . There was more than one microphone .",
      "No . There was more than one microphone ."
    ],
    "new_mr": "<inform> inform ( <response> response: [ No ], <classification> classification: [ spoof ], <edit_type> edit type: [ multi_microphone ], <mic_quantity> mic quantity: [ >1 ]> )"
  },
  {
    "mr": "inform(interpreter[SHAP])",
    "ref": [
      "the audio sample was used in a SVM model tasked at detecting speaker id, determined to be 8 .",
      "The  values indicate the contribution of the features on the outcome of the classification model .",
      "The SHAP values indicate the contribution of the features on the outcome of the classification model . The SHAP values indicate the contribution of the features on the outcome of the classification model .",
      "the audio sample was used in a SVM model tasked at detecting speaker id, determined to be 8 . The SHAP values indicate the contribution of the features on the outcome of the classification model .",
      "the audio sample was used in a SVM model tasked at detecting speaker id, determined to be 8 .",
      "The  values indicate the contribution of the features on the outcome of the classification model .",
      "The SHAP values indicate the contribution of the features on the outcome of the classification model . The SHAP values indicate the contribution of the features on the outcome of the classification model .",
      "the audio sample was used in a SVM model tasked at detecting speaker id, determined to be 8 . The SHAP values indicate the contribution of the features on the outcome of the classification model .",
      "the audio sample was used in a SVM model tasked at detecting speaker id, determined to be 8 .",
      "The  values indicate the contribution of the features on the outcome of the classification model .",
      "The SHAP values indicate the contribution of the features on the outcome of the classification model ."
    ],
    "new_mr": "<inform> inform ( <interpreter> interpreter: [ SHAP ]> )"
  },
  {
    "mr": "inform(response[No], classification[bonafide])",
    "ref": [
      "Yes, LFCC-46, which a shap value of -0.655, was used to detect the id of speaker 5 for the audio sample . No, the recording is not spoofed .",
      "No.",
      "bonafide, the recording is not spoofed .",
      ", the recording is not spoofed .",
      "Yes, LFCC-46, which a shap value of -0.655, was used to detect the id of speaker 5 for the audio sample .",
      "No, the recording is spoofed .",
      "No, the recording is not spoofed . No, the recording is not spoofed .",
      "Yes, LFCC-46, which a shap value of -0.655, was used to detect the id of speaker 5 for the audio sample . No, the recording is not spoofed .",
      "No.",
      "bonafide, the recording is not spoofed .",
      "No, the recording is not spoofed ."
    ],
    "new_mr": "<inform> inform ( <response> response: [ No ], <classification> classification: [ bonafide ]> )"
  },
  {
    "mr": "inform(response[yes], speaker_id[5], feature[LFCC-46], interpreter[shap], shap_value[-0.3294])",
    "ref": [
      " Yes, person 5 was detected by yes with a shap value of -0.3294 .",
      " Yes, person LFCC-46 was detected by LFCC-46 with a shap value of -0.3294 .",
      "Yes, the recording is converted .  Yes, person 5 was detected by LFCC-46 with a shap value of -0.3294 .",
      " Yes, person 5 was detected by LFCC-46 with a shap value of shap .",
      " Yes.3294 .",
      " Yes, person 5 was detected by LFCC-46 with a 5 value of -0.3294 .",
      " Yes, person 5 was detected by LFCC-46 with a shap value of -0. .",
      " Yes, person  was detected by LFCC-46 with a shap value of -0.3294 .",
      " Yes, person 5 was detected by LFCC with a shap value of -0.3294 .",
      " Yes, person 5 was detected by LFCC-46 with a s value of -0.3294 .",
      " Yes, person 5 was detected by LFCC-46 with a shap value of -0.3294 ."
    ],
    "new_mr": "<inform> inform ( <response> response: [ yes ], <speaker_id> speaker id: [ 5 ], <feature> feature: [ LFCC-46 ], <interpreter> interpreter: [ shap ], <shap_value> shap value: [ -0.3294 ]> )"
  },
  {
    "mr": "inform(classification[spoof], known_mic_signature[digital])",
    "ref": [
      "The signature is consistent with a spoof microphone . ",
      "yes, MFCC-9 was used to determine speaker id . The signature is consistent with a digital microphone .",
      "The signature is consistent with a digital microphone . The signature is consistent with a digital microphone .",
      "yes, MFCC-9 was used to determine speaker id .",
      "The signature is consistent with a di microphone . ",
      "The signature is consistent with a spoof microphone . ",
      "yes, MFCC-9 was used to determine speaker id . The signature is consistent with a digital microphone .",
      "The signature is consistent with a digital microphone . The signature is consistent with a digital microphone .",
      "yes, MFCC-9 was used to determine speaker id .",
      "The signature is consistent with a di microphone . ",
      "The signature is consistent with a digital microphone . "
    ],
    "new_mr": "<inform> inform ( <classification> classification: [ spoof ], <known_mic_signature> known mic signature: [ digital ]> )"
  },
  {
    "mr": "inform(response[Yes], classification[spoofed])",
    "ref": [
      "Yes . ",
      " , the recording is fake . ",
      "shap determined that the MFCC-18 feature was one of the more important features by assigning it a value of -0.1509 .",
      "shap determined that the MFCC-18 feature was one of the more important features by assigning it a value of -0.1509 . Yes , the recording is fake .",
      "spoofed , the recording is fake . ",
      "Yes , the recording is fake . Yes , the recording is fake .",
      "Yes . ",
      " , the recording is fake . ",
      "shap determined that the MFCC-18 feature was one of the more important features by assigning it a value of -0.1509 .",
      "shap determined that the MFCC-18 feature was one of the more important features by assigning it a value of -0.1509 . Yes , the recording is fake .",
      "Yes , the recording is fake . "
    ],
    "new_mr": "<inform> inform ( <response> response: [ Yes ], <classification> classification: [ spoofed ]> )"
  },
  {
    "mr": "inform(response[yes], speaker_id[2], feature[MFCC-15], interpreter[shap], shap_value[0.1546])",
    "ref": [
      " Yes, person 2 was detected by 2 with a shap value of 0.1546 .",
      " Yes, person 2 was detected by MFCC-15 with a yes value of 0.1546 .",
      " Yes, person 2 was detected by MFCC-15 with a  value of 0.1546 .",
      " Yes.1546 .",
      "Yes, PSRCC-12, which a shap value of -0.5073, was used to detect the sample as bonafide .",
      " Yes, person  was detected by MFCC-15 with a shap value of 0.1546 .",
      " Yes, person 2 was detected by MFCC-15 with a shap value of yes .",
      "Yes, PSRCC-12, which a shap value of -0.5073, was used to detect the sample as bonafide .  Yes, person 2 was detected by MFCC-15 with a shap value of 0.1546 .",
      " Yes, person 2 was detected by MFCC-15 with a shap value of 0.1 .",
      "Yes, person 2 was detected by MFCC-15 with a shap value of 0.1546 .  Yes, person 2 was detected by MFCC-15 with a shap value of 0.1546 .",
      " Yes, person 2 was detected by MFCC-15 with a shap value of 0.1546 ."
    ],
    "new_mr": "<inform> inform ( <response> response: [ yes ], <speaker_id> speaker id: [ 2 ], <feature> feature: [ MFCC-15 ], <interpreter> interpreter: [ shap ], <shap_value> shap value: [ 0.1546 ]> )"
  },
  {
    "mr": "inform(response[yes], speaker_id[6], feature[MFCC-10], interpreter[shap], shap_value[-0.2208])",
    "ref": [
      " Yes.2208 .",
      "Yes, person 6 was detected by MFCC-10 with a shap value of -0.2208 .  Yes, person 6 was detected by MFCC-10 with a shap value of -0.2208 .",
      " Yes, person 6 was detected by MFCC-10 with a shap value of yes .",
      " Yes, person 6 was detected by MFCC-1 with a shap value of -0.2208 .",
      " Yes, person shap was detected by MFCC-10 with a shap value of -0.2208 .",
      "Yes, GTCC-13, which a shap value of -1, was used to detect the sample as bonafide .  Yes, person 6 was detected by MFCC-10 with a shap value of -0.2208 .",
      " Yes, person  was detected by MFCC-10 with a shap value of -0.2208 .",
      " Yes, person 6 was detected by MFCC-10 with a shap value of - .",
      " Yes, person 6 was detected by MFCC-10 with a 6 value of -0.2208 .",
      "Yes, GTCC-13, which a shap value of -1, was used to detect the sample as bonafide .",
      " Yes, person 6 was detected by MFCC-10 with a shap value of -0.2208 ."
    ],
    "new_mr": "<inform> inform ( <response> response: [ yes ], <speaker_id> speaker id: [ 6 ], <feature> feature: [ MFCC-10 ], <interpreter> interpreter: [ shap ], <shap_value> shap value: [ -0.2208 ]> )"
  },
  {
    "mr": "inform(interpreter[shap], important[LFCC-51], shap_value[-0.7772])",
    "ref": [
      " shap determined that the -0.7772 feature was one of the more important features by assigning it a value of -0.7772 .",
      " shap determined that the LFCC-51 feature was one of the more important features by assigning it a value of -0.77 .",
      "shap determined that the LFCC-27 feature was one of the more important features by assigning it a value of 0.8773 .",
      " shap determined that the LFCC-51 feature was one of the more important features by assigning it a value of LFCC-51 .",
      " -0.7772 determined that the LFCC-51 feature was one of the more important features by assigning it a value of -0.7772 .",
      " sh determined that the LFCC-51 feature was one of the more important features by assigning it a value of -0.7772 .",
      "shap determined that the LFCC-27 feature was one of the more important features by assigning it a value of 0.8773 .  shap determined that the LFCC-51 feature was one of the more important features by assigning it a value of -0.7772 .",
      " shap determined that the LFCC- feature was one of the more important features by assigning it a value of -0.7772 .",
      "shap determined that the LFCC-51 feature was one of the more important features by assigning it a value of -0.7772 .  shap determined that the LFCC-51 feature was one of the more important features by assigning it a value of -0.7772 .",
      " shap determined that the -0.7772 feature was one of the more important features by assigning it a value of -0.7772 .",
      " shap determined that the LFCC-51 feature was one of the more important features by assigning it a value of -0.7772 ."
    ],
    "new_mr": "<inform> inform ( <interpreter> interpreter: [ shap ], <important> important: [ LFCC-51 ], <shap_value> shap value: [ -0.7772 ]> )"
  },
  {
    "mr": "inform(extracted[MSRCC], model[CNN], important[MSRCC-6], classification[bonafide])",
    "ref": [
      " the audio sample had MSRCC features extracted and MSRCC-6 was determined to have a large impact on the CNN model that determined the sample to be bon .",
      " the audio sample had MSRCC-6 features extracted and MSRCC-6-6 was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      "the audio sample had MSRCC features extracted and MSRCC-6 was determined to have a large impact on the CNN model that determined the sample to be bonafide .  the audio sample had MSRCC features extracted and MSRCC-6 was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      " the audio sample had MSRCC features extracted and MSRCC-6 was determined to have a large impact on the MSRCC model that determined the sample to be bonafide .",
      " the audio sample had MSRCC features extracted and bonafide was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      " the audio sample had MSRCC features extracted and MSRCC was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      " the audio sample had M features extracted and M-6 was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      " the audio sample had MSRCC features extracted and MSRCC-6 was determined to have a large impact on the C model that determined the sample to be bonafide .",
      "Yes, LFCC-51, which a shap value of -0.5435, was used to detect the id of speaker 5 for the audio sample .  the audio sample had MSRCC features extracted and MSRCC-6 was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      " the audio sample had MSRCC features extracted and MSRCC-6 was determined to have a large impact on the CNN model that determined the sample to be CNN .",
      " the audio sample had MSRCC features extracted and MSRCC-6 was determined to have a large impact on the CNN model that determined the sample to be bonafide ."
    ],
    "new_mr": "<inform> inform ( <extracted> extracted: [ MSRCC ], <model> model: [ CNN ], <important> important: [ MSRCC-6 ], <classification> classification: [ bonafide ]> )"
  },
  {
    "mr": "inform(response[Yes], interpreter[shap], important[LFCC-32], classification[bonafide], shap_value[-0.9762])",
    "ref": [
      " Yes, shap, which a shap value of -0.9762, was used to detect the sample as bonafide .",
      " bonafide, LFCC-32, which a shap value of -0.9762, was used to detect the sample as bonafide .",
      " Yes, LFCC-32, which a -0.9762 value of -0.9762, was used to detect the sample as bonafide .",
      " Yes, LFCC-32, which a shap value of -0.9762.",
      " Yes, which a shap value of -0.9762, was used to detect the sample as bonafide .",
      " Yes, LFCC-32, which a shap value of -0.9762, was used to detect the sample as bonafid .",
      "Yes, person 2 was detected by LFCC-9 with a shap value of 0.9994 .",
      "Yes, person 2 was detected by LFCC-9 with a shap value of 0.9994 .  Yes, LFCC-32, which a shap value of -0.9762, was used to detect the sample as bonafide .",
      " Yes, LFCC-32, which a shap value of -0.9, was used to detect the sample as bonafide .",
      " Yes, LFCC-32, was used to detect the sample as bonafide .",
      " Yes, LFCC-32, which a shap value of -0.9762, was used to detect the sample as bonafide ."
    ],
    "new_mr": "<inform> inform ( <response> response: [ Yes ], <interpreter> interpreter: [ shap ], <important> important: [ LFCC-32 ], <classification> classification: [ bonafide ], <shap_value> shap value: [ -0.9762 ]> )"
  },
  {
    "mr": "inform(extracted[LFCC], model[CNN], important[LFCC-18], classification[replayed])",
    "ref": [
      " the audio sample had L features extracted and L-18 was determined to have a large impact on the CNN model that determined the sample to be replayed .",
      " the audio sample had LFCC features extracted and LFCC-18 was determined to have a large impact on the CNN model that determined the sample to be replay .",
      " the audio sample had LFCC features extracted and LFCC-18 was determined to have a large impact on the CNN model that determined the sample to be LFCC-18 .",
      " the audio sample had LFCC features extracted and LFCC-18 was determined to have a large impact on the  model that determined the sample to be replayed .",
      "Yes, person 2 was detected by MFCC-35 with a shap value of 0.4133 .  the audio sample had LFCC features extracted and LFCC-18 was determined to have a large impact on the CNN model that determined the sample to be replayed .",
      " the audio sample had LFCC features extracted and LFCC-18 was determined to have a large impact on the replayed model that determined the sample to be replayed .",
      " the audio sample had LFCC features extracted and LFC was determined to have a large impact on the CNN model that determined the sample to be replayed .",
      "the audio sample had LFCC features extracted and LFCC-18 was determined to have a large impact on the CNN model that determined the sample to be replayed .  the audio sample had LFCC features extracted and LFCC-18 was determined to have a large impact on the CNN model that determined the sample to be replayed .",
      " the audio sample had LFCC features extracted and CNN was determined to have a large impact on the CNN model that determined the sample to be replayed .",
      "Yes, person 2 was detected by MFCC-35 with a shap value of 0.4133 .",
      " the audio sample had LFCC features extracted and LFCC-18 was determined to have a large impact on the CNN model that determined the sample to be replayed ."
    ],
    "new_mr": "<inform> inform ( <extracted> extracted: [ LFCC ], <model> model: [ CNN ], <important> important: [ LFCC-18 ], <classification> classification: [ replayed ]> )"
  },
  {
    "mr": "inform(extracted[LFCC], model[CNN], important[LFCC-11], classification[bonafide])",
    "ref": [
      "the audio sample had LFCC features extracted and LFCC-11 was determined to have a large impact on the CNN model that determined the sample to be bonafide .  the audio sample had LFCC features extracted and LFCC-11 was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      " the audio sample had LFCC features extracted and LFCC-11 was determined to have a large impact on the CNN model that determined the sample to be bo .",
      " the audio sample had LFCC features extracted and LFCC-11 was determined to have a large impact on the CNN model that determined the sample to be CNN .",
      "shap determined that the GTCC-6 feature was one of the more important features by assigning it a value of 0 .",
      " the audio sample had LFCC features extracted and LFCC-11 was determined to have a large impact on the bonafide model that determined the sample to be bonafide .",
      " the audio sample had LFCC features extracted and LFCC- was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      " the audio sample had LFCC-11 features extracted and LFCC-11-11 was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      " the audio sample had LFCC features extracted and bonafide was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      " the audio sample had L features extracted and L-11 was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      " the audio sample had LFCC features extracted and LFCC-11 was determined to have a large impact on the C model that determined the sample to be bonafide .",
      " the audio sample had LFCC features extracted and LFCC-11 was determined to have a large impact on the CNN model that determined the sample to be bonafide ."
    ],
    "new_mr": "<inform> inform ( <extracted> extracted: [ LFCC ], <model> model: [ CNN ], <important> important: [ LFCC-11 ], <classification> classification: [ bonafide ]> )"
  },
  {
    "mr": "inform(classification[spoofed], spoof_type[replayed])",
    "ref": [
      "The recording appears to be a copy . The recording appears to be a copy .",
      "Yes, person 7 was detected by MSRCC-9 with a shap value of -0.9806 .",
      "Yes, person 7 was detected by MSRCC-9 with a shap value of -0.9806 . The recording appears to be a copy .",
      "The recording appears to be a copy . The recording appears to be a copy .",
      "Yes, person 7 was detected by MSRCC-9 with a shap value of -0.9806 .",
      "Yes, person 7 was detected by MSRCC-9 with a shap value of -0.9806 . The recording appears to be a copy .",
      "The recording appears to be a copy . The recording appears to be a copy .",
      "Yes, person 7 was detected by MSRCC-9 with a shap value of -0.9806 .",
      "Yes, person 7 was detected by MSRCC-9 with a shap value of -0.9806 . The recording appears to be a copy .",
      "The recording appears to be a copy . The recording appears to be a copy .",
      "The recording appears to be a copy . "
    ],
    "new_mr": "<inform> inform ( <classification> classification: [ spoofed ], <spoof_type> spoof type: [ replayed ]> )"
  },
  {
    "mr": "inform(interpreter[shap], important[LFCC-33], shap_value[0.101])",
    "ref": [
      " shap determined that the L feature was one of the more important features by assigning it a value of 0.101 .",
      "That microphone was used for 5 seconds .  shap determined that the LFCC-33 feature was one of the more important features by assigning it a value of 0.101 .",
      " shap determined that the LFCC-33 feature was one of the more important features by assigning it a value of LFCC-33 .",
      " shap determined that the shap feature was one of the more important features by assigning it a value of 0.101 .",
      "shap determined that the LFCC-33 feature was one of the more important features by assigning it a value of 0.101 .  shap determined that the LFCC-33 feature was one of the more important features by assigning it a value of 0.101 .",
      "That microphone was used for 5 seconds .",
      " 0.101 determined that the LFCC-33 feature was one of the more important features by assigning it a value of 0.101 .",
      " s determined that the LFCC-33 feature was one of the more important features by assigning it a value of 0.101 .",
      " shap determined that the LFCC-33 feature was one of the more important features by assigning it a value of 0. .",
      " shap determined that the L feature was one of the more important features by assigning it a value of 0.101 .",
      " shap determined that the LFCC-33 feature was one of the more important features by assigning it a value of 0.101 ."
    ],
    "new_mr": "<inform> inform ( <interpreter> interpreter: [ shap ], <important> important: [ LFCC-33 ], <shap_value> shap value: [ 0.101 ]> )"
  },
  {
    "mr": "inform(response[Yes], interpreter[shap], important[MFCC-2], classification[replayed], shap_value[0.1331])",
    "ref": [
      " Yes, shap, which a shap value of 0.1331, was used to detect the sample as replayed .",
      " Yes, MFCC-2, which a shap value of 0, was used to detect the sample as replayed .",
      " Yes, MFCC-2, which a  value of 0.1331, was used to detect the sample as replayed .",
      " Yes, MFCC-, which a shap value of 0.1331, was used to detect the sample as replayed .",
      " Yes, MFCC-2, which a shap value of 0.1331, was used to detect the sample as 0.1331 .",
      " Yes.1331, was used to detect the sample as replayed .",
      "Yes, MFCC-2, which a shap value of 0.1331, was used to detect the sample as replayed .  Yes, MFCC-2, which a shap value of 0.1331, was used to detect the sample as replayed .",
      " Yes, MFCC-2, was used to detect the sample as replayed .",
      " , MFCC-2, which a shap value of 0.1331, was used to detect the sample as replayed .",
      " Yes, MFCC-2, which a shap value of 0.1331, was used to detect the sample as replaye .",
      " Yes, MFCC-2, which a shap value of 0.1331, was used to detect the sample as replayed ."
    ],
    "new_mr": "<inform> inform ( <response> response: [ Yes ], <interpreter> interpreter: [ shap ], <important> important: [ MFCC-2 ], <classification> classification: [ replayed ], <shap_value> shap value: [ 0.1331 ]> )"
  },
  {
    "mr": "inform(response[Yes], interpreter[shap], important[LFCC-41], classification[replayed], shap_value[0.5433])",
    "ref": [
      " Yes, shap, which a shap value of 0.5433, was used to detect the sample as replayed .",
      " Yes, LFCC-41, which a 0.5433 value of 0.5433, was used to detect the sample as replayed .",
      " Yes, LFCC-41, which a shap value of 0.5, was used to detect the sample as replayed .",
      " Yes, which a shap value of 0.5433, was used to detect the sample as replayed .",
      " Yes, LFCC-41, which a shap value of 0.5433.",
      " Yes, LFCC-41, which a sha value of 0.5433, was used to detect the sample as replayed .",
      " Yes, LFCC-41.5433, was used to detect the sample as replayed .",
      " Yes.5433, was used to detect the sample as replayed .",
      "Yes, a professional mixer was used .  Yes, LFCC-41, which a shap value of 0.5433, was used to detect the sample as replayed .",
      " Yes, LFCC-41, was used to detect the sample as replayed .",
      " Yes, LFCC-41, which a shap value of 0.5433, was used to detect the sample as replayed ."
    ],
    "new_mr": "<inform> inform ( <response> response: [ Yes ], <interpreter> interpreter: [ shap ], <important> important: [ LFCC-41 ], <classification> classification: [ replayed ], <shap_value> shap value: [ 0.5433 ]> )"
  },
  {
    "mr": "inform(general)",
    "ref": [
      "The Mel Frequency Cepstral Coefficients ( MFCC ) are used for automatic speech recognition .  The mel in the name describes the perceived pitch. The linear modeling of speech generation serves as the actual basis for the generation of MFCCs : A periodic excitation signal ( vocal cords ) is formed by a \" linear filter \" ( mouth , tongue , nasal cavities , ... ) . The filter ( or its impulse response ) is primarily important for speech recognition , since \" what was said \" and not \" in which pitch \" is of interest for the analysis .",
      "The mel in the name describes the perceived pitch. The mel in the name describes the perceived pitch. The mel in the name describes the perceived pitch. The Mel Frequency Cepstral Coefficients ( MFCC ) are used for automatic speech recognition . The mel in the name describes the perceived pitch. They lead to a compact representation of the frequency spectrum. The mel in the name describes the perceived pitch. The linear modeling of speech generation serves as the actual basis for the generation of MFCCs : A periodic excitation signal ( vocal cords ) is formed by a \" linear filter \" ( mouth , tongue , nasal cavities , ... ) . The filter ( or its impulse response ) is primarily important for speech recognition , since \" what was said \" and not \" in which pitch \" is of interest for the analysis .",
      "The mel in the name describes the perceived pitch. The Mel Frequency Cepstral Coefficients ( MFCC ) are used for automatic speech recognition . They lead to a compact representation of the frequency spectrum. The mel in the name describes the perceived pitch. The linear modeling of speech generation serves as the actual basis for the generation of MFCCs : A periodic excitation signal ( vocal cords ) is formed by a \" linear filter \" ( mouth , tongue , nasal cavities , ... ) . The filter ( or its impulse response ) is primarily important for speech recognition , since \" what was said \" and not \" in which pitch \" is of interest for the analysis .",
      "The Mel Frequency Cepstral Coefficients ( MFCC ) are used for automatic speech recognition . They lead to a compact representation of the frequency spectrum. The mel in the name describes the perceived pitch. The linear modeling of speech generation serves as the actual basis for the generation of MFCCs : A periodic excitation signal ( vocal cords ) is formed by a \" linear filter \" ( mouth , nasal cavities , ... ) . The filter ( or its impulse response ) is primarily important for speech recognition , since \" what was said \" and not \" in which pitch \" is of interest for the analysis .",
      "The Mel Frequency Cepstral Coefficients ( MFCC ) are used for automatic speech recognition . They lead to a compact representation of the frequency spectrum. The mel in the name describes the perceived pitch. The linear modeling of speech generation serves as the actual basis for the generation of MFCCs : A periodic excitation signal ( vocal cords ) is formed by a \" linear filter \" ( mouth , tongue ... ) . The filter ( or its impulse response ) is primarily important for speech recognition , since \" what was said \" and not \" in which pitch \" is of interest for the analysis .",
      "Yes, LFCC-13, which a shap value of 0.839, was used to detect the id of speaker 6 for the audio sample .  Yes, LFCC-13, which a shap value of 0.839, was used to detect the id of speaker 6 for the audio sample .  Yes, LFCC-13, which a shap value of 0.839, was used to detect the id of speaker 6 for the audio sample .  Yes, LFCC-13, which a shap value of 0.839, was used to detect the id of speaker 6 for the audio sample .  Yes, LFCC-13, which a shap value of 0.839, was used to detect the id of speaker 6 for the audio sample .",
      "The Mel Frequency Cepstral Coefficients ( MFCC ) are used for automatic speech recognition . They lead to a compact representation of the frequency spectrum. The mel in the name describes the perceived pitch.  Yes, LFCC-13, which a shap value of 0.839, was used to detect the id of speaker 6 for the audio sample . The filter ( or its impulse response ) is primarily important for speech recognition , since \" what was said \" and not \" in which pitch \" is of interest for the analysis .",
      "The Mel Frequency Cepstral Coefficients ( MFCC ) are used for automatic speech recognition . They lead to a compact representation of the frequency spectrum. The mel in the name describes the perceived pitch. The linear modeling of speech generation serves as the actual basis for the generation of MFCCs : A periodic excitation signal ( vocal cords ) is formed by a \" linear filter \" ( mouth , tongue , nasal cavities , ... ) . The filter ( or its impulse response ) is primarily important for speech recognition , since \" what was said \" and \" in which pitch \" is of interest for the analysis .",
      "The Mel Frequency Cepstral Coefficients ( MFCC ) are used for automatic speech recognition .  Yes, LFCC-13, which a shap value of 0.839, was used to detect the id of speaker 6 for the audio sample . They lead to a compact representation of the frequency spectrum.  Yes, LFCC-13, which a shap value of 0.839, was used to detect the id of speaker 6 for the audio sample .  Yes, LFCC-13, which a shap value of 0.839, was used to detect the id of speaker 6 for the audio sample . The mel in the name describes the perceived pitch. The linear modeling of speech generation serves as the actual basis for the generation of MFCCs : A periodic excitation signal ( vocal cords ) is formed by a \" linear filter \" ( mouth , tongue , nasal cavities , ... ) . The filter ( or its impulse response ) is primarily important for speech recognition , since \" what was said \" and not \" in which pitch \" is of interest for the analysis .",
      "The mel in the name describes the perceived pitch. The mel in the name describes the perceived pitch. The mel in the name describes the perceived pitch. The Mel Frequency Cepstral Coefficients ( MFCC ) are used for automatic speech recognition . The mel in the name describes the perceived pitch. The mel in the name describes the perceived pitch. They lead to a compact representation of the frequency spectrum. The mel in the name describes the perceived pitch. The linear modeling of speech generation serves as the actual basis for the generation of MFCCs : A periodic excitation signal ( vocal cords ) is formed by a \" linear filter \" ( mouth , tongue , nasal cavities , ... ) . The filter ( or its impulse response ) is primarily important for speech recognition , since \" what was said \" and not \" in which pitch \" is of interest for the analysis .",
      "The Mel Frequency Cepstral Coefficients ( MFCC ) are used for automatic speech recognition . They lead to a compact representation of the frequency spectrum. The mel in the name describes the perceived pitch. The linear modeling of speech generation serves as the actual basis for the generation of MFCCs : A periodic excitation signal ( vocal cords ) is formed by a \" linear filter \" ( mouth , tongue , nasal cavities , ... ) . The filter ( or its impulse response ) is primarily important for speech recognition , since \" what was said \" and not \" in which pitch \" is of interest for the analysis ."
    ],
    "new_mr": "<inform> inform ( > )"
  },
  {
    "mr": "inform(response[Yes], interpreter[shap], important[MFCC-30], classification[bonafide], shap_value[-0.1903])",
    "ref": [
      " Ye, MFCC-30, which a shap value of -0.1903, was used to detect the sample as bonafide .",
      " Yes, MFCC-30, which a shap value of -0.1903, was used to detect the sample as MFCC-30 .",
      " Yes, shap, which a shap value of -0.1903, was used to detect the sample as bonafide .",
      "shap determined that the MFCC-9 feature was one of the more important features by assigning it a value of -0.6735 .",
      " Yes, MFCC-30, which a shap value of bonafide, was used to detect the sample as bonafide .",
      " shap, MFCC-30, which a shap value of -0.1903, was used to detect the sample as bonafide .",
      " Yes, MFCC-30, which a shap value of -, was used to detect the sample as bonafide .",
      " Yes, which a shap value of -0.1903, was used to detect the sample as bonafide .",
      " Yes, MFCC-30, which a Yes value of -0.1903, was used to detect the sample as bonafide .",
      " Yes, MFCC-30, which a shap value of -0.1903.",
      " Yes, MFCC-30, which a shap value of -0.1903, was used to detect the sample as bonafide ."
    ],
    "new_mr": "<inform> inform ( <response> response: [ Yes ], <interpreter> interpreter: [ shap ], <important> important: [ MFCC-30 ], <classification> classification: [ bonafide ], <shap_value> shap value: [ -0.1903 ]> )"
  },
  {
    "mr": "inform(interpreter[shap], important[LFCC-30], shap_value[0.7143])",
    "ref": [
      " shap determined that the LFCC-30 feature was one of the more important features by assigning it a value of 0. .",
      " shap determined that the L feature was one of the more important features by assigning it a value of 0.7143 .",
      " LFCC-30 determined that the LFCC-30 feature was one of the more important features by assigning it a value of 0.7143 .",
      "the audio sample had LFCC features extracted and LFCC-41 was determined to have a large impact on the CNN model that determined the sample to be replayed .  shap determined that the LFCC-30 feature was one of the more important features by assigning it a value of 0.7143 .",
      "shap determined that the LFCC-30 feature was one of the more important features by assigning it a value of 0.7143 .  shap determined that the LFCC-30 feature was one of the more important features by assigning it a value of 0.7143 .",
      " shap determined that the LFCC-30 feature was one of the more important features by assigning it a value of LFCC-30 .",
      "the audio sample had LFCC features extracted and LFCC-41 was determined to have a large impact on the CNN model that determined the sample to be replayed .",
      " s determined that the LFCC-30 feature was one of the more important features by assigning it a value of 0.7143 .",
      " shap determined that the 0.7143 feature was one of the more important features by assigning it a value of 0.7143 .",
      " shap determined that the LFCC-30 feature was one of the more important features by assigning it a value of 0. .",
      " shap determined that the LFCC-30 feature was one of the more important features by assigning it a value of 0.7143 ."
    ],
    "new_mr": "<inform> inform ( <interpreter> interpreter: [ shap ], <important> important: [ LFCC-30 ], <shap_value> shap value: [ 0.7143 ]> )"
  },
  {
    "mr": "inform(response[yes], speaker_id[7], feature[MFCC-31], interpreter[shap], shap_value[-0.7969])",
    "ref": [
      " Yes, person yes was detected by MFCC-31 with a shap value of -0.yes969 .",
      "yes, GTCC-9 was used to determine speaker id .  Yes, person 7 was detected by MFCC-31 with a shap value of -0.7969 .",
      " Yes, person 7 was detected by MFCC-31 with a sh value of -0.7969 .",
      " Yes, person 7 was detected by  with a shap value of -0.7969 .",
      " Yes, person 7 was detected by MFCC-31 with a shap value of MFCC-31 .",
      " Yes.7969 .",
      " Yes, person 7 was detected by MFCC-31 with a shap value of  .",
      " Yes, person 7 was detected by MFCC-31 with a yes value of -0.7969 .",
      " Yes, person 7 was detected by -0.7969 with a shap value of -0.7969 .",
      "Yes, person 7 was detected by MFCC-31 with a shap value of -0.7969 .  Yes, person 7 was detected by MFCC-31 with a shap value of -0.7969 .",
      " Yes, person 7 was detected by MFCC-31 with a shap value of -0.7969 ."
    ],
    "new_mr": "<inform> inform ( <response> response: [ yes ], <speaker_id> speaker id: [ 7 ], <feature> feature: [ MFCC-31 ], <interpreter> interpreter: [ shap ], <shap_value> shap value: [ -0.7969 ]> )"
  },
  {
    "mr": "inform(extracted[LFCC], model[CNN], important[LFCC-52], classification[replayed])",
    "ref": [
      "There appears to be a cloned voice on the audio .",
      " the audio sample had LFCC features extracted and LFCC-52 was determined to have a large impact on the C model that determined the sample to be replayed .",
      " the audio sample had LFCC features extracted and LFCC was determined to have a large impact on the CNN model that determined the sample to be replayed .",
      " the audio sample had replayed features extracted and replayed-52 was determined to have a large impact on the CNN model that determined the sample to be replayed .",
      " the audio sample had LFCC features extracted and LFCC-52 was determined to have a large impact on the CNN model that determined the sample to be r .",
      " the audio sample had LFCC features extracted and LFCC- was determined to have a large impact on the CNN model that determined the sample to be replayed .",
      " the audio sample had LFCC features extracted and LFCC-52 was determined to have a large impact on the CNN model that determined the sample to be CNN .",
      "the audio sample had LFCC features extracted and LFCC-52 was determined to have a large impact on the CNN model that determined the sample to be replayed .  the audio sample had LFCC features extracted and LFCC-52 was determined to have a large impact on the CNN model that determined the sample to be replayed .",
      " the audio sample had LF features extracted and LF-52 was determined to have a large impact on the CNN model that determined the sample to be replayed .",
      " the audio sample had LFCC features extracted and LFCC-52 was determined to have a large impact on the replayed model that determined the sample to be replayed .",
      " the audio sample had LFCC features extracted and LFCC-52 was determined to have a large impact on the CNN model that determined the sample to be replayed ."
    ],
    "new_mr": "<inform> inform ( <extracted> extracted: [ LFCC ], <model> model: [ CNN ], <important> important: [ LFCC-52 ], <classification> classification: [ replayed ]> )"
  },
  {
    "mr": "inform(response[Yes], classification[spoofed])",
    "ref": [
      "Ye , the recording has been tampered with .",
      "spoofed , the recording has been tampered with .",
      "Yes , the recording has been tampered with . Yes , the recording has been tampered with .",
      "Yes .",
      "Ye , the recording has been tampered with .",
      "spoofed , the recording has been tampered with .",
      "Yes , the recording has been tampered with . Yes , the recording has been tampered with .",
      "Yes .",
      "Ye , the recording has been tampered with .",
      "spoofed , the recording has been tampered with .",
      "Yes , the recording has been tampered with ."
    ],
    "new_mr": "<inform> inform ( <response> response: [ Yes ], <classification> classification: [ spoofed ]> )"
  },
  {
    "mr": "inform(extracted[MSRCC], model[CNN], important[MSRCC-12], classification[bonafide])",
    "ref": [
      "the audio sample had MSRCC features extracted and MSRCC-12 was determined to have a large impact on the CNN model that determined the sample to be bonafide .  the audio sample had MSRCC features extracted and MSRCC-12 was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      " the audio sample had MSRCC features extracted and MSRCC-12 was determined to have a large impact on the CNN model that determined the sample to be bonafid .",
      " the audio sample had MSRCC features extracted and  was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      " the audio sample had MSRCC features extracted and MSRCC was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      "There are different microphone signatures .",
      " the audio sample had MSRCC features extracted and MSRCC-12 was determined to have a large impact on the CNN model that determined the sample to be MSRCC-12 .",
      " the audio sample had MSRCC features extracted and MSRCC-12 was determined to have a large impact on the  model that determined the sample to be bonafide .",
      " the audio sample had bonafide features extracted and bonafide-12 was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      "There are different microphone signatures .  the audio sample had MSRCC features extracted and MSRCC-12 was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      " the audio sample had MSR features extracted and MSR-12 was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      " the audio sample had MSRCC features extracted and MSRCC-12 was determined to have a large impact on the CNN model that determined the sample to be bonafide ."
    ],
    "new_mr": "<inform> inform ( <extracted> extracted: [ MSRCC ], <model> model: [ CNN ], <important> important: [ MSRCC-12 ], <classification> classification: [ bonafide ]> )"
  },
  {
    "mr": "inform(classification[spoof], edit_type[multi_microphone], mic_quantity[2])",
    "ref": [
      "SHAP determined that CQCC-2, MFCC-6, LFCC-0, MFCC-1 had the highest impact on classification .",
      "There were 2 microphones used . There were 2 microphones used .",
      "SHAP determined that CQCC-2, MFCC-6, LFCC-0, MFCC-1 had the highest impact on classification . There were 2 microphones used .",
      "There were spoof microphones used .",
      "There were  microphones used .",
      "SHAP determined that CQCC-2, MFCC-6, LFCC-0, MFCC-1 had the highest impact on classification .",
      "There were 2 microphones used . There were 2 microphones used .",
      "SHAP determined that CQCC-2, MFCC-6, LFCC-0, MFCC-1 had the highest impact on classification . There were 2 microphones used .",
      "There were spoof microphones used .",
      "There were  microphones used .",
      "There were 2 microphones used ."
    ],
    "new_mr": "<inform> inform ( <classification> classification: [ spoof ], <edit_type> edit type: [ multi_microphone ], <mic_quantity> mic quantity: [ 2 ]> )"
  },
  {
    "mr": "inform(response[Yes], interpreter[shap], important[LFCC-45], classification[replayed], shap_value[0.7923])",
    "ref": [
      " 0.7923, LFCC-45, which a shap value of 0.7923, was used to detect the sample as replayed .",
      " Yes, LFCC-45, which a LFCC-45 value of 0.7923, was used to detect the sample as replayed .",
      " Yes, LFCC-45, which a shap value of 0., was used to detect the sample as replayed .",
      " Yes, LFCC-45, which a shap value of 0.7923, was used to detect the sample as 0.7923 .",
      " Yes.7923, was used to detect the sample as replayed .",
      " Yes, LFCC-45, was used to detect the sample as replayed .",
      " Yes, LFCC-45.7923, was used to detect the sample as replayed .",
      " Yes, shap, which a shap value of 0.7923, was used to detect the sample as replayed .",
      "Yes, person 5 was detected by MFCC-1 with a shap value of 0.4636 .",
      " Yes, , which a shap value of 0.7923, was used to detect the sample as replayed .",
      " Yes, LFCC-45, which a shap value of 0.7923, was used to detect the sample as replayed ."
    ],
    "new_mr": "<inform> inform ( <response> response: [ Yes ], <interpreter> interpreter: [ shap ], <important> important: [ LFCC-45 ], <classification> classification: [ replayed ], <shap_value> shap value: [ 0.7923 ]> )"
  },
  {
    "mr": "inform(response[yes], speaker_id[7], feature[LFCC-18], interpreter[shap], shap_value[0.7479])",
    "ref": [
      " Yes, person 7 was detected by LFCC-18 with a shap value of  .",
      " Yes, person  was detected by LFCC-18 with a shap value of 0.49 .",
      " Yes, person 7 was detected by LFCC-18 with a sha value of 0.7479 .",
      " Yes, person yes was detected by LFCC-18 with a shap value of 0.yes4yes9 .",
      "Yes, GTCC-9, which a shap value of -1, was used to detect the sample as bonafide .  Yes, person 7 was detected by LFCC-18 with a shap value of 0.7479 .",
      " Yes.7479 .",
      "Yes, person 7 was detected by LFCC-18 with a shap value of 0.7479 .  Yes, person 7 was detected by LFCC-18 with a shap value of 0.7479 .",
      " Yes, person 7 was detected by LFC with a shap value of 0.7479 .",
      " Yes, person 7 was detected by LFCC-18 with a 0.7479 value of 0.7479 .",
      " Yes, person 7 was detected by LFCC-18 with a shap value of LFCC-18 .",
      " Yes, person 7 was detected by LFCC-18 with a shap value of 0.7479 ."
    ],
    "new_mr": "<inform> inform ( <response> response: [ yes ], <speaker_id> speaker id: [ 7 ], <feature> feature: [ LFCC-18 ], <interpreter> interpreter: [ shap ], <shap_value> shap value: [ 0.7479 ]> )"
  },
  {
    "mr": "inform(response[yes], speaker_id[4], feature[MFCC-28], interpreter[shap], shap_value[-0.1756])",
    "ref": [
      " Yes, person 4 was detected by MFCC-28 with a shap value of yes .",
      " Yes, person 4 was detected by -0.1756 with a shap value of -0.1756 .",
      " Yes, person 4 was detected by MFCC-28 with a 4 value of -0.1756 .",
      " Yes, person -0.1756 was detected by MFCC-28 with a shap value of -0.1756 .",
      "Yes, PSRCC-9, which a shap value of -0.9442, was used to detect the sample as bonafide .",
      " Yes, person 4 was detected by MFCC-28 with a  value of -0.1756 .",
      " Yes, person 4 was detected by MFCC-28 with a shap value of -0. .",
      " Yes.1756 .",
      "Yes, PSRCC-9, which a shap value of -0.9442, was used to detect the sample as bonafide .  Yes, person 4 was detected by MFCC-28 with a shap value of -0.1756 .",
      "Yes, person 4 was detected by MFCC-28 with a shap value of -0.1756 .  Yes, person 4 was detected by MFCC-28 with a shap value of -0.1756 .",
      " Yes, person 4 was detected by MFCC-28 with a shap value of -0.1756 ."
    ],
    "new_mr": "<inform> inform ( <response> response: [ yes ], <speaker_id> speaker id: [ 4 ], <feature> feature: [ MFCC-28 ], <interpreter> interpreter: [ shap ], <shap_value> shap value: [ -0.1756 ]> )"
  },
  {
    "mr": "inform(general)",
    "ref": [
      "shap determined that the LFCC-17 feature was one of the more important features by assigning it a value of 0.2636 .",
      "Spectral Centroid Magnitude Coefficients . Spectral Centroid Magnitude Coefficients .",
      "shap determined that the LFCC-17 feature was one of the more important features by assigning it a value of 0.2636 . Spectral Centroid Magnitude Coefficients .",
      "shap determined that the LFCC-17 feature was one of the more important features by assigning it a value of 0.2636 .",
      "Spectral Centroid Magnitude Coefficients . Spectral Centroid Magnitude Coefficients .",
      "shap determined that the LFCC-17 feature was one of the more important features by assigning it a value of 0.2636 . Spectral Centroid Magnitude Coefficients .",
      "shap determined that the LFCC-17 feature was one of the more important features by assigning it a value of 0.2636 .",
      "Spectral Centroid Magnitude Coefficients . Spectral Centroid Magnitude Coefficients .",
      "shap determined that the LFCC-17 feature was one of the more important features by assigning it a value of 0.2636 . Spectral Centroid Magnitude Coefficients .",
      "shap determined that the LFCC-17 feature was one of the more important features by assigning it a value of 0.2636 .",
      "Spectral Centroid Magnitude Coefficients ."
    ],
    "new_mr": "<inform> inform ( > )"
  },
  {
    "mr": "inform(classification[bonafide], edit_type[none], classified_by[feature])",
    "ref": [
      "No other feas detected TextToSpeech .",
      "Yes, LFCC-4, which a shap value of -0.069, was used to detect the sample as replayed . No other features detected TextToSpeech .",
      "No other features detected TextToSpeech . No other features detected TextToSpeech .",
      "No other bonafides detected TextToSpeech .",
      "Yes, LFCC-4, which a shap value of -0.069, was used to detect the sample as replayed .",
      "No other feas detected TextToSpeech .",
      "Yes, LFCC-4, which a shap value of -0.069, was used to detect the sample as replayed . No other features detected TextToSpeech .",
      "No other features detected TextToSpeech . No other features detected TextToSpeech .",
      "No other bonafides detected TextToSpeech .",
      "Yes, LFCC-4, which a shap value of -0.069, was used to detect the sample as replayed .",
      "No other features detected TextToSpeech ."
    ],
    "new_mr": "<inform> inform ( <classification> classification: [ bonafide ], <edit_type> edit type: [ none ], <classified_by> classified by: [ feature ]> )"
  },
  {
    "mr": "inform(interpreter[shap], important[GTCC-3], shap_value[0])",
    "ref": [
      " shap determined that the GTCC-3 feature was one of the more important features by assigning it a value of GTCC-3 .",
      " shap determined that the shap feature was one of the more important features by assigning it a value of 0 .",
      "shap determined that the GTCC-3 feature was one of the more important features by assigning it a value of 0 .  shap determined that the GTCC-3 feature was one of the more important features by assigning it a value of 0 .",
      "  determined that the GTCC-3 feature was one of the more important features by assigning it a value of 0 .",
      "Other features also idicate the audio sample is Bonafide .",
      " 0 determined that the GTCC-3 feature was one of the more important features by assigning it a value of 0 .",
      "Other features also idicate the audio sample is Bonafide .  shap determined that the GTCC-3 feature was one of the more important features by assigning it a value of 0 .",
      " shap determined that the GTCC-3 feature was one of the more important features by assigning it a value of  .",
      " shap determined that the  feature was one of the more important features by assigning it a value of 0 .",
      " shap determined that the GTCC-3 feature was one of the more important features by assigning it a value of GTCC-3 .",
      " shap determined that the GTCC-3 feature was one of the more important features by assigning it a value of 0 ."
    ],
    "new_mr": "<inform> inform ( <interpreter> interpreter: [ shap ], <important> important: [ GTCC-3 ], <shap_value> shap value: [ 0 ]> )"
  },
  {
    "mr": "inform(response[Yes], interpreter[shap], important[MFCC-29], classification[replayed], shap_value[0.9441])",
    "ref": [
      " Yes, MFCC-29, which a sh value of 0.9441, was used to detect the sample as replayed .",
      " Yes, MFCC-29.9441, was used to detect the sample as replayed .",
      " replayed, MFCC-29, which a shap value of 0.9441, was used to detect the sample as replayed .",
      " Yes, MFCC-29, which a shap value of 0.9441, was used to detect the sample as repla .",
      " Yes, MFCC, which a shap value of 0.9441, was used to detect the sample as replayed .",
      " Yes, MFCC-29, which a shap value of 0.9441, was used to detect the sample as Yes .",
      " Yes, MFCC-29, which a MFCC-29 value of 0.9441, was used to detect the sample as replayed .",
      " Yes.9441, was used to detect the sample as replayed .",
      " Yes, MFCC-29, which a shap value of , was used to detect the sample as replayed .",
      " Yes, MFCC-29, which a shap value of shap, was used to detect the sample as replayed .",
      " Yes, MFCC-29, which a shap value of 0.9441, was used to detect the sample as replayed ."
    ],
    "new_mr": "<inform> inform ( <response> response: [ Yes ], <interpreter> interpreter: [ shap ], <important> important: [ MFCC-29 ], <classification> classification: [ replayed ], <shap_value> shap value: [ 0.9441 ]> )"
  },
  {
    "mr": "inform(interpreter[SHAP], feature[CQCC-0], feature[MFCC-0], feature[LFCC-2], feature[MFCC-4])",
    "ref": [
      "SHAP determined that CQCC-0, LFCC-2, MFCC-4 had the highest impact on the classification .",
      "Yes , this is a replayed and  re-recorded sample .",
      "SHAP determined that CQCC-0, MFCC-0, LFCC-2.",
      "SHAP determined that CQCC-0, MFCC-0, LFCC-2, MFCC had the highest impact on the classification .",
      "SHAP determined that , MFCC-0, LFCC-2, MFCC-4 had the highest impact on the classification .",
      "SHAP determined that CQCC-0, MFCC-0, LFCC-2, LFCC-2 had the highest impact on the classification .",
      "SHAP determined that CQCC-0, M, LFCC-2, MFCC-4 had the highest impact on the classification .",
      "SHAP determined that CQCC-0.",
      "CQCC-0 determined that CQCC-0, MFCC-0, LFCC-2, MFCC-4 had the highest impact on the classification .",
      "SHAP determined that MFCC-0, MFCC-0, LFCC-2, MFCC-4 had the highest impact on the classification .",
      "SHAP determined that CQCC-0, MFCC-0, LFCC-2, MFCC-4 had the highest impact on the classification ."
    ],
    "new_mr": "<inform> inform ( <interpreter> interpreter: [ SHAP ], <feature> feature: [ CQCC-0 ], <feature> feature: [ MFCC-0 ], <feature> feature: [ LFCC-2 ], <feature> feature: [ MFCC-4 ]> )"
  },
  {
    "mr": "inform(response[Yes], interpreter[shap], important[PSRCC-6], classification[replayed], shap_value[0.8902])",
    "ref": [
      " Yes, PSRCC-6.8902, was used to detect the sample as replayed .",
      " Yes, PSRCC-6, was used to detect the sample as replayed .",
      " Yes, PSRCC-6, which a shap value of 0, was used to detect the sample as replayed .",
      " Yes, shap, which a shap value of 0.8902, was used to detect the sample as replayed .",
      " Yes, PSRCC-6, which a shap value of 0.8902, was used to detect the sample as PSRCC-6 .",
      " PSRCC-6, PSRCC-6, which a shap value of 0.8902, was used to detect the sample as replayed .",
      "Then  SSFCs are then obtained by performing logarithm and DCT on the SSFs .",
      " Yes, PSRCC-6, which a Yes value of 0.8902, was used to detect the sample as replayed .",
      " Yes.8902, was used to detect the sample as replayed .",
      " Yes, PSRC, which a shap value of 0.8902, was used to detect the sample as replayed .",
      " Yes, PSRCC-6, which a shap value of 0.8902, was used to detect the sample as replayed ."
    ],
    "new_mr": "<inform> inform ( <response> response: [ Yes ], <interpreter> interpreter: [ shap ], <important> important: [ PSRCC-6 ], <classification> classification: [ replayed ], <shap_value> shap value: [ 0.8902 ]> )"
  },
  {
    "mr": "inform(extracted[LFCC], model[CNN], important[LFCC-21], classification[replayed])",
    "ref": [
      " the audio sample had  features extracted and -21 was determined to have a large impact on the CNN model that determined the sample to be replayed .",
      " the audio sample had LFCC features extracted and LFCC-21 was determined to have a large impact on the CNN model that determined the sample to be re .",
      " the audio sample had LFCC features extracted and LFCC-21 was determined to have a large impact on the CNN model that determined the sample to be LFCC-21 .",
      "the audio sample had LFCC features extracted and LFCC-21 was determined to have a large impact on the CNN model that determined the sample to be replayed .  the audio sample had LFCC features extracted and LFCC-21 was determined to have a large impact on the CNN model that determined the sample to be replayed .",
      " the audio sample had LFCC features extracted and LFCC-21 was determined to have a large impact on the  model that determined the sample to be replayed .",
      "7 was found to be the id of the speaker in the sample .",
      " the audio sample had CNN features extracted and CNN-21 was determined to have a large impact on the CNN model that determined the sample to be replayed .",
      "7 was found to be the id of the speaker in the sample .  the audio sample had LFCC features extracted and LFCC-21 was determined to have a large impact on the CNN model that determined the sample to be replayed .",
      " the audio sample had LFCC features extracted and LFCC-21 was determined to have a large impact on the replayed model that determined the sample to be replayed .",
      " the audio sample had LFCC features extracted and LFCC was determined to have a large impact on the CNN model that determined the sample to be replayed .",
      " the audio sample had LFCC features extracted and LFCC-21 was determined to have a large impact on the CNN model that determined the sample to be replayed ."
    ],
    "new_mr": "<inform> inform ( <extracted> extracted: [ LFCC ], <model> model: [ CNN ], <important> important: [ LFCC-21 ], <classification> classification: [ replayed ]> )"
  },
  {
    "mr": "inform(response[Yes], interpreter[shap], important[PSRCC-11], classification[bonafide], shap_value[0.809])",
    "ref": [
      "yes, GTCC-13 was used to determine speaker id .",
      " Yes, PSRCC-11.809, was used to detect the sample as bonafide .",
      " Yes, Yes, which a shap value of 0.809, was used to detect the sample as bonafide .",
      " Yes, PSRCC-11, which a shap value of 0.809, was used to detect the sample as b .",
      " Yes, PSRCC-11, which a shap value of 0.809.",
      " Yes, PSRCC-11, which a shap value of 0.8, was used to detect the sample as bonafide .",
      " Yes, PSRCC-11, which a  value of 0.809, was used to detect the sample as bonafide .",
      " Yes, PSRCC-, which a shap value of 0.809, was used to detect the sample as bonafide .",
      " , PSRCC-11, which a shap value of 0.809, was used to detect the sample as bonafide .",
      " Yes, PSRCC-11, which a shap value of 0.809, was used to detect the sample as shap .",
      " Yes, PSRCC-11, which a shap value of 0.809, was used to detect the sample as bonafide ."
    ],
    "new_mr": "<inform> inform ( <response> response: [ Yes ], <interpreter> interpreter: [ shap ], <important> important: [ PSRCC-11 ], <classification> classification: [ bonafide ], <shap_value> shap value: [ 0.809 ]> )"
  },
  {
    "mr": "inform(extracted[MSRCC], model[CNN], important[MSRCC-3], classification[replayed])",
    "ref": [
      " the audio sample had MSRCC features extracted and MSRCC-3 was determined to have a large impact on the CNN model that determined the sample to be MSRCC-3 .",
      " the audio sample had CNN features extracted and CNN-3 was determined to have a large impact on the CNN model that determined the sample to be replayed .",
      "the audio sample had MFCC features extracted and MFCC-12 was determined to have a large impact on the CNN model that determined the sample to be replayed .",
      " the audio sample had MSRCC features extracted and MSRCC was determined to have a large impact on the CNN model that determined the sample to be replayed .",
      " the audio sample had MSRCC features extracted and MSRCC-3 was determined to have a large impact on the  model that determined the sample to be replayed .",
      " the audio sample had MS features extracted and MS-3 was determined to have a large impact on the CNN model that determined the sample to be replayed .",
      " the audio sample had MSRCC features extracted and MSRCC-3 was determined to have a large impact on the MSRCC-3 model that determined the sample to be replayed .",
      " the audio sample had MSRCC features extracted and MSRCC-3 was determined to have a large impact on the CNN model that determined the sample to be r .",
      "the audio sample had MFCC features extracted and MFCC-12 was determined to have a large impact on the CNN model that determined the sample to be replayed .  the audio sample had MSRCC features extracted and MSRCC-3 was determined to have a large impact on the CNN model that determined the sample to be replayed .",
      " the audio sample had MSRCC features extracted and M was determined to have a large impact on the CNN model that determined the sample to be replayed .",
      " the audio sample had MSRCC features extracted and MSRCC-3 was determined to have a large impact on the CNN model that determined the sample to be replayed ."
    ],
    "new_mr": "<inform> inform ( <extracted> extracted: [ MSRCC ], <model> model: [ CNN ], <important> important: [ MSRCC-3 ], <classification> classification: [ replayed ]> )"
  },
  {
    "mr": "inform(response[Yes], interpreter[shap], important[MFCC-34], classification[replayed], shap_value[0.4744])",
    "ref": [
      " Yes, MFCC-34, which a shap value of 0.4744, was used to detect the sample as Yes .",
      "the audio sample had MSRCC features extracted and MSRCC-7 was determined to have a large impact on the CNN model that determined the sample to be replayed .  Yes, MFCC-34, which a shap value of 0.4744, was used to detect the sample as replayed .",
      " , MFCC-34, which a shap value of 0.4744, was used to detect the sample as replayed .",
      " Yes, MFCC-34, which a MFCC-34 value of 0.4744, was used to detect the sample as replayed .",
      " Yes.4744, was used to detect the sample as replayed .",
      "Yes, MFCC-34, which a shap value of 0.4744, was used to detect the sample as replayed .  Yes, MFCC-34, which a shap value of 0.4744, was used to detect the sample as replayed .",
      "the audio sample had MSRCC features extracted and MSRCC-7 was determined to have a large impact on the CNN model that determined the sample to be replayed .",
      " Yes, MFCC-34, which a shap value of 0.4744.",
      " Yes, MFCC-34, which a shap value of replayed, was used to detect the sample as replayed .",
      " Yes, 0.4744, which a shap value of 0.4744, was used to detect the sample as replayed .",
      " Yes, MFCC-34, which a shap value of 0.4744, was used to detect the sample as replayed ."
    ],
    "new_mr": "<inform> inform ( <response> response: [ Yes ], <interpreter> interpreter: [ shap ], <important> important: [ MFCC-34 ], <classification> classification: [ replayed ], <shap_value> shap value: [ 0.4744 ]> )"
  },
  {
    "mr": "inform(response[Yes], interpreter[shap], important[MFCC-39], classification[bonafide], shap_value[0.0826])",
    "ref": [
      "Yes, MFCC-39, which a shap value of 0.0826, was used to detect the sample as bonafide .  Yes, MFCC-39, which a shap value of 0.0826, was used to detect the sample as bonafide .",
      " Yes.0826, was used to detect the sample as bonafide .",
      " Yes, MFCC-39, which a shap value of 0.0826, was used to detect the sample as Yes .",
      " Yes, MFCC-39, which a shap value of , was used to detect the sample as bonafide .",
      " Yes, bonafide, which a shap value of 0.0826, was used to detect the sample as bonafide .",
      " Yes, MFCC-39, was used to detect the sample as bonafide .",
      " MFCC-39, MFCC-39, which a shap value of 0.0826, was used to detect the sample as bonafide .",
      " Yes, which a shap value of 0.0826, was used to detect the sample as bonafide .",
      " Yes, MFCC-39, which a shap value of bonafide, was used to detect the sample as bonafide .",
      "Yes, LFCC-0, which a shap value of 0.2774, was used to detect the sample as bonafide .  Yes, MFCC-39, which a shap value of 0.0826, was used to detect the sample as bonafide .",
      " Yes, MFCC-39, which a shap value of 0.0826, was used to detect the sample as bonafide ."
    ],
    "new_mr": "<inform> inform ( <response> response: [ Yes ], <interpreter> interpreter: [ shap ], <important> important: [ MFCC-39 ], <classification> classification: [ bonafide ], <shap_value> shap value: [ 0.0826 ]> )"
  },
  {
    "mr": "inform(general)",
    "ref": [
      "The SHAP values indicate the contribution of the features on the outcome of the classification model. The SHAP values indicate the contribution of the features on the outcome of the classification model.",
      "The spoofed audio was not a replayed audio . The SHAP values indicate the contribution of the features on the outcome of the classification model.",
      "The spoofed audio was not a replayed audio .",
      "The SHAP values indicate the contribution of the features on the outcome of the classification model. The SHAP values indicate the contribution of the features on the outcome of the classification model.",
      "The spoofed audio was not a replayed audio . The SHAP values indicate the contribution of the features on the outcome of the classification model.",
      "The spoofed audio was not a replayed audio .",
      "The SHAP values indicate the contribution of the features on the outcome of the classification model. The SHAP values indicate the contribution of the features on the outcome of the classification model.",
      "The spoofed audio was not a replayed audio . The SHAP values indicate the contribution of the features on the outcome of the classification model.",
      "The spoofed audio was not a replayed audio .",
      "The SHAP values indicate the contribution of the features on the outcome of the classification model. The SHAP values indicate the contribution of the features on the outcome of the classification model.",
      "The SHAP values indicate the contribution of the features on the outcome of the classification model."
    ],
    "new_mr": "<inform> inform ( > )"
  },
  {
    "mr": "inform(classification[spoof], edit_type[multi_microphone], mic_type[dynamic])",
    "ref": [
      "shap determined that the GTCC-1 feature was one of the more important features by assigning it a value of 1 .",
      "shap determined that the GTCC-1 feature was one of the more important features by assigning it a value of 1 . Dynamic microphones were used the most .",
      "Dynamic microphones were used the most . Dynamic microphones were used the most .",
      "shap determined that the GTCC-1 feature was one of the more important features by assigning it a value of 1 .",
      "shap determined that the GTCC-1 feature was one of the more important features by assigning it a value of 1 . Dynamic microphones were used the most .",
      "Dynamic microphones were used the most . Dynamic microphones were used the most .",
      "shap determined that the GTCC-1 feature was one of the more important features by assigning it a value of 1 .",
      "shap determined that the GTCC-1 feature was one of the more important features by assigning it a value of 1 . Dynamic microphones were used the most .",
      "Dynamic microphones were used the most . Dynamic microphones were used the most .",
      "shap determined that the GTCC-1 feature was one of the more important features by assigning it a value of 1 .",
      "Dynamic microphones were used the most ."
    ],
    "new_mr": "<inform> inform ( <classification> classification: [ spoof ], <edit_type> edit type: [ multi_microphone ], <mic_type> mic type: [ dynamic ]> )"
  },
  {
    "mr": "inform(extracted[MFCC], model[CNN], important[MFCC-6], classification[replayed])",
    "ref": [
      "the audio sample had MFCC features extracted and MFCC-6 was determined to have a large impact on the CNN model that determined the sample to be replayed .  the audio sample had MFCC features extracted and MFCC-6 was determined to have a large impact on the CNN model that determined the sample to be replayed .",
      " the audio sample had MF features extracted and MF-6 was determined to have a large impact on the CNN model that determined the sample to be replayed .",
      "the audio sample had MFCC features extracted and MFCC-3 was determined to have a large impact on the CNN model that determined the sample to be replayed .",
      " the audio sample had MFCC features extracted and MFCC-6 was determined to have a large impact on the replayed model that determined the sample to be replayed .",
      " the audio sample had replayed features extracted and replayed-6 was determined to have a large impact on the CNN model that determined the sample to be replayed .",
      " the audio sample had MFCC features extracted and CNN was determined to have a large impact on the CNN model that determined the sample to be replayed .",
      " the audio sample had MFCC features extracted and MFCC-6 was determined to have a large impact on the CNN model that determined the sample to be MFCC-6 .",
      " the audio sample had MFCC features extracted and MF was determined to have a large impact on the CNN model that determined the sample to be replayed .",
      " the audio sample had MFCC features extracted and MFCC-6 was determined to have a large impact on the C model that determined the sample to be replayed .",
      "the audio sample had MFCC features extracted and MFCC-3 was determined to have a large impact on the CNN model that determined the sample to be replayed .  the audio sample had MFCC features extracted and MFCC-6 was determined to have a large impact on the CNN model that determined the sample to be replayed .",
      " the audio sample had MFCC features extracted and MFCC-6 was determined to have a large impact on the CNN model that determined the sample to be replayed ."
    ],
    "new_mr": "<inform> inform ( <extracted> extracted: [ MFCC ], <model> model: [ CNN ], <important> important: [ MFCC-6 ], <classification> classification: [ replayed ]> )"
  },
  {
    "mr": "inform(response[yes], speaker_id[3], feature[GTCC-6], interpreter[shap], shap_value[1])",
    "ref": [
      " Yes, GT, which a shap value of 1, was used to detect the id of speaker 3 for the audio sample .",
      " Yes, 3, which a shap value of 1, was used to detect the id of speaker 3 for the audio sample .",
      " Yes, GTCC-6, which a shap value of 1.",
      " Yes, GTCC-6, which a shap value of 3, was used to detect the id of speaker 3 for the audio sample .",
      " Yes, GTCC-6, which a shap value of , was used to detect the id of speaker 3 for the audio sample .",
      "Yes, GTCC-6, which a shap value of 1, was used to detect the id of speaker 3 for the audio sample .  Yes, GTCC-6, which a shap value of 1, was used to detect the id of speaker 3 for the audio sample .",
      " Yes, which a shap value of 1, was used to detect the id of speaker 3 for the audio sample .",
      "The speed increases at the 20 second mark .",
      " Yes, GTCC-6, which a shap value of 1, was used to detect the id of speaker yes for the audio sample .",
      " Yes.",
      " Yes, GTCC-6, which a shap value of 1, was used to detect the id of speaker 3 for the audio sample ."
    ],
    "new_mr": "<inform> inform ( <response> response: [ yes ], <speaker_id> speaker id: [ 3 ], <feature> feature: [ GTCC-6 ], <interpreter> interpreter: [ shap ], <shap_value> shap value: [ 1 ]> )"
  },
  {
    "mr": "inform(response[yes], speaker_id[4], feature[PSRCC-0], interpreter[shap], shap_value[-0.8051])",
    "ref": [
      "Linear Frequency Cepstral Coefficients .  Yes, PSRCC-0, which a shap value of -0.8051, was used to detect the id of speaker 4 for the audio sample .",
      " Yes, which a shap value of -0.8051, was used to detect the id of speaker 4 for the audio sample .",
      " Yes, PSRCC-0, which a shap value of shap, was used to detect the id of speaker 4 for the audio sample .",
      "Yes, PSRCC-0, which a shap value of -0.8051, was used to detect the id of speaker 4 for the audio sample .  Yes, PSRCC-0, which a shap value of -0.8051, was used to detect the id of speaker 4 for the audio sample .",
      " Yes, PSRCC-0, was used to detect the id of speaker 4 for the audio sample .",
      " Yes, shap, which a shap value of -0.8051, was used to detect the id of speaker 4 for the audio sample .",
      " Yes, PSRCC-0, which a s value of -0.8051, was used to detect the id of speaker 4 for the audio sample .",
      " Yes, PSRCC-0.8051, was used to detect the id of speaker 4 for the audio sample .",
      " Yes, PSRCC-0, which a shap value of -0.8051, was used to detect the id of speaker  for the audio sample .",
      " Yes, PSRCC-0, which a shap value of -0.8051, was used to detect the id of speaker PSRCC-0 for the audio sample .",
      " Yes, PSRCC-0, which a shap value of -0.8051, was used to detect the id of speaker 4 for the audio sample ."
    ],
    "new_mr": "<inform> inform ( <response> response: [ yes ], <speaker_id> speaker id: [ 4 ], <feature> feature: [ PSRCC-0 ], <interpreter> interpreter: [ shap ], <shap_value> shap value: [ -0.8051 ]> )"
  },
  {
    "mr": "inform(response[yes], speaker_id[6], feature[PSRCC-2], interpreter[shap], shap_value[0.7373])",
    "ref": [
      "There is an unusually long pause at 37 seconds .",
      " Yes, PSRCC-2, which a shap value of 0.7373, was used to detect the id of speaker shap for the audio sample .",
      " Yes, PSRCC-2, which a sh value of 0.7373, was used to detect the id of speaker 6 for the audio sample .",
      " Yes, PSRCC-2, which a shap value of 0.7, was used to detect the id of speaker 6 for the audio sample .",
      "Yes, PSRCC-2, which a shap value of 0.7373, was used to detect the id of speaker 6 for the audio sample .  Yes, PSRCC-2, which a shap value of 0.7373, was used to detect the id of speaker 6 for the audio sample .",
      " Yes, PSRCC-2, which a 6 value of 0.7373, was used to detect the id of speaker 6 for the audio sample .",
      " Yes, PSRCC-2, which a shap value of 0.7373.",
      "There is an unusually long pause at 37 seconds .  Yes, PSRCC-2, which a shap value of 0.7373, was used to detect the id of speaker 6 for the audio sample .",
      " Yes, PSRCC-2, was used to detect the id of speaker 6 for the audio sample .",
      " Yes, PSRCC-2, which a shap value of 0.7373, was used to detect the id of speaker  for the audio sample .",
      " Yes, PSRCC-2, which a shap value of 0.7373, was used to detect the id of speaker 6 for the audio sample ."
    ],
    "new_mr": "<inform> inform ( <response> response: [ yes ], <speaker_id> speaker id: [ 6 ], <feature> feature: [ PSRCC-2 ], <interpreter> interpreter: [ shap ], <shap_value> shap value: [ 0.7373 ]> )"
  },
  {
    "mr": "inform(response[yes], speaker_id[5], feature[MSRCC-2], interpreter[shap], shap_value[0.3503])",
    "ref": [
      " Yes, shap, which a shap value of 0.3503, was used to detect the id of speaker 5 for the audio sample .",
      " Yes, MSRCC-2, which a shap value of 0.303, was used to detect the id of speaker  for the audio sample .",
      "Yes, MSRCC-2, which a shap value of 0.3503, was used to detect the id of speaker 5 for the audio sample .  Yes, MSRCC-2, which a shap value of 0.3503, was used to detect the id of speaker 5 for the audio sample .",
      " Yes, MSRCC-2, which a shap value of 0.3MSRCC-203, was used to detect the id of speaker MSRCC-2 for the audio sample .",
      " Yes, MSRCC-2, was used to detect the id of speaker 5 for the audio sample .",
      " Yes, MSRCC-2, which a shap value of 0.3, was used to detect the id of speaker 5 for the audio sample .",
      "The audio sample had GTCC and MFCC features extracted and passed through a trained SVM which determined the id of speaker 1 .",
      " Yes, MSRCC-2, which a MSRCC-2 value of 0.3503, was used to detect the id of speaker 5 for the audio sample .",
      " Yes, MSRCC-, which a shap value of 0.3503, was used to detect the id of speaker 5 for the audio sample .",
      " Yes.3503, was used to detect the id of speaker 5 for the audio sample .",
      " Yes, MSRCC-2, which a shap value of 0.3503, was used to detect the id of speaker 5 for the audio sample ."
    ],
    "new_mr": "<inform> inform ( <response> response: [ yes ], <speaker_id> speaker id: [ 5 ], <feature> feature: [ MSRCC-2 ], <interpreter> interpreter: [ shap ], <shap_value> shap value: [ 0.3503 ]> )"
  },
  {
    "mr": "inform(extracted[LFCC], model[CNN], important[LFCC-44], classification[bonafide])",
    "ref": [
      " the audio sample had CNN features extracted and CNN-44 was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      " the audio sample had LFCC features extracted and LFCC was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      "the audio sample had LFCC features extracted and LFCC-44 was determined to have a large impact on the CNN model that determined the sample to be bonafide .  the audio sample had LFCC features extracted and LFCC-44 was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      " the audio sample had LFCC features extracted and  was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      " the audio sample had L features extracted and L-44 was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      " the audio sample had LFCC features extracted and LFCC-44 was determined to have a large impact on the CNN model that determined the sample to be bonafi .",
      "Yes, person 1 was detected by GTCC-8 with a shap value of 0 .",
      " the audio sample had LFCC features extracted and LFCC-44 was determined to have a large impact on the CNN model that determined the sample to be LFCC .",
      " the audio sample had LFCC features extracted and LFCC-44 was determined to have a large impact on the LFCC-44 model that determined the sample to be bonafide .",
      " the audio sample had LFCC features extracted and LFCC-44 was determined to have a large impact on the  model that determined the sample to be bonafide .",
      " the audio sample had LFCC features extracted and LFCC-44 was determined to have a large impact on the CNN model that determined the sample to be bonafide ."
    ],
    "new_mr": "<inform> inform ( <extracted> extracted: [ LFCC ], <model> model: [ CNN ], <important> important: [ LFCC-44 ], <classification> classification: [ bonafide ]> )"
  },
  {
    "mr": "inform(classification[spoof], edit_type[replay])",
    "ref": [
      "The spoofed audio was a spoofed audio .",
      "shap determined that the LFCC-28 feature was one of the more important features by assigning it a value of -0.7853 .",
      "The replayed audio was a replayed audio .",
      "The sed audio was a replayed audio .",
      "The spoofed audio was a replayed audio . The spoofed audio was a replayed audio .",
      "shap determined that the LFCC-28 feature was one of the more important features by assigning it a value of -0.7853 . The spoofed audio was a replayed audio .",
      "The spoofed audio was a repled audio .",
      "The spoofed audio was a spoofed audio .",
      "shap determined that the LFCC-28 feature was one of the more important features by assigning it a value of -0.7853 .",
      "The replayed audio was a replayed audio .",
      "The spoofed audio was a replayed audio ."
    ],
    "new_mr": "<inform> inform ( <classification> classification: [ spoof ], <edit_type> edit type: [ replay ]> )"
  },
  {
    "mr": "inform(response[Yes], interpreter[shap], important[LFCC-35], classification[bonafide], shap_value[-0.8694])",
    "ref": [
      " Yes, LFCC-35, which a shap value of -0.8694.",
      " , LFCC-35, which a shap value of -0.8694, was used to detect the sample as bonafide .",
      " Yes, Yes, which a shap value of -0.8694, was used to detect the sample as bonafide .",
      "Yes, LFCC-35, which a shap value of -0.8694, was used to detect the sample as bonafide .  Yes, LFCC-35, which a shap value of -0.8694, was used to detect the sample as bonafide .",
      " Yes, LFCC-35, was used to detect the sample as bonafide .",
      " Yes, LFCC-, which a shap value of -0.8694, was used to detect the sample as bonafide .",
      " Yes.8694, was used to detect the sample as bonafide .",
      " Yes, LFCC-35, which a  value of -0.8694, was used to detect the sample as bonafide .",
      " Yes, LFCC-35, which a shap value of -0.8694, was used to detect the sample as bonafid .",
      " Yes, LFCC-35, which a shap value of bonafide, was used to detect the sample as bonafide .",
      " Yes, LFCC-35, which a shap value of -0.8694, was used to detect the sample as bonafide ."
    ],
    "new_mr": "<inform> inform ( <response> response: [ Yes ], <interpreter> interpreter: [ shap ], <important> important: [ LFCC-35 ], <classification> classification: [ bonafide ], <shap_value> shap value: [ -0.8694 ]> )"
  },
  {
    "mr": "inform(response[yes], speaker_id[1], feature[LFCC-33], interpreter[shap], shap_value[-0.4495])",
    "ref": [
      " Yes, LFCC-33, which a s value of -0.4495, was used to detect the id of speaker 1 for the audio sample .",
      "Yes , the recording was made at the same time .",
      "Yes , the recording was made at the same time .  Yes, LFCC-33, which a shap value of -0.4495, was used to detect the id of speaker 1 for the audio sample .",
      " Yes, LFCC-33, which a shap value of -0.4495, was used to detect the id of speaker -0.4495 for the audio sample .",
      " Yes, LFCC-33, which a 1 value of -0.4495, was used to detect the id of speaker 1 for the audio sample .",
      " Yes.4495, was used to detect the id of speaker 1 for the audio sample .",
      " Yes, LFCC-33, which a shap value of -0.4495, was used to detect the id of speaker  for the audio sample .",
      " Yes, LFCC-33, which a shap value of 1, was used to detect the id of speaker 1 for the audio sample .",
      " Yes, LFCC-33, which a shap value of , was used to detect the id of speaker 1 for the audio sample .",
      " Yes, shap, which a shap value of -0.4495, was used to detect the id of speaker 1 for the audio sample .",
      " Yes, LFCC-33, which a shap value of -0.4495, was used to detect the id of speaker 1 for the audio sample ."
    ],
    "new_mr": "<inform> inform ( <response> response: [ yes ], <speaker_id> speaker id: [ 1 ], <feature> feature: [ LFCC-33 ], <interpreter> interpreter: [ shap ], <shap_value> shap value: [ -0.4495 ]> )"
  },
  {
    "mr": "inform(response[yes], speaker_id[3], feature[MFCC-34], interpreter[shap], shap_value[0.8748])",
    "ref": [
      "Yes, LFCC-50, which a shap value of -0.4655, was used to detect the sample as bonafide .  Yes, MFCC-34, which a shap value of 0.8748, was used to detect the id of speaker 3 for the audio sample .",
      " Yes, MFCC-34, which a shap value of yes, was used to detect the id of speaker 3 for the audio sample .",
      " Yes, MFCC-34, which a sha value of 0.8748, was used to detect the id of speaker 3 for the audio sample .",
      " Yes, MFCC-4, which a shap value of 0.8748, was used to detect the id of speaker  for the audio sample .",
      " Yes, yes, which a shap value of 0.8748, was used to detect the id of speaker 3 for the audio sample .",
      " Yes, which a shap value of 0.8748, was used to detect the id of speaker 3 for the audio sample .",
      " Yes, MFC, which a shap value of 0.8748, was used to detect the id of speaker 3 for the audio sample .",
      " Yes, MFCC-0.87484, which a shap value of 0.8748, was used to detect the id of speaker 0.8748 for the audio sample .",
      " Yes.8748, was used to detect the id of speaker 3 for the audio sample .",
      " Yes, MFCC-34.8748, was used to detect the id of speaker 3 for the audio sample .",
      " Yes, MFCC-34, which a shap value of 0.8748, was used to detect the id of speaker 3 for the audio sample ."
    ],
    "new_mr": "<inform> inform ( <response> response: [ yes ], <speaker_id> speaker id: [ 3 ], <feature> feature: [ MFCC-34 ], <interpreter> interpreter: [ shap ], <shap_value> shap value: [ 0.8748 ]> )"
  },
  {
    "mr": "inform(classification[spoof])",
    "ref": [
      "Yes, the spoofed recording was a replayed recording .",
      "The recording is fake . The recording is fake .",
      "Yes, the spoofed recording was a replayed recording . The recording is fake .",
      "Yes, the spoofed recording was a replayed recording .",
      "The recording is fake . The recording is fake .",
      "Yes, the spoofed recording was a replayed recording . The recording is fake .",
      "Yes, the spoofed recording was a replayed recording .",
      "The recording is fake . The recording is fake .",
      "Yes, the spoofed recording was a replayed recording . The recording is fake .",
      "Yes, the spoofed recording was a replayed recording .",
      "The recording is fake . "
    ],
    "new_mr": "<inform> inform ( <classification> classification: [ spoof ]> )"
  },
  {
    "mr": "inform(response[yes], speaker_id[1], feature[MFCC-26], interpreter[shap], shap_value[-0.7669])",
    "ref": [
      " Yes, person  was detected by MFCC-26 with a shap value of -0.7669 .",
      " Yes, person yes was detected by MFCC-26 with a shap value of -0.7669 .",
      " Yes, person 1 was detected by MFCC-26 with a shap value of MFCC-26 .",
      " Yes, person 1 was detected by MFCC-26 with a shap value of -0.76 .",
      " Yes, person 1 was detected by MFCC-26 with a s value of -0.7669 .",
      "the audio sample had LFCC features extracted and LFCC-7 was determined to have a large impact on the CNN model that determined the sample to be replayed .",
      " Yes, person 1 was detected by MFCC-26 with a -0.7669 value of -0.7669 .",
      "the audio sample had LFCC features extracted and LFCC-7 was determined to have a large impact on the CNN model that determined the sample to be replayed .  Yes, person 1 was detected by MFCC-26 with a shap value of -0.7669 .",
      " Yes, person 1 was detected by yes with a shap value of -0.7669 .",
      " Yes, person 1 was detected by MFCC with a shap value of -0.7669 .",
      " Yes, person 1 was detected by MFCC-26 with a shap value of -0.7669 ."
    ],
    "new_mr": "<inform> inform ( <response> response: [ yes ], <speaker_id> speaker id: [ 1 ], <feature> feature: [ MFCC-26 ], <interpreter> interpreter: [ shap ], <shap_value> shap value: [ -0.7669 ]> )"
  },
  {
    "mr": "inform(extracted[MFCC], extracted[GTCC], model[SVM], speaker_id[8])",
    "ref": [
      " The audio sample had GTCC and MFCC features extracted and passed through a trained SVM which determined the id of speaker  .",
      " The audio sample had GTCC and SVM features extracted and passed through a trained SVM which determined the id of speaker 8 .",
      " The audio sample had GTCC and MF features extracted and passed through a trained SVM which determined the id of speaker 8 .",
      " The audio sample had GTCC and MFCC features extracted and passed through a trained S which determined the id of speaker 8 .",
      " The audio sample had GTCC and MFCC features extracted and passed through a trained GTCC which determined the id of speaker 8 .",
      "The audio sample had GTCC and MFCC features extracted and passed through a trained SVM which determined the id of speaker 8 .  The audio sample had GTCC and MFCC features extracted and passed through a trained SVM which determined the id of speaker 8 .",
      " The audio sample had GTCC and MFCC features extracted and passed through a trained SVM which determined the id of speaker MFCC .",
      "The audio shows signs of TextToSpeech involvement .",
      "The audio shows signs of TextToSpeech involvement .  The audio sample had GTCC and MFCC features extracted and passed through a trained SVM which determined the id of speaker 8 .",
      " The audio sample had SVM and MFCC features extracted and passed through a trained SVM which determined the id of speaker 8 .",
      " The audio sample had GTCC and MFCC features extracted and passed through a trained SVM which determined the id of speaker 8 ."
    ],
    "new_mr": "<inform> inform ( <extracted> extracted: [ MFCC ], <extracted> extracted: [ GTCC ], <model> model: [ SVM ], <speaker_id> speaker id: [ 8 ]> )"
  },
  {
    "mr": "inform(response[yes], speaker_id[4], feature[PSRCC-1], interpreter[shap], shap_value[0.3263])",
    "ref": [
      " Yes, PSRCC-1, which a shap value of 0.3263, was used to detect the id of speaker shap for the audio sample .",
      " Yes, PSRCC-1, which a shap value of yes, was used to detect the id of speaker 4 for the audio sample .",
      " Yes, PSRCC-1, which a  value of 0.3263, was used to detect the id of speaker 4 for the audio sample .",
      " Yes, PSRCC-1, which a shap value of 0, was used to detect the id of speaker 4 for the audio sample .",
      "shap determined that the LFCC-49 feature was one of the more important features by assigning it a value of -0.6011 .",
      " Yes, PSRCC-1, which a 0.3263 value of 0.3263, was used to detect the id of speaker 4 for the audio sample .",
      " Yes, PSRCC-1, which a shap value of 0.3263.",
      "shap determined that the LFCC-49 feature was one of the more important features by assigning it a value of -0.6011 .  Yes, PSRCC-1, which a shap value of 0.3263, was used to detect the id of speaker 4 for the audio sample .",
      " Yes, which a shap value of 0.3263, was used to detect the id of speaker 4 for the audio sample .",
      " Yes.3263, was used to detect the id of speaker 4 for the audio sample .",
      " Yes, PSRCC-1, which a shap value of 0.3263, was used to detect the id of speaker 4 for the audio sample ."
    ],
    "new_mr": "<inform> inform ( <response> response: [ yes ], <speaker_id> speaker id: [ 4 ], <feature> feature: [ PSRCC-1 ], <interpreter> interpreter: [ shap ], <shap_value> shap value: [ 0.3263 ]> )"
  },
  {
    "mr": "inform(response[yes], speaker_id[5], feature[PSRCC-8], interpreter[shap], shap_value[0.1874])",
    "ref": [
      " Yes, person 5 was detected by PSRCC-8 with a shap value of 5 .",
      " Yes, person 5 was detected by PSRCC-8 with a PSRCC-8 value of 0.1874 .",
      "Yes, person 5 was detected by PSRCC-8 with a shap value of 0.1874 .  Yes, person 5 was detected by PSRCC-8 with a shap value of 0.1874 .",
      " Yes, person 5 was detected by P with a shap value of 0.1874 .",
      " Yes, person 5 was detected by shap with a shap value of 0.1874 .",
      "Yes, person 3 was detected by PSRCC-11 with a shap value of 0.1731 .  Yes, person 5 was detected by PSRCC-8 with a shap value of 0.1874 .",
      " Yes, person 5 was detected by PSRCC-8 with a sha value of 0.1874 .",
      " Yes.1874 .",
      " Yes, person PSRCC-8 was detected by PSRCC-8 with a shap value of 0.1874 .",
      " Yes, person  was detected by PSRCC-8 with a shap value of 0.1874 .",
      " Yes, person 5 was detected by PSRCC-8 with a shap value of 0.1874 ."
    ],
    "new_mr": "<inform> inform ( <response> response: [ yes ], <speaker_id> speaker id: [ 5 ], <feature> feature: [ PSRCC-8 ], <interpreter> interpreter: [ shap ], <shap_value> shap value: [ 0.1874 ]> )"
  },
  {
    "mr": "inform(general)",
    "ref": [
      "The SHAP values indicate the contribution of the features on the outcome of the classification model . The SHAP values indicate the contribution of the features on the outcome of the classification model .",
      "Yes, LFCC-59, which a shap value of -0.8654, was used to detect the sample as replayed .",
      "Yes, LFCC-59, which a shap value of -0.8654, was used to detect the sample as replayed . The SHAP values indicate the contribution of the features on the outcome of the classification model .",
      "The SHAP values indicate the contribution of the features on the outcome of the classification model . The SHAP values indicate the contribution of the features on the outcome of the classification model .",
      "Yes, LFCC-59, which a shap value of -0.8654, was used to detect the sample as replayed .",
      "Yes, LFCC-59, which a shap value of -0.8654, was used to detect the sample as replayed . The SHAP values indicate the contribution of the features on the outcome of the classification model .",
      "The SHAP values indicate the contribution of the features on the outcome of the classification model . The SHAP values indicate the contribution of the features on the outcome of the classification model .",
      "Yes, LFCC-59, which a shap value of -0.8654, was used to detect the sample as replayed .",
      "Yes, LFCC-59, which a shap value of -0.8654, was used to detect the sample as replayed . The SHAP values indicate the contribution of the features on the outcome of the classification model .",
      "The SHAP values indicate the contribution of the features on the outcome of the classification model . The SHAP values indicate the contribution of the features on the outcome of the classification model .",
      "The SHAP values indicate the contribution of the features on the outcome of the classification model ."
    ],
    "new_mr": "<inform> inform ( > )"
  },
  {
    "mr": "inform(response[Yes], interpreter[shap], important[MFCC-36], classification[bonafide], shap_value[-0.4792])",
    "ref": [
      " Yes, M, which a shap value of -0.4792, was used to detect the sample as bonafide .",
      " Ye, MFCC-36, which a shap value of -0.4792, was used to detect the sample as bonafide .",
      " Yes, MFCC-36, which a bonafide value of -0.4792, was used to detect the sample as bonafide .",
      " Yes, MFCC-36, which a shap value of -0.4792.",
      " Yes, MFCC-36, which a shap value of -0.4792, was used to detect the sample as Yes .",
      " Yes, MFCC-36, which a shap value of -0.479, was used to detect the sample as bonafide .",
      " Yes, MFCC-36, was used to detect the sample as bonafide .",
      " Yes.4792, was used to detect the sample as bonafide .",
      "Yes, MFCC-34, which a shap value of 0.8748, was used to detect the id of speaker 3 for the audio sample .",
      " Yes, MFCC-36, which a shap value of bonafide, was used to detect the sample as bonafide .",
      " Yes, MFCC-36, which a shap value of -0.4792, was used to detect the sample as bonafide ."
    ],
    "new_mr": "<inform> inform ( <response> response: [ Yes ], <interpreter> interpreter: [ shap ], <important> important: [ MFCC-36 ], <classification> classification: [ bonafide ], <shap_value> shap value: [ -0.4792 ]> )"
  },
  {
    "mr": "inform(response[yes], speaker_id[4], feature[LFCC-55], interpreter[shap], shap_value[0.8788])",
    "ref": [
      " Yes, yes, which a shap value of 0.8788, was used to detect the id of speaker 4 for the audio sample .",
      " Yes, LFCC-55, which a shap value of 0, was used to detect the id of speaker 4 for the audio sample .",
      "Yes, LFCC-55, which a shap value of 0.8788, was used to detect the id of speaker 4 for the audio sample .  Yes, LFCC-55, which a shap value of 0.8788, was used to detect the id of speaker 4 for the audio sample .",
      " Yes, LFCC-55, which a shap value of yes, was used to detect the id of speaker 4 for the audio sample .",
      " Yes, LFCC-, which a shap value of 0.8788, was used to detect the id of speaker 4 for the audio sample .",
      " Yes, LFCC-55, which a  value of 0.8788, was used to detect the id of speaker 4 for the audio sample .",
      " Yes, which a shap value of 0.8788, was used to detect the id of speaker 4 for the audio sample .",
      " Yes.8788, was used to detect the id of speaker 4 for the audio sample .",
      " Yes, LFCC-55, which a shap value of 0.8788, was used to detect the id of speaker  for the audio sample .",
      " Yes, LFCC-55.8788, was used to detect the id of speaker 4 for the audio sample .",
      " Yes, LFCC-55, which a shap value of 0.8788, was used to detect the id of speaker 4 for the audio sample ."
    ],
    "new_mr": "<inform> inform ( <response> response: [ yes ], <speaker_id> speaker id: [ 4 ], <feature> feature: [ LFCC-55 ], <interpreter> interpreter: [ shap ], <shap_value> shap value: [ 0.8788 ]> )"
  },
  {
    "mr": "inform(response[yes], speaker_id[2], feature[LFCC-52], interpreter[shap], shap_value[0.556])",
    "ref": [
      " Yes, person  was detected by LFCC-5 with a shap value of 0.556 .",
      " Yes, person LFCC-52 was detected by LFCC-5LFCC-52 with a shap value of 0.556 .",
      " Yes, person 2 was detected by LFCC-52 with a shap value of 2 .",
      "Yes, person 2 was detected by LFCC-52 with a shap value of 0.556 .  Yes, person 2 was detected by LFCC-52 with a shap value of 0.556 .",
      " Yes, person 2 was detected by LFCC-52 with a sh value of 0.556 .",
      " Yes.556 .",
      " Yes, person 2 was detected by LFCC- with a shap value of 0.556 .",
      " Yes, person 2 was detected by LFCC-52 with a shap value of 0.5 .",
      "Yes, MFCC-23, which a shap value of -0.3555, was used to detect the sample as replayed .  Yes, person 2 was detected by LFCC-52 with a shap value of 0.556 .",
      " Yes, person 2 was detected by 0.556 with a shap value of 0.556 .",
      " Yes, person 2 was detected by LFCC-52 with a shap value of 0.556 ."
    ],
    "new_mr": "<inform> inform ( <response> response: [ yes ], <speaker_id> speaker id: [ 2 ], <feature> feature: [ LFCC-52 ], <interpreter> interpreter: [ shap ], <shap_value> shap value: [ 0.556 ]> )"
  },
  {
    "mr": "inform(response[Yes], interpreter[shap], important[MSRCC-7], classification[bonafide], shap_value[-0.2973])",
    "ref": [
      " Yes, shap, which a shap value of -0.2973, was used to detect the sample as bonafide .",
      " Yes, MSRCC-7, which a MSRCC-7 value of -0.2973, was used to detect the sample as bonafide .",
      " Yes, MSRCC-7, which a shap value of -0.2973, was used to detect the sample as bonafid .",
      " Yes, MSRCC-7, was used to detect the sample as bonafide .",
      " , MSRCC-7, which a shap value of -0.2973, was used to detect the sample as bonafide .",
      "The spoofed audio was not converted .  Yes, MSRCC-7, which a shap value of -0.2973, was used to detect the sample as bonafide .",
      " Yes, , which a shap value of -0.2973, was used to detect the sample as bonafide .",
      " Yes, MSRCC-7.2973, was used to detect the sample as bonafide .",
      " Yes, MSRCC-7, which a shap value of -0., was used to detect the sample as bonafide .",
      " Yes.2973, was used to detect the sample as bonafide .",
      " Yes, MSRCC-7, which a shap value of -0.2973, was used to detect the sample as bonafide ."
    ],
    "new_mr": "<inform> inform ( <response> response: [ Yes ], <interpreter> interpreter: [ shap ], <important> important: [ MSRCC-7 ], <classification> classification: [ bonafide ], <shap_value> shap value: [ -0.2973 ]> )"
  },
  {
    "mr": "inform(response[yes], speaker_id[2], feature[LFCC-23], interpreter[shap], shap_value[-0.3711])",
    "ref": [
      " Yes, LFCC-23.3711, was used to detect the id of speaker 2 for the audio sample .",
      " Yes, LFCC-23, which a shap value of , was used to detect the id of speaker 2 for the audio sample .",
      " Yes.3711, was used to detect the id of speaker 2 for the audio sample .",
      "3 was found to be the id of the speaker in the sample .",
      " Yes, 2, which a shap value of -0.3711, was used to detect the id of speaker 2 for the audio sample .",
      " Yes, LFCC-3, which a shap value of -0.3711, was used to detect the id of speaker  for the audio sample .",
      " Yes, LFCC-23, which a sh value of -0.3711, was used to detect the id of speaker 2 for the audio sample .",
      "Yes, LFCC-23, which a shap value of -0.3711, was used to detect the id of speaker 2 for the audio sample .  Yes, LFCC-23, which a shap value of -0.3711, was used to detect the id of speaker 2 for the audio sample .",
      " Yes, LFCC-23, which a shap value of -0.3711.",
      " Yes, LFCC-23, was used to detect the id of speaker 2 for the audio sample .",
      " Yes, LFCC-23, which a shap value of -0.3711, was used to detect the id of speaker 2 for the audio sample ."
    ],
    "new_mr": "<inform> inform ( <response> response: [ yes ], <speaker_id> speaker id: [ 2 ], <feature> feature: [ LFCC-23 ], <interpreter> interpreter: [ shap ], <shap_value> shap value: [ -0.3711 ]> )"
  },
  {
    "mr": "inform(response[Yes], interpreter[shap], important[PSRCC-10], classification[bonafide], shap_value[0.8682])",
    "ref": [
      " Yes, PSRCC-10, which a shap value of 0.8682, was used to detect the sample as 0.8682 .",
      " Yes.8682, was used to detect the sample as bonafide .",
      " Yes, PSRCC-10, which a shap value of 0.8682, was used to detect the sample as  .",
      " Ye, PSRCC-10, which a shap value of 0.8682, was used to detect the sample as bonafide .",
      " Yes, PSRCC-1, which a shap value of 0.8682, was used to detect the sample as bonafide .",
      " bonafide, PSRCC-10, which a shap value of 0.8682, was used to detect the sample as bonafide .",
      "No, the spoofed recording was not a replayed recording .  Yes, PSRCC-10, which a shap value of 0.8682, was used to detect the sample as bonafide .",
      "No, the spoofed recording was not a replayed recording .",
      " Yes, PSRCC-10, which a shap value of , was used to detect the sample as bonafide .",
      " Yes, PSRCC-10, which a shap value of bonafide, was used to detect the sample as bonafide .",
      " Yes, PSRCC-10, which a shap value of 0.8682, was used to detect the sample as bonafide ."
    ],
    "new_mr": "<inform> inform ( <response> response: [ Yes ], <interpreter> interpreter: [ shap ], <important> important: [ PSRCC-10 ], <classification> classification: [ bonafide ], <shap_value> shap value: [ 0.8682 ]> )"
  },
  {
    "mr": "inform(response[Yes], interpreter[shap], important[LFCC-59], classification[replayed], shap_value[-0.8654])",
    "ref": [
      " Yes, LFCC-59, which a shap value of -0.8654, was used to detect the sample as replay .",
      " Yes, LFCC-59, which a shap value of -, was used to detect the sample as replayed .",
      " Yes, LFCC-59.8654, was used to detect the sample as replayed .",
      " Yes, LFCC-59, was used to detect the sample as replayed .",
      " Yes, LFCC-59, which a s value of -0.8654, was used to detect the sample as replayed .",
      " Yes, LFCC-59, which a shap value of shap, was used to detect the sample as replayed .",
      "Yes, MFCC-26, which a shap value of 0.737, was used to detect the sample as replayed .  Yes, LFCC-59, which a shap value of -0.8654, was used to detect the sample as replayed .",
      " Yes, LF, which a shap value of -0.8654, was used to detect the sample as replayed .",
      "Yes, LFCC-59, which a shap value of -0.8654, was used to detect the sample as replayed .  Yes, LFCC-59, which a shap value of -0.8654, was used to detect the sample as replayed .",
      " Yes, LFCC-59, which a shap value of -0.8654, was used to detect the sample as LFCC-59 .",
      " Yes, LFCC-59, which a shap value of -0.8654, was used to detect the sample as replayed ."
    ],
    "new_mr": "<inform> inform ( <response> response: [ Yes ], <interpreter> interpreter: [ shap ], <important> important: [ LFCC-59 ], <classification> classification: [ replayed ], <shap_value> shap value: [ -0.8654 ]> )"
  },
  {
    "mr": "inform(classification[bonafide], edit_type[none])",
    "ref": [
      "the audio sample had LFCC features extracted and LFCC-5 was determined to have a large impact on the CNN model that determined the sample to be bonafide . The audio is not good .",
      "the audio sample had LFCC features extracted and LFCC-5 was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      "The audio is good .",
      "The audio is not good . The audio is not good .",
      "the audio sample had LFCC features extracted and LFCC-5 was determined to have a large impact on the CNN model that determined the sample to be bonafide . The audio is not good .",
      "the audio sample had LFCC features extracted and LFCC-5 was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      "The audio is good .",
      "The audio is not good . The audio is not good .",
      "the audio sample had LFCC features extracted and LFCC-5 was determined to have a large impact on the CNN model that determined the sample to be bonafide . The audio is not good .",
      "the audio sample had LFCC features extracted and LFCC-5 was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      "The audio is not good ."
    ],
    "new_mr": "<inform> inform ( <classification> classification: [ bonafide ], <edit_type> edit type: [ none ]> )"
  },
  {
    "mr": "inform(response[No], classification[spoof], edit_type[multi_microphone], mic_quantity[>1], signal_length[5])",
    "ref": [
      "That microphone was used for  seconds .",
      "That microphone was used for 5 seconds . That microphone was used for 5 seconds .",
      "person 1 was detected as the primary speaker of the audio sample . That microphone was used for 5 seconds .",
      "person 1 was detected as the primary speaker of the audio sample .",
      "That microphone was used for >1 seconds .",
      "That microphone was used for  seconds .",
      "That microphone was used for 5 seconds . That microphone was used for 5 seconds .",
      "person 1 was detected as the primary speaker of the audio sample . That microphone was used for 5 seconds .",
      "person 1 was detected as the primary speaker of the audio sample .",
      "That microphone was used for >1 seconds .",
      "That microphone was used for 5 seconds ."
    ],
    "new_mr": "<inform> inform ( <response> response: [ No ], <classification> classification: [ spoof ], <edit_type> edit type: [ multi_microphone ], <mic_quantity> mic quantity: [ >1 ], <signal_length> signal length: [ 5 ]> )"
  },
  {
    "mr": "inform(extracted[LFCC], model[CNN], important[LFCC-33], classification[replayed])",
    "ref": [
      " the audio sample had LFCC features extracted and LFCC-33 was determined to have a large impact on the CNN model that determined the sample to be replay .",
      " the audio sample had CNN features extracted and CNN-33 was determined to have a large impact on the CNN model that determined the sample to be replayed .",
      "The audio has been tampered with .",
      "the audio sample had LFCC features extracted and LFCC-33 was determined to have a large impact on the CNN model that determined the sample to be replayed .  the audio sample had LFCC features extracted and LFCC-33 was determined to have a large impact on the CNN model that determined the sample to be replayed .",
      " the audio sample had LFCC features extracted and LFCC-33 was determined to have a large impact on the replayed model that determined the sample to be replayed .",
      " the audio sample had LFC features extracted and LFC-33 was determined to have a large impact on the CNN model that determined the sample to be replayed .",
      " the audio sample had LFCC features extracted and LFCC-33 was determined to have a large impact on the C model that determined the sample to be replayed .",
      " the audio sample had LFCC features extracted and LFCC-33 was determined to have a large impact on the CNN model that determined the sample to be LFCC-33 .",
      " the audio sample had LFCC features extracted and LFCC-3 was determined to have a large impact on the CNN model that determined the sample to be replayed .",
      "The audio has been tampered with .  the audio sample had LFCC features extracted and LFCC-33 was determined to have a large impact on the CNN model that determined the sample to be replayed .",
      " the audio sample had LFCC features extracted and LFCC-33 was determined to have a large impact on the CNN model that determined the sample to be replayed ."
    ],
    "new_mr": "<inform> inform ( <extracted> extracted: [ LFCC ], <model> model: [ CNN ], <important> important: [ LFCC-33 ], <classification> classification: [ replayed ]> )"
  },
  {
    "mr": "inform(response[yes], speaker_id[3], feature[MFCC-24], interpreter[shap], shap_value[0.5756])",
    "ref": [
      "Yes, person 1 was detected by LFCC-17 with a shap value of 0.7883 .  Yes, person 3 was detected by MFCC-24 with a shap value of 0.5756 .",
      " Yes, person 3 was detected by MFCC-24 with a shap value of yes .",
      " Yes.5756 .",
      " Yes, person  was detected by MFCC-24 with a shap value of 0.5756 .",
      " Yes, person 3 was detected by MFCC-24 with a sha value of 0.5756 .",
      " Yes, person 3 was detected by shap with a shap value of 0.5756 .",
      "Yes, person 1 was detected by LFCC-17 with a shap value of 0.7883 .",
      " Yes, person 3 was detected by MFCC-24 with a 3 value of 0.5756 .",
      " Yes, person 3 was detected by MFCC-24 with a shap value of 0.5 .",
      " Yes, person 3 was detected by  with a shap value of 0.5756 .",
      " Yes, person 3 was detected by MFCC-24 with a shap value of 0.5756 ."
    ],
    "new_mr": "<inform> inform ( <response> response: [ yes ], <speaker_id> speaker id: [ 3 ], <feature> feature: [ MFCC-24 ], <interpreter> interpreter: [ shap ], <shap_value> shap value: [ 0.5756 ]> )"
  },
  {
    "mr": "inform(response[yes], speaker_id[5], feature[PSRCC-9], interpreter[shap], shap_value[0.786])",
    "ref": [
      " Yes, PSRCC-9, which a sha value of 0.786, was used to detect the id of speaker 5 for the audio sample .",
      " Yes, which a shap value of 0.786, was used to detect the id of speaker 5 for the audio sample .",
      " Yes, PSRCC-9, which a shap value of 0.786, was used to detect the id of speaker shap for the audio sample .",
      "Yes, MFCC-18, which a shap value of -0.4909, was used to detect the sample as bonafide .",
      " Yes, PSRCC-9, which a shap value of 0.78, was used to detect the id of speaker 5 for the audio sample .",
      " Yes, yes, which a shap value of 0.786, was used to detect the id of speaker 5 for the audio sample .",
      "Yes, MFCC-18, which a shap value of -0.4909, was used to detect the sample as bonafide .  Yes, PSRCC-9, which a shap value of 0.786, was used to detect the id of speaker 5 for the audio sample .",
      " Yes.786, was used to detect the id of speaker 5 for the audio sample .",
      "Yes, PSRCC-9, which a shap value of 0.786, was used to detect the id of speaker 5 for the audio sample .  Yes, PSRCC-9, which a shap value of 0.786, was used to detect the id of speaker 5 for the audio sample .",
      " Yes, PSRCC-9, which a shap value of 0.786, was used to detect the id of speaker  for the audio sample .",
      " Yes, PSRCC-9, which a shap value of 0.786, was used to detect the id of speaker 5 for the audio sample ."
    ],
    "new_mr": "<inform> inform ( <response> response: [ yes ], <speaker_id> speaker id: [ 5 ], <feature> feature: [ PSRCC-9 ], <interpreter> interpreter: [ shap ], <shap_value> shap value: [ 0.786 ]> )"
  },
  {
    "mr": "inform(response[Yes], interpreter[shap], important[MSRCC-12], classification[replayed], shap_value[-0.046])",
    "ref": [
      " Yes, MSRCC-12, which a shap value of -0.046.",
      " Yes, MSRCC-12.046, was used to detect the sample as replayed .",
      " Yes, MSRCC-12, which a shap value of -0.046, was used to detect the sample as -0.046 .",
      " Yes.046, was used to detect the sample as replayed .",
      " Yes, MSRCC-12, was used to detect the sample as replayed .",
      " Yes, MSRCC-12, which a shap value of -0.046, was used to detect the sample as re .",
      " Yes, MSRCC-12, which a shap value of replayed, was used to detect the sample as replayed .",
      " Yes, which a shap value of -0.046, was used to detect the sample as replayed .",
      " Yes, MSRCC-12, which a -0.046 value of -0.046, was used to detect the sample as replayed .",
      " Yes, MSRCC-12, which a shap value of -, was used to detect the sample as replayed .",
      " Yes, MSRCC-12, which a shap value of -0.046, was used to detect the sample as replayed ."
    ],
    "new_mr": "<inform> inform ( <response> response: [ Yes ], <interpreter> interpreter: [ shap ], <important> important: [ MSRCC-12 ], <classification> classification: [ replayed ], <shap_value> shap value: [ -0.046 ]> )"
  },
  {
    "mr": "inform(classification[bonafide], edit_type[none])",
    "ref": [
      "There are no unusually long or short pauses . There are no unusually long or short pauses .",
      "Yes, MFCC-18, which a shap value of 0.2232, was used to detect the sample as replayed . There are no unusually long or short pauses .",
      "Yes, MFCC-18, which a shap value of 0.2232, was used to detect the sample as replayed .",
      "There are no unusually long or short pauses . There are no unusually long or short pauses .",
      "Yes, MFCC-18, which a shap value of 0.2232, was used to detect the sample as replayed . There are no unusually long or short pauses .",
      "Yes, MFCC-18, which a shap value of 0.2232, was used to detect the sample as replayed .",
      "There are no unusually long or short pauses . There are no unusually long or short pauses .",
      "Yes, MFCC-18, which a shap value of 0.2232, was used to detect the sample as replayed . There are no unusually long or short pauses .",
      "Yes, MFCC-18, which a shap value of 0.2232, was used to detect the sample as replayed .",
      "There are no unusually long or short pauses . There are no unusually long or short pauses .",
      "There are no unusually long or short pauses ."
    ],
    "new_mr": "<inform> inform ( <classification> classification: [ bonafide ], <edit_type> edit type: [ none ]> )"
  },
  {
    "mr": "inform(response[Yes], interpreter[shap], important[LFCC-4], classification[bonafide], shap_value[-0.512])",
    "ref": [
      " Yes, LFCC-4, which a shap value of -0.512.",
      "The SHAP values indicate the contribution of the features on the outcome of the classification model .",
      " Yes, which a shap value of -0.512, was used to detect the sample as bonafide .",
      " Yes, LFCC-4, was used to detect the sample as bonafide .",
      " Yes, LFCC-4, which a shap value of -0.512, was used to detect the sample as bon .",
      " Yes, , which a shap value of -0.512, was used to detect the sample as bonafide .",
      " bonafide, LFCC-4, which a shap value of -0.512, was used to detect the sample as bonafide .",
      "The SHAP values indicate the contribution of the features on the outcome of the classification model .  Yes, LFCC-4, which a shap value of -0.512, was used to detect the sample as bonafide .",
      " Yes, LFCC-4, which a shap value of -, was used to detect the sample as bonafide .",
      " Yes, LFCC-4, which a shap value of -0.512, was used to detect the sample as shap .",
      " Yes, LFCC-4, which a shap value of -0.512, was used to detect the sample as bonafide ."
    ],
    "new_mr": "<inform> inform ( <response> response: [ Yes ], <interpreter> interpreter: [ shap ], <important> important: [ LFCC-4 ], <classification> classification: [ bonafide ], <shap_value> shap value: [ -0.512 ]> )"
  },
  {
    "mr": "inform(extracted[MFCC], model[CNN], important[MFCC-3], classification[replayed])",
    "ref": [
      " the audio sample had MFCC features extracted and M was determined to have a large impact on the CNN model that determined the sample to be replayed .",
      " the audio sample had MFCC features extracted and MFCC-3 was determined to have a large impact on the MFCC model that determined the sample to be replayed .",
      " the audio sample had MFCC features extracted and CNN was determined to have a large impact on the CNN model that determined the sample to be replayed .",
      "It looks that way .",
      " the audio sample had MFC features extracted and MFC-3 was determined to have a large impact on the CNN model that determined the sample to be replayed .",
      " the audio sample had MFCC features extracted and MFCC-3 was determined to have a large impact on the CNN model that determined the sample to be rep .",
      "It looks that way .  the audio sample had MFCC features extracted and MFCC-3 was determined to have a large impact on the CNN model that determined the sample to be replayed .",
      "the audio sample had MFCC features extracted and MFCC-3 was determined to have a large impact on the CNN model that determined the sample to be replayed .  the audio sample had MFCC features extracted and MFCC-3 was determined to have a large impact on the CNN model that determined the sample to be replayed .",
      " the audio sample had MFCC features extracted and MFCC-3 was determined to have a large impact on the  model that determined the sample to be replayed .",
      " the audio sample had MFCC-3 features extracted and MFCC-3-3 was determined to have a large impact on the CNN model that determined the sample to be replayed .",
      " the audio sample had MFCC features extracted and MFCC-3 was determined to have a large impact on the CNN model that determined the sample to be replayed ."
    ],
    "new_mr": "<inform> inform ( <extracted> extracted: [ MFCC ], <model> model: [ CNN ], <important> important: [ MFCC-3 ], <classification> classification: [ replayed ]> )"
  },
  {
    "mr": "inform(general)",
    "ref": [
      "The SHAP values indicate the contribution of the features on the outcome of the classification model. The SHAP values indicate the contribution of the features on the outcome of the classification model.",
      "Yes, LFCC-55, which a shap value of 0.3192, was used to detect the sample as replayed .",
      "Yes, LFCC-55, which a shap value of 0.3192, was used to detect the sample as replayed . The SHAP values indicate the contribution of the features on the outcome of the classification model.",
      "The SHAP values indicate the contribution of the features on the outcome of the classification model. The SHAP values indicate the contribution of the features on the outcome of the classification model.",
      "Yes, LFCC-55, which a shap value of 0.3192, was used to detect the sample as replayed .",
      "Yes, LFCC-55, which a shap value of 0.3192, was used to detect the sample as replayed . The SHAP values indicate the contribution of the features on the outcome of the classification model.",
      "The SHAP values indicate the contribution of the features on the outcome of the classification model. The SHAP values indicate the contribution of the features on the outcome of the classification model.",
      "Yes, LFCC-55, which a shap value of 0.3192, was used to detect the sample as replayed .",
      "Yes, LFCC-55, which a shap value of 0.3192, was used to detect the sample as replayed . The SHAP values indicate the contribution of the features on the outcome of the classification model.",
      "The SHAP values indicate the contribution of the features on the outcome of the classification model. The SHAP values indicate the contribution of the features on the outcome of the classification model.",
      "The SHAP values indicate the contribution of the features on the outcome of the classification model."
    ],
    "new_mr": "<inform> inform ( > )"
  },
  {
    "mr": "inform(response[Yes], interpreter[shap], important[MFCC-30], classification[replayed], shap_value[-0.7633])",
    "ref": [
      " MFCC-30, MFCC-30, which a shap value of -0.7633, was used to detect the sample as replayed .",
      " Yes.7633, was used to detect the sample as replayed .",
      " Yes, MFCC-30, which a Yes value of -0.7633, was used to detect the sample as replayed .",
      " Yes, MFCC-30, which a shap value of -0.7633, was used to detect the sample as replaye .",
      " Yes, MFCC-30, which a s value of -0.7633, was used to detect the sample as replayed .",
      " Yes, MFCC-30, which a shap value of -0.7633.",
      " Yes, MFCC-30, was used to detect the sample as replayed .",
      "Yes, LFCC-15, which a shap value of -0.1785, was used to detect the sample as bonafide .  Yes, MFCC-30, which a shap value of -0.7633, was used to detect the sample as replayed .",
      " Yes, MFC, which a shap value of -0.7633, was used to detect the sample as replayed .",
      "Yes, MFCC-30, which a shap value of -0.7633, was used to detect the sample as replayed .  Yes, MFCC-30, which a shap value of -0.7633, was used to detect the sample as replayed .",
      " Yes, MFCC-30, which a shap value of -0.7633, was used to detect the sample as replayed ."
    ],
    "new_mr": "<inform> inform ( <response> response: [ Yes ], <interpreter> interpreter: [ shap ], <important> important: [ MFCC-30 ], <classification> classification: [ replayed ], <shap_value> shap value: [ -0.7633 ]> )"
  },
  {
    "mr": "inform(response[Yes], interpreter[shap], important[MFCC-20], classification[replayed], shap_value[0.1791])",
    "ref": [
      " Yes, , which a shap value of 0.1791, was used to detect the sample as replayed .",
      " Yes, MFCC-20.1791, was used to detect the sample as replayed .",
      " Yes, MFCC-20, which a shap value of Yes, was used to detect the sample as replayed .",
      " Yes, MFCC-20, was used to detect the sample as replayed .",
      " Yes, 0.1791, which a shap value of 0.1791, was used to detect the sample as replayed .",
      " Yes, which a shap value of 0.1791, was used to detect the sample as replayed .",
      "Yes, MFCC-1, which a shap value of -0.5673, was used to detect the sample as replayed .  Yes, MFCC-20, which a shap value of 0.1791, was used to detect the sample as replayed .",
      " Yes.1791, was used to detect the sample as replayed .",
      "Yes, MFCC-1, which a shap value of -0.5673, was used to detect the sample as replayed .",
      " Yes, MFCC-20, which a shap value of 0.1791, was used to detect the sample as MFCC-20 .",
      " Yes, MFCC-20, which a shap value of 0.1791, was used to detect the sample as replayed ."
    ],
    "new_mr": "<inform> inform ( <response> response: [ Yes ], <interpreter> interpreter: [ shap ], <important> important: [ MFCC-20 ], <classification> classification: [ replayed ], <shap_value> shap value: [ 0.1791 ]> )"
  },
  {
    "mr": "inform(response[yes], speaker_id[7], feature[MFCC-2], interpreter[shap], shap_value[-0.7935])",
    "ref": [
      " Yes, which a shap value of -0.7935, was used to detect the id of speaker 7 for the audio sample .",
      " Yes, MFCC-, which a shap value of -0.7935, was used to detect the id of speaker 7 for the audio sample .",
      "Yes, MFCC-2, which a shap value of -0.7935, was used to detect the id of speaker 7 for the audio sample .  Yes, MFCC-2, which a shap value of -0.7935, was used to detect the id of speaker 7 for the audio sample .",
      " Yes, MFCC-2, which a yes value of -0.7935, was used to detect the id of speaker 7 for the audio sample .",
      " Yes, MFCC-2, which a shap value of -0.shap935, was used to detect the id of speaker shap for the audio sample .",
      " Yes, MFCC-2, was used to detect the id of speaker 7 for the audio sample .",
      " Yes, MFCC-2, which a shap value of -0.935, was used to detect the id of speaker  for the audio sample .",
      " Yes, MFCC-2.7935, was used to detect the id of speaker 7 for the audio sample .",
      " Yes, MFCC-2, which a shap value of -, was used to detect the id of speaker 7 for the audio sample .",
      " Yes, MFCC-2, which a shap value of 7, was used to detect the id of speaker 7 for the audio sample .",
      " Yes, MFCC-2, which a shap value of -0.7935, was used to detect the id of speaker 7 for the audio sample ."
    ],
    "new_mr": "<inform> inform ( <response> response: [ yes ], <speaker_id> speaker id: [ 7 ], <feature> feature: [ MFCC-2 ], <interpreter> interpreter: [ shap ], <shap_value> shap value: [ -0.7935 ]> )"
  },
  {
    "mr": "inform(extracted[LFCC], model[CNN], important[LFCC-16], classification[bonafide])",
    "ref": [
      " the audio sample had LFCC features extracted and LFCC-16 was determined to have a large impact on the CN model that determined the sample to be bonafide .",
      "The average pitch gets higher in this section",
      " the audio sample had LFCC features extracted and LFCC-16 was determined to have a large impact on the CNN model that determined the sample to be bonafid .",
      " the audio sample had L features extracted and L-16 was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      " the audio sample had LFCC features extracted and LFCC-16 was determined to have a large impact on the CNN model that determined the sample to be LFCC-16 .",
      " the audio sample had LFCC features extracted and bonafide was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      "the audio sample had LFCC features extracted and LFCC-16 was determined to have a large impact on the CNN model that determined the sample to be bonafide .  the audio sample had LFCC features extracted and LFCC-16 was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      " the audio sample had LFCC features extracted and LFCC- was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      " the audio sample had CNN features extracted and CNN-16 was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      "The average pitch gets higher in this section  the audio sample had LFCC features extracted and LFCC-16 was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      " the audio sample had LFCC features extracted and LFCC-16 was determined to have a large impact on the CNN model that determined the sample to be bonafide ."
    ],
    "new_mr": "<inform> inform ( <extracted> extracted: [ LFCC ], <model> model: [ CNN ], <important> important: [ LFCC-16 ], <classification> classification: [ bonafide ]> )"
  },
  {
    "mr": "inform(extracted[LFCC], model[CNN], important[LFCC-1], classification[replayed])",
    "ref": [
      "the audio sample had LFCC features extracted and LFCC-38 was determined to have a large impact on the CNN model that determined the sample to be bonafide .  the audio sample had LFCC features extracted and LFCC-1 was determined to have a large impact on the CNN model that determined the sample to be replayed .",
      "the audio sample had LFCC features extracted and LFCC-1 was determined to have a large impact on the CNN model that determined the sample to be replayed .  the audio sample had LFCC features extracted and LFCC-1 was determined to have a large impact on the CNN model that determined the sample to be replayed .",
      " the audio sample had LFCC features extracted and replayed was determined to have a large impact on the CNN model that determined the sample to be replayed .",
      " the audio sample had LFCC features extracted and LFCC-1 was determined to have a large impact on the replayed model that determined the sample to be replayed .",
      " the audio sample had CNN features extracted and CNN-1 was determined to have a large impact on the CNN model that determined the sample to be replayed .",
      " the audio sample had LFCC features extracted and LFCC was determined to have a large impact on the CNN model that determined the sample to be replayed .",
      "the audio sample had LFCC features extracted and LFCC-38 was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      " the audio sample had LFCC features extracted and LFCC-1 was determined to have a large impact on the CNN model that determined the sample to be r .",
      " the audio sample had LFCC features extracted and LFCC-1 was determined to have a large impact on the CNN model that determined the sample to be LFCC .",
      " the audio sample had LFCC features extracted and LFCC-1 was determined to have a large impact on the CN model that determined the sample to be replayed .",
      " the audio sample had LFCC features extracted and LFCC-1 was determined to have a large impact on the CNN model that determined the sample to be replayed ."
    ],
    "new_mr": "<inform> inform ( <extracted> extracted: [ LFCC ], <model> model: [ CNN ], <important> important: [ LFCC-1 ], <classification> classification: [ replayed ]> )"
  },
  {
    "mr": "inform(response[No], classification[spoof], edit_type[multi_microphone], mic_quantity[>1])",
    "ref": [
      "No , the entire recording was made using multiple microphones . No , the entire recording was made using multiple microphones .",
      "Features in the audio show there were two microphones used .",
      "N , the entire recording was made using multiple microphones . ",
      "Features in the audio show there were two microphones used . No , the entire recording was made using multiple microphones .",
      ">1 , the entire recording was made using multiple microphones . ",
      "No . ",
      "No , the entire recording was made using multiple microphones . No , the entire recording was made using multiple microphones .",
      "Features in the audio show there were two microphones used .",
      "N , the entire recording was made using multiple microphones . ",
      "Features in the audio show there were two microphones used . No , the entire recording was made using multiple microphones .",
      "No , the entire recording was made using multiple microphones . "
    ],
    "new_mr": "<inform> inform ( <response> response: [ No ], <classification> classification: [ spoof ], <edit_type> edit type: [ multi_microphone ], <mic_quantity> mic quantity: [ >1 ]> )"
  },
  {
    "mr": "inform(interpreter[shap], important[MFCC-29], shap_value[0.8612])",
    "ref": [
      "the audio sample had MSRCC features extracted and MSRCC-3 was determined to have a large impact on the CNN model that determined the sample to be replayed .",
      " shap determined that the 0.8612 feature was one of the more important features by assigning it a value of 0.8612 .",
      " sha determined that the MFCC-29 feature was one of the more important features by assigning it a value of 0.8612 .",
      "the audio sample had MSRCC features extracted and MSRCC-3 was determined to have a large impact on the CNN model that determined the sample to be replayed .  shap determined that the MFCC-29 feature was one of the more important features by assigning it a value of 0.8612 .",
      " shap determined that the MF feature was one of the more important features by assigning it a value of 0.8612 .",
      " shap determined that the MFCC-29 feature was one of the more important features by assigning it a value of MFCC-29 .",
      "shap determined that the MFCC-29 feature was one of the more important features by assigning it a value of 0.8612 .  shap determined that the MFCC-29 feature was one of the more important features by assigning it a value of 0.8612 .",
      " shap determined that the MFCC-29 feature was one of the more important features by assigning it a value of 0.8 .",
      " MFCC-29 determined that the MFCC-29 feature was one of the more important features by assigning it a value of 0.8612 .",
      "the audio sample had MSRCC features extracted and MSRCC-3 was determined to have a large impact on the CNN model that determined the sample to be replayed .",
      " shap determined that the MFCC-29 feature was one of the more important features by assigning it a value of 0.8612 ."
    ],
    "new_mr": "<inform> inform ( <interpreter> interpreter: [ shap ], <important> important: [ MFCC-29 ], <shap_value> shap value: [ 0.8612 ]> )"
  },
  {
    "mr": "inform(extracted[PSRCC], model[CNN], important[PSRCC-9], classification[bonafide])",
    "ref": [
      " the audio sample had PSRCC features extracted and PSRCC-9 was determined to have a large impact on the C model that determined the sample to be bonafide .",
      "shap determined that the MFCC-17 feature was one of the more important features by assigning it a value of 0.8093 .  the audio sample had PSRCC features extracted and PSRCC-9 was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      "the audio sample had PSRCC features extracted and PSRCC-9 was determined to have a large impact on the CNN model that determined the sample to be bonafide .  the audio sample had PSRCC features extracted and PSRCC-9 was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      " the audio sample had CNN features extracted and CNN-9 was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      " the audio sample had P features extracted and P-9 was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      " the audio sample had PSRCC features extracted and PSRCC-9 was determined to have a large impact on the PSRCC model that determined the sample to be bonafide .",
      " the audio sample had PSRCC features extracted and PSRCC-9 was determined to have a large impact on the CNN model that determined the sample to be bonafi .",
      " the audio sample had PSRCC features extracted and  was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      " the audio sample had PSRCC features extracted and bonafide was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      " the audio sample had PSRCC features extracted and PSRCC-9 was determined to have a large impact on the CNN model that determined the sample to be PSRCC-9 .",
      " the audio sample had PSRCC features extracted and PSRCC-9 was determined to have a large impact on the CNN model that determined the sample to be bonafide ."
    ],
    "new_mr": "<inform> inform ( <extracted> extracted: [ PSRCC ], <model> model: [ CNN ], <important> important: [ PSRCC-9 ], <classification> classification: [ bonafide ]> )"
  },
  {
    "mr": "inform(extracted[LFCC], model[CNN], important[LFCC-8], classification[replayed])",
    "ref": [
      " the audio sample had LFCC features extracted and LFCC-8 was determined to have a large impact on the LFCC model that determined the sample to be replayed .",
      "the audio sample had LFCC features extracted and LFCC-8 was determined to have a large impact on the CNN model that determined the sample to be replayed .  the audio sample had LFCC features extracted and LFCC-8 was determined to have a large impact on the CNN model that determined the sample to be replayed .",
      " the audio sample had LFCC features extracted and  was determined to have a large impact on the CNN model that determined the sample to be replayed .",
      "Yes, MSRCC-0, which a shap value of -0.5766, was used to detect the sample as bonafide .",
      " the audio sample had LFCC features extracted and LFCC-8 was determined to have a large impact on the CNN model that determined the sample to be CNN .",
      " the audio sample had LFCC features extracted and LFCC-8 was determined to have a large impact on the C model that determined the sample to be replayed .",
      "Yes, MSRCC-0, which a shap value of -0.5766, was used to detect the sample as bonafide .  the audio sample had LFCC features extracted and LFCC-8 was determined to have a large impact on the CNN model that determined the sample to be replayed .",
      " the audio sample had LFCC features extracted and LFCC-8 was determined to have a large impact on the CNN model that determined the sample to be  .",
      " the audio sample had CNN features extracted and CNN-8 was determined to have a large impact on the CNN model that determined the sample to be replayed .",
      " the audio sample had LFC features extracted and LFC-8 was determined to have a large impact on the CNN model that determined the sample to be replayed .",
      " the audio sample had LFCC features extracted and LFCC-8 was determined to have a large impact on the CNN model that determined the sample to be replayed ."
    ],
    "new_mr": "<inform> inform ( <extracted> extracted: [ LFCC ], <model> model: [ CNN ], <important> important: [ LFCC-8 ], <classification> classification: [ replayed ]> )"
  },
  {
    "mr": "inform(extracted[PSRCC], model[CNN], important[PSRCC-2], classification[bonafide])",
    "ref": [
      " the audio sample had P features extracted and P-2 was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      " the audio sample had PSRCC features extracted and PSRCC-2 was determined to have a large impact on the CNN model that determined the sample to be PSRCC-2 .",
      "shap determined that the GTCC-9 feature was one of the more important features by assigning it a value of 0 .  the audio sample had PSRCC features extracted and PSRCC-2 was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      " the audio sample had PSRCC features extracted and PSRCC-2 was determined to have a large impact on the bonafide model that determined the sample to be bonafide .",
      "the audio sample had PSRCC features extracted and PSRCC-2 was determined to have a large impact on the CNN model that determined the sample to be bonafide .  the audio sample had PSRCC features extracted and PSRCC-2 was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      " the audio sample had PSRCC features extracted and PSRCC-2 was determined to have a large impact on the CNN model that determined the sample to be bonafi .",
      "shap determined that the GTCC-9 feature was one of the more important features by assigning it a value of 0 .",
      " the audio sample had PSRCC features extracted and PSR was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      " the audio sample had PSRCC features extracted and PSRCC-2 was determined to have a large impact on the CN model that determined the sample to be bonafide .",
      " the audio sample had bonafide features extracted and bonafide-2 was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      " the audio sample had PSRCC features extracted and PSRCC-2 was determined to have a large impact on the CNN model that determined the sample to be bonafide ."
    ],
    "new_mr": "<inform> inform ( <extracted> extracted: [ PSRCC ], <model> model: [ CNN ], <important> important: [ PSRCC-2 ], <classification> classification: [ bonafide ]> )"
  },
  {
    "mr": "inform(speaker_id[3])",
    "ref": [
      "shap determined that the MFCC-3 feature was one of the more important features by assigning it a value of 0.8689 .  3 was found to be the id of the speaker in the sample .",
      "3 was found to be the id of the speaker in the sample .  3 was found to be the id of the speaker in the sample .",
      "shap determined that the MFCC-3 feature was one of the more important features by assigning it a value of 0.8689 .",
      "  was found to be the id of the speaker in the sample .",
      "shap determined that the MFCC-3 feature was one of the more important features by assigning it a value of 0.8689 .  3 was found to be the id of the speaker in the sample .",
      "3 was found to be the id of the speaker in the sample .  3 was found to be the id of the speaker in the sample .",
      "shap determined that the MFCC-3 feature was one of the more important features by assigning it a value of 0.8689 .",
      "  was found to be the id of the speaker in the sample .",
      "shap determined that the MFCC-3 feature was one of the more important features by assigning it a value of 0.8689 .  3 was found to be the id of the speaker in the sample .",
      "3 was found to be the id of the speaker in the sample .  3 was found to be the id of the speaker in the sample .",
      " 3 was found to be the id of the speaker in the sample ."
    ],
    "new_mr": "<inform> inform ( <speaker_id> speaker id: [ 3 ]> )"
  },
  {
    "mr": "inform(response[yes], speaker_id[2], feature[LFCC-30], interpreter[shap], shap_value[-0.9742])",
    "ref": [
      " Yes, person 2 was detected by -0.9742 with a shap value of -0.9742 .",
      " Yes, person  was detected by LFCC-30 with a shap value of -0.974 .",
      " Yes.9742 .",
      " Yes, person 2 was detected by LFCC-30 with a s value of -0.9742 .",
      " Yes, person 2 was detected by LFCC-30 with a shap value of yes .",
      "Yes, person 2 was detected by LFCC-30 with a shap value of -0.9742 .  Yes, person 2 was detected by LFCC-30 with a shap value of -0.9742 .",
      " Yes, person -0.9742 was detected by LFCC-30 with a shap value of -0.974-0.9742 .",
      " Yes, person 2 was detected by LFCC-30 with a -0.9742 value of -0.9742 .",
      "Yes, LFCC-4, which a shap value of -0.069, was used to detect the sample as replayed .  Yes, person 2 was detected by LFCC-30 with a shap value of -0.9742 .",
      " Yes, person 2 was detected by LFCC-30 with a shap value of -0.9 .",
      " Yes, person 2 was detected by LFCC-30 with a shap value of -0.9742 ."
    ],
    "new_mr": "<inform> inform ( <response> response: [ yes ], <speaker_id> speaker id: [ 2 ], <feature> feature: [ LFCC-30 ], <interpreter> interpreter: [ shap ], <shap_value> shap value: [ -0.9742 ]> )"
  },
  {
    "mr": "inform(extracted[LFCC], model[CNN], important[LFCC-5], classification[replayed])",
    "ref": [
      " the audio sample had LFCC features extracted and LFCC-5 was determined to have a large impact on the CN model that determined the sample to be replayed .",
      "No other features detected a Microphone signal .  the audio sample had LFCC features extracted and LFCC-5 was determined to have a large impact on the CNN model that determined the sample to be replayed .",
      " the audio sample had LFCC features extracted and LFCC-5 was determined to have a large impact on the CNN model that determined the sample to be repl .",
      " the audio sample had LFCC features extracted and replayed was determined to have a large impact on the CNN model that determined the sample to be replayed .",
      " the audio sample had L features extracted and L-5 was determined to have a large impact on the CNN model that determined the sample to be replayed .",
      " the audio sample had LFCC-5 features extracted and LFCC-5-5 was determined to have a large impact on the CNN model that determined the sample to be replayed .",
      "the audio sample had LFCC features extracted and LFCC-5 was determined to have a large impact on the CNN model that determined the sample to be replayed .  the audio sample had LFCC features extracted and LFCC-5 was determined to have a large impact on the CNN model that determined the sample to be replayed .",
      "No other features detected a Microphone signal .",
      " the audio sample had LFCC features extracted and LFCC-5 was determined to have a large impact on the CNN model that determined the sample to be CNN .",
      " the audio sample had LFCC features extracted and LFCC-5 was determined to have a large impact on the replayed model that determined the sample to be replayed .",
      " the audio sample had LFCC features extracted and LFCC-5 was determined to have a large impact on the CNN model that determined the sample to be replayed ."
    ],
    "new_mr": "<inform> inform ( <extracted> extracted: [ LFCC ], <model> model: [ CNN ], <important> important: [ LFCC-5 ], <classification> classification: [ replayed ]> )"
  },
  {
    "mr": "inform(response[Yes], interpreter[shap], important[GTCC-7], classification[bonafide], shap_value[1])",
    "ref": [
      " Yes, GTCC-, which a shap value of 1, was used to detect the sample as bonafide .",
      " Yes, GTCC-7, was used to detect the sample as bonafide .",
      "Yes, LFCC-59, which a shap value of -0.6167, was used to detect the sample as bonafide .  Yes, GTCC-7, which a shap value of 1, was used to detect the sample as bonafide .",
      " Yes, GTCC-7, which a shap value of 1.",
      " Yes, which a shap value of 1, was used to detect the sample as bonafide .",
      " Yes, 1, which a shap value of 1, was used to detect the sample as bonafide .",
      " Yes, GTCC-7, which a shap value of shap, was used to detect the sample as bonafide .",
      " Yes, GTCC-7, which a sha value of 1, was used to detect the sample as bonafide .",
      " Yes, GTCC-7.",
      " Yes, GTCC-7, which a 1 value of 1, was used to detect the sample as bonafide .",
      " Yes, GTCC-7, which a shap value of 1, was used to detect the sample as bonafide ."
    ],
    "new_mr": "<inform> inform ( <response> response: [ Yes ], <interpreter> interpreter: [ shap ], <important> important: [ GTCC-7 ], <classification> classification: [ bonafide ], <shap_value> shap value: [ 1 ]> )"
  },
  {
    "mr": "inform(classification[bonafide], edit_type[none])",
    "ref": [
      "Yes, LFCC-31, which a shap value of -0.7141, was used to detect the id of speaker 3 for the audio sample . This is a poor quality recording .",
      "This is a poor quality recording . This is a poor quality recording .",
      "Yes, LFCC-31, which a shap value of -0.7141, was used to detect the id of speaker 3 for the audio sample .",
      "Yes, LFCC-31, which a shap value of -0.7141, was used to detect the id of speaker 3 for the audio sample . This is a poor quality recording .",
      "This is a poor quality recording . This is a poor quality recording .",
      "Yes, LFCC-31, which a shap value of -0.7141, was used to detect the id of speaker 3 for the audio sample .",
      "Yes, LFCC-31, which a shap value of -0.7141, was used to detect the id of speaker 3 for the audio sample . This is a poor quality recording .",
      "This is a poor quality recording . This is a poor quality recording .",
      "Yes, LFCC-31, which a shap value of -0.7141, was used to detect the id of speaker 3 for the audio sample .",
      "Yes, LFCC-31, which a shap value of -0.7141, was used to detect the id of speaker 3 for the audio sample . This is a poor quality recording .",
      "This is a poor quality recording . "
    ],
    "new_mr": "<inform> inform ( <classification> classification: [ bonafide ], <edit_type> edit type: [ none ]> )"
  },
  {
    "mr": "inform(response[yes], speaker_id[2], feature[MFCC-3], interpreter[shap], shap_value[0.0695])",
    "ref": [
      " Yes, MFCC-3, which a shap value of 0.0695, was used to detect the id of speaker  for the audio sample .",
      " Yes.0695, was used to detect the id of speaker 2 for the audio sample .",
      " Yes, MFCC-3, which a shap value of 0.0695.",
      "The recording appears to be a copy .  Yes, MFCC-3, which a shap value of 0.0695, was used to detect the id of speaker 2 for the audio sample .",
      "The recording appears to be a copy .",
      " Yes, 2, which a shap value of 0.0695, was used to detect the id of speaker 2 for the audio sample .",
      "Yes, MFCC-3, which a shap value of 0.0695, was used to detect the id of speaker 2 for the audio sample .  Yes, MFCC-3, which a shap value of 0.0695, was used to detect the id of speaker 2 for the audio sample .",
      " Yes, MFCC-3, which a sha value of 0.0695, was used to detect the id of speaker 2 for the audio sample .",
      " Yes, MFCC-3, was used to detect the id of speaker 2 for the audio sample .",
      " Yes, MFCC-3.0695, was used to detect the id of speaker 2 for the audio sample .",
      " Yes, MFCC-3, which a shap value of 0.0695, was used to detect the id of speaker 2 for the audio sample ."
    ],
    "new_mr": "<inform> inform ( <response> response: [ yes ], <speaker_id> speaker id: [ 2 ], <feature> feature: [ MFCC-3 ], <interpreter> interpreter: [ shap ], <shap_value> shap value: [ 0.0695 ]> )"
  },
  {
    "mr": "inform(response[Yes], interpreter[shap], important[MFCC-11], classification[bonafide], shap_value[0.8105])",
    "ref": [
      " Yes, MFCC-11, which a sh value of 0.8105, was used to detect the sample as bonafide .",
      " Yes, which a shap value of 0.8105, was used to detect the sample as bonafide .",
      " Ye, MFCC-11, which a shap value of 0.8105, was used to detect the sample as bonafide .",
      " Yes, MFCC-11, which a shap value of 0.8105, was used to detect the sample as Yes .",
      " Yes, 0.8105, which a shap value of 0.8105, was used to detect the sample as bonafide .",
      " Yes, MFCC-11, which a shap value of 0, was used to detect the sample as bonafide .",
      " Yes, MFCC-11, which a shap value of 0.8105.",
      "Yes, MFCC-3, which a shap value of -0.1314, was used to detect the sample as bonafide .  Yes, MFCC-11, which a shap value of 0.8105, was used to detect the sample as bonafide .",
      " Yes.8105, was used to detect the sample as bonafide .",
      " Yes, MFCC-11.8105, was used to detect the sample as bonafide .",
      " Yes, MFCC-11, which a shap value of 0.8105, was used to detect the sample as bonafide ."
    ],
    "new_mr": "<inform> inform ( <response> response: [ Yes ], <interpreter> interpreter: [ shap ], <important> important: [ MFCC-11 ], <classification> classification: [ bonafide ], <shap_value> shap value: [ 0.8105 ]> )"
  },
  {
    "mr": "inform(extracted[MSRCC], model[CNN], important[MSRCC-9], classification[bonafide])",
    "ref": [
      "the audio sample had LFCC features extracted and LFCC-53 was determined to have a large impact on the CNN model that determined the sample to be replayed .  the audio sample had MSRCC features extracted and MSRCC-9 was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      " the audio sample had MSRCC features extracted and MSRCC-9 was determined to have a large impact on the bonafide model that determined the sample to be bonafide .",
      " the audio sample had M features extracted and M-9 was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      " the audio sample had MSRCC features extracted and MSRCC-9 was determined to have a large impact on the CNN model that determined the sample to be bo .",
      "the audio sample had MSRCC features extracted and MSRCC-9 was determined to have a large impact on the CNN model that determined the sample to be bonafide .  the audio sample had MSRCC features extracted and MSRCC-9 was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      " the audio sample had MSRCC features extracted and MSR was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      " the audio sample had MSRCC features extracted and MSRCC-9 was determined to have a large impact on the CNN model that determined the sample to be CNN .",
      "the audio sample had LFCC features extracted and LFCC-53 was determined to have a large impact on the CNN model that determined the sample to be replayed .",
      " the audio sample had MSRCC features extracted and MSRCC-9 was determined to have a large impact on the  model that determined the sample to be bonafide .",
      " the audio sample had bonafide features extracted and bonafide-9 was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      " the audio sample had MSRCC features extracted and MSRCC-9 was determined to have a large impact on the CNN model that determined the sample to be bonafide ."
    ],
    "new_mr": "<inform> inform ( <extracted> extracted: [ MSRCC ], <model> model: [ CNN ], <important> important: [ MSRCC-9 ], <classification> classification: [ bonafide ]> )"
  },
  {
    "mr": "inform(response[Yes], interpreter[shap], important[LFCC-58], classification[replayed], shap_value[0.7518])",
    "ref": [
      " Yes, replayed, which a shap value of 0.7518, was used to detect the sample as replayed .",
      " Yes, LFCC-58, which a shap value of 0.7518, was used to detect the sample as shap .",
      " Yes, LFCC-58, which a shap value of 0.7518.",
      " Yes, LFCC-58, which a sha value of 0.7518, was used to detect the sample as replayed .",
      " Yes, LFCC-58, which a shap value of Yes, was used to detect the sample as replayed .",
      " Yes, LFCC-58, which a shap value of 0, was used to detect the sample as replayed .",
      "There are inconsistencies in the number of people speaking .  Yes, LFCC-58, which a shap value of 0.7518, was used to detect the sample as replayed .",
      " Yes.7518, was used to detect the sample as replayed .",
      " Yes, LFCC-58, was used to detect the sample as replayed .",
      " Yes, LFCC-58.7518, was used to detect the sample as replayed .",
      " Yes, LFCC-58, which a shap value of 0.7518, was used to detect the sample as replayed ."
    ],
    "new_mr": "<inform> inform ( <response> response: [ Yes ], <interpreter> interpreter: [ shap ], <important> important: [ LFCC-58 ], <classification> classification: [ replayed ], <shap_value> shap value: [ 0.7518 ]> )"
  },
  {
    "mr": "inform(extracted[LFCC], model[CNN], important[LFCC-57], classification[replayed])",
    "ref": [
      "Yes, the recording was found to be spoofed.",
      "the audio sample had LFCC features extracted and LFCC-57 was determined to have a large impact on the CNN model that determined the sample to be replayed .  the audio sample had LFCC features extracted and LFCC-57 was determined to have a large impact on the CNN model that determined the sample to be replayed .",
      " the audio sample had replayed features extracted and replayed-57 was determined to have a large impact on the CNN model that determined the sample to be replayed .",
      " the audio sample had LFCC features extracted and LFCC-57 was determined to have a large impact on the LFCC model that determined the sample to be replayed .",
      "Yes, the recording was found to be spoofed.  the audio sample had LFCC features extracted and LFCC-57 was determined to have a large impact on the CNN model that determined the sample to be replayed .",
      " the audio sample had LFCC features extracted and LF was determined to have a large impact on the CNN model that determined the sample to be replayed .",
      " the audio sample had LFCC features extracted and LFCC-57 was determined to have a large impact on the CNN model that determined the sample to be replay .",
      " the audio sample had LFCC features extracted and replayed was determined to have a large impact on the CNN model that determined the sample to be replayed .",
      " the audio sample had LFCC features extracted and LFCC-57 was determined to have a large impact on the CNN model that determined the sample to be LFCC-57 .",
      " the audio sample had LFCC features extracted and LFCC-57 was determined to have a large impact on the  model that determined the sample to be replayed .",
      " the audio sample had LFCC features extracted and LFCC-57 was determined to have a large impact on the CNN model that determined the sample to be replayed ."
    ],
    "new_mr": "<inform> inform ( <extracted> extracted: [ LFCC ], <model> model: [ CNN ], <important> important: [ LFCC-57 ], <classification> classification: [ replayed ]> )"
  },
  {
    "mr": "inform(extracted[LFCC], model[CNN], important[LFCC-12], classification[bonafide])",
    "ref": [
      " the audio sample had bonafide features extracted and bonafide-12 was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      " the audio sample had LFCC features extracted and LFCC-1 was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      " the audio sample had LFCC features extracted and bonafide was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      "The audio is not converted .",
      "The audio is not converted .  the audio sample had LFCC features extracted and LFCC-12 was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      " the audio sample had LFCC features extracted and LFCC-12 was determined to have a large impact on the LFCC-12 model that determined the sample to be bonafide .",
      " the audio sample had LFCC features extracted and LFCC-12 was determined to have a large impact on the CNN model that determined the sample to be CNN .",
      " the audio sample had LFCC features extracted and LFCC-12 was determined to have a large impact on the CNN model that determined the sample to be  .",
      " the audio sample had LFC features extracted and LFC-12 was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      "the audio sample had LFCC features extracted and LFCC-12 was determined to have a large impact on the CNN model that determined the sample to be bonafide .  the audio sample had LFCC features extracted and LFCC-12 was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      " the audio sample had LFCC features extracted and LFCC-12 was determined to have a large impact on the CNN model that determined the sample to be bonafide ."
    ],
    "new_mr": "<inform> inform ( <extracted> extracted: [ LFCC ], <model> model: [ CNN ], <important> important: [ LFCC-12 ], <classification> classification: [ bonafide ]> )"
  },
  {
    "mr": "inform(interpreter[shap], important[LFCC-4], shap_value[-0.1907])",
    "ref": [
      " shap determined that the LFCC-4 feature was one of the more important features by assigning it a value of LFCC-4 .",
      " shap determined that the LF feature was one of the more important features by assigning it a value of -0.1907 .",
      "Yes, MFCC-23, which a shap value of -0.3555, was used to detect the sample as replayed .",
      " -0.1907 determined that the LFCC-4 feature was one of the more important features by assigning it a value of -0.1907 .",
      "Yes, MFCC-23, which a shap value of -0.3555, was used to detect the sample as replayed .  shap determined that the LFCC-4 feature was one of the more important features by assigning it a value of -0.1907 .",
      " shap determined that the -0.1907 feature was one of the more important features by assigning it a value of -0.1907 .",
      "shap determined that the LFCC-4 feature was one of the more important features by assigning it a value of -0.1907 .  shap determined that the LFCC-4 feature was one of the more important features by assigning it a value of -0.1907 .",
      "  determined that the LFCC-4 feature was one of the more important features by assigning it a value of -0.1907 .",
      " shap determined that the LFCC-4 feature was one of the more important features by assigning it a value of -0.1 .",
      " shap determined that the LFCC-4 feature was one of the more important features by assigning it a value of LFCC-4 .",
      " shap determined that the LFCC-4 feature was one of the more important features by assigning it a value of -0.1907 ."
    ],
    "new_mr": "<inform> inform ( <interpreter> interpreter: [ shap ], <important> important: [ LFCC-4 ], <shap_value> shap value: [ -0.1907 ]> )"
  },
  {
    "mr": "inform(classification[spoof], edit_type[recording_slowed])",
    "ref": [
      "yes, GTCC-1 was used to determine speaker id . The recording is artificially slowed .",
      "yes, GTCC-1 was used to determine speaker id .",
      "The recording is artificially slowed . The recording is artificially slowed .",
      "yes, GTCC-1 was used to determine speaker id . The recording is artificially slowed .",
      "yes, GTCC-1 was used to determine speaker id .",
      "The recording is artificially slowed . The recording is artificially slowed .",
      "yes, GTCC-1 was used to determine speaker id . The recording is artificially slowed .",
      "yes, GTCC-1 was used to determine speaker id .",
      "The recording is artificially slowed . The recording is artificially slowed .",
      "yes, GTCC-1 was used to determine speaker id . The recording is artificially slowed .",
      "The recording is artificially slowed ."
    ],
    "new_mr": "<inform> inform ( <classification> classification: [ spoof ], <edit_type> edit type: [ recording_slowed ]> )"
  },
  {
    "mr": "inform(response[Yes], interpreter[shap], important[GTCC-7], classification[replayed], shap_value[0])",
    "ref": [
      "the audio sample had MFCC features extracted and MFCC-6 was determined to have a large impact on the CNN model that determined the sample to be replayed .",
      " Yes, GTCC-7, which a shap value of 0.",
      "Yes, GTCC-7, which a shap value of 0, was used to detect the sample as replayed .  Yes, GTCC-7, which a shap value of 0, was used to detect the sample as replayed .",
      " Yes, GTCC-7, which a 0 value of 0, was used to detect the sample as replayed .",
      " Yes, GTCC-7.",
      " Y, GTCC-7, which a shap value of 0, was used to detect the sample as replayed .",
      " Yes, GTCC-7, which a shap value of 0, was used to detect the sample as GTCC-7 .",
      " Yes, GTCC-7, which a  value of 0, was used to detect the sample as replayed .",
      " Yes, GTCC-7, was used to detect the sample as replayed .",
      " Yes, GTC, which a shap value of 0, was used to detect the sample as replayed .",
      " Yes, GTCC-7, which a shap value of 0, was used to detect the sample as replayed ."
    ],
    "new_mr": "<inform> inform ( <response> response: [ Yes ], <interpreter> interpreter: [ shap ], <important> important: [ GTCC-7 ], <classification> classification: [ replayed ], <shap_value> shap value: [ 0 ]> )"
  },
  {
    "mr": "inform(classification[spoof], edit_type[speed], change_at[20])",
    "ref": [
      "The 20 increases at the 20 second mark .",
      "The spee increases at the 20 second mark .",
      "the audio sample had LFCC features extracted and LFCC-16 was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      "the audio sample had LFCC features extracted and LFCC-16 was determined to have a large impact on the CNN model that determined the sample to be bonafide . The speed increases at the 20 second mark .",
      "The speed increases at the  second mark .",
      "The speed increases at the spoof second mark .",
      "The speed increases at the 20 second mark . The speed increases at the 20 second mark .",
      "The 20 increases at the 20 second mark .",
      "The spee increases at the 20 second mark .",
      "the audio sample had LFCC features extracted and LFCC-16 was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      "The speed increases at the 20 second mark ."
    ],
    "new_mr": "<inform> inform ( <classification> classification: [ spoof ], <edit_type> edit type: [ speed ], <change_at> change at: [ 20 ]> )"
  },
  {
    "mr": "inform(response[Yes], interpreter[shap], important[GTCC-12], classification[replayed], shap_value[1])",
    "ref": [
      " Yes, GTCC-12, which a shap value of 1, was used to detect the sample as GTCC-12 .",
      " replayed, GTCC-12, which a shap value of 1, was used to detect the sample as replayed .",
      " Yes, GTCC-2, which a shap value of , was used to detect the sample as replayed .",
      " Yes, shap, which a shap value of 1, was used to detect the sample as replayed .",
      " Yes.",
      " Y, GTCC-12, which a shap value of 1, was used to detect the sample as replayed .",
      " Yes, GTCC-12, which a shap value of 1, was used to detect the sample as rep .",
      " Yes, GTCC-12, which a  value of 1, was used to detect the sample as replayed .",
      "Yes, LFCC-4, which a shap value of -0.069, was used to detect the sample as replayed .  Yes, GTCC-12, which a shap value of 1, was used to detect the sample as replayed .",
      "Yes, LFCC-4, which a shap value of -0.069, was used to detect the sample as replayed .",
      " Yes, GTCC-12, which a shap value of 1, was used to detect the sample as replayed ."
    ],
    "new_mr": "<inform> inform ( <response> response: [ Yes ], <interpreter> interpreter: [ shap ], <important> important: [ GTCC-12 ], <classification> classification: [ replayed ], <shap_value> shap value: [ 1 ]> )"
  },
  {
    "mr": "inform(response[Yes], interpreter[shap], important[LFCC-27], classification[bonafide], shap_value[-0.3631])",
    "ref": [
      " LFCC-27, LFCC-27, which a shap value of -0.3631, was used to detect the sample as bonafide .",
      " Yes, LFCC-27, which a shap value of -0.3631, was used to detect the sample as bo .",
      " Yes, LFCC-27, which a -0.3631 value of -0.3631, was used to detect the sample as bonafide .",
      " Ye, LFCC-27, which a shap value of -0.3631, was used to detect the sample as bonafide .",
      " Yes, LFCC-, which a shap value of -0.3631, was used to detect the sample as bonafide .",
      " Yes, LFCC-27.3631, was used to detect the sample as bonafide .",
      " Yes, LFCC-27, which a shap value of -0., was used to detect the sample as bonafide .",
      " Yes, LFCC-27, which a shap value of -0.3631, was used to detect the sample as -0.3631 .",
      " Yes, LFCC-27, which a shap value of -0.3631.",
      " Yes, LFCC-27, which a shap value of Yes, was used to detect the sample as bonafide .",
      " Yes, LFCC-27, which a shap value of -0.3631, was used to detect the sample as bonafide ."
    ],
    "new_mr": "<inform> inform ( <response> response: [ Yes ], <interpreter> interpreter: [ shap ], <important> important: [ LFCC-27 ], <classification> classification: [ bonafide ], <shap_value> shap value: [ -0.3631 ]> )"
  },
  {
    "mr": "inform(extracted[LFCC], model[CNN], important[LFCC-52], classification[bonafide])",
    "ref": [
      " the audio sample had LFCC features extracted and LFCC was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      " the audio sample had LFCC features extracted and LF was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      " the audio sample had LFCC features extracted and LFCC-52 was determined to have a large impact on the CNN model that determined the sample to be CNN .",
      "It appears the audio sample was converted .",
      " the audio sample had LFCC features extracted and LFCC-52 was determined to have a large impact on the CNN model that determined the sample to be b .",
      " the audio sample had LFCC features extracted and LFCC-52 was determined to have a large impact on the  model that determined the sample to be bonafide .",
      " the audio sample had L features extracted and L-52 was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      "the audio sample had LFCC features extracted and LFCC-52 was determined to have a large impact on the CNN model that determined the sample to be bonafide .  the audio sample had LFCC features extracted and LFCC-52 was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      " the audio sample had LFCC-52 features extracted and LFCC-52-52 was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      " the audio sample had LFCC features extracted and LFCC-52 was determined to have a large impact on the LFCC model that determined the sample to be bonafide .",
      " the audio sample had LFCC features extracted and LFCC-52 was determined to have a large impact on the CNN model that determined the sample to be bonafide ."
    ],
    "new_mr": "<inform> inform ( <extracted> extracted: [ LFCC ], <model> model: [ CNN ], <important> important: [ LFCC-52 ], <classification> classification: [ bonafide ]> )"
  },
  {
    "mr": "inform(interpreter[shap], important[LFCC-40], shap_value[0.0258])",
    "ref": [
      "  determined that the LFCC-40 feature was one of the more important features by assigning it a value of 0.0258 .",
      "Yes, LFCC-18, which a shap value of -0.8228, was used to detect the sample as bonafide .  shap determined that the LFCC-40 feature was one of the more important features by assigning it a value of 0.0258 .",
      " shap determined that the LFCC-40 feature was one of the more important features by assigning it a value of 0.025 .",
      " shap determined that the LFCC-40 feature was one of the more important features by assigning it a value of LFCC-40 .",
      " shap determined that the shap feature was one of the more important features by assigning it a value of 0.0258 .",
      " shap determined that the LFCC- feature was one of the more important features by assigning it a value of 0.0258 .",
      "Yes, LFCC-18, which a shap value of -0.8228, was used to detect the sample as bonafide .",
      " 0.0258 determined that the LFCC-40 feature was one of the more important features by assigning it a value of 0.0258 .",
      "shap determined that the LFCC-40 feature was one of the more important features by assigning it a value of 0.0258 .  shap determined that the LFCC-40 feature was one of the more important features by assigning it a value of 0.0258 .",
      "  determined that the LFCC-40 feature was one of the more important features by assigning it a value of 0.0258 .",
      " shap determined that the LFCC-40 feature was one of the more important features by assigning it a value of 0.0258 ."
    ],
    "new_mr": "<inform> inform ( <interpreter> interpreter: [ shap ], <important> important: [ LFCC-40 ], <shap_value> shap value: [ 0.0258 ]> )"
  },
  {
    "mr": "inform(classification[spoof], edit_type[sampling], sample_start[20])",
    "ref": [
      "The cut takes place at the sampling second mark . ",
      "The cut takes place at the 20 second mark . The cut takes place at the 20 second mark .",
      "The cut takes place at the  second mark . ",
      "yes, GTCC-4 was used to determine speaker id .",
      "yes, GTCC-4 was used to determine speaker id . The cut takes place at the 20 second mark .",
      "The cut takes place at the sampling second mark . ",
      "The cut takes place at the 20 second mark . The cut takes place at the 20 second mark .",
      "The cut takes place at the  second mark . ",
      "yes, GTCC-4 was used to determine speaker id .",
      "yes, GTCC-4 was used to determine speaker id . The cut takes place at the 20 second mark .",
      "The cut takes place at the 20 second mark . "
    ],
    "new_mr": "<inform> inform ( <classification> classification: [ spoof ], <edit_type> edit type: [ sampling ], <sample_start> sample start: [ 20 ]> )"
  },
  {
    "mr": "inform(interpreter[shap], important[LFCC-3], shap_value[0.7891])",
    "ref": [
      "Yes, LFCC-7, which a shap value of -0.6095, was used to detect the id of speaker 1 for the audio sample .",
      " LFCC-3 determined that the LFCC-3 feature was one of the more important features by assigning it a value of 0.7891 .",
      " shap determined that the LFCC-3 feature was one of the more important features by assigning it a value of  .",
      "Yes, LFCC-7, which a shap value of -0.6095, was used to detect the id of speaker 1 for the audio sample .  shap determined that the LFCC-3 feature was one of the more important features by assigning it a value of 0.7891 .",
      "shap determined that the LFCC-3 feature was one of the more important features by assigning it a value of 0.7891 .  shap determined that the LFCC-3 feature was one of the more important features by assigning it a value of 0.7891 .",
      " shap determined that the 0.7891 feature was one of the more important features by assigning it a value of 0.7891 .",
      " shap determined that the LFCC- feature was one of the more important features by assigning it a value of 0.7891 .",
      " shap determined that the LFCC-3 feature was one of the more important features by assigning it a value of shap .",
      " s determined that the LFCC-3 feature was one of the more important features by assigning it a value of 0.7891 .",
      "Yes, LFCC-7, which a shap value of -0.6095, was used to detect the id of speaker 1 for the audio sample .",
      " shap determined that the LFCC-3 feature was one of the more important features by assigning it a value of 0.7891 ."
    ],
    "new_mr": "<inform> inform ( <interpreter> interpreter: [ shap ], <important> important: [ LFCC-3 ], <shap_value> shap value: [ 0.7891 ]> )"
  },
  {
    "mr": "inform(interpreter[shap], important[LFCC-50], shap_value[-0.7007])",
    "ref": [
      " -0.7007 determined that the LFCC-50 feature was one of the more important features by assigning it a value of -0.7007 .",
      "  determined that the LFCC-50 feature was one of the more important features by assigning it a value of -0.7007 .",
      "shap determined that the LFCC-50 feature was one of the more important features by assigning it a value of -0.7007 .  shap determined that the LFCC-50 feature was one of the more important features by assigning it a value of -0.7007 .",
      "Other samples show the person speaks at a different speed .  shap determined that the LFCC-50 feature was one of the more important features by assigning it a value of -0.7007 .",
      " shap determined that the  feature was one of the more important features by assigning it a value of -0.7007 .",
      " shap determined that the LFCC-50 feature was one of the more important features by assigning it a value of -0 .",
      " shap determined that the LFCC-50 feature was one of the more important features by assigning it a value of LFCC-50 .",
      "Other samples show the person speaks at a different speed .",
      " shap determined that the -0.7007 feature was one of the more important features by assigning it a value of -0.7007 .",
      " -0.7007 determined that the LFCC-50 feature was one of the more important features by assigning it a value of -0.7007 .",
      " shap determined that the LFCC-50 feature was one of the more important features by assigning it a value of -0.7007 ."
    ],
    "new_mr": "<inform> inform ( <interpreter> interpreter: [ shap ], <important> important: [ LFCC-50 ], <shap_value> shap value: [ -0.7007 ]> )"
  },
  {
    "mr": "inform(response[Yes], interpreter[shap], important[MFCC-3], classification[bonafide], shap_value[-0.1314])",
    "ref": [
      "Yes, PSRCC-1, which a shap value of 0.3263, was used to detect the id of speaker 4 for the audio sample .  Yes, MFCC-3, which a shap value of -0.1314, was used to detect the sample as bonafide .",
      " , MFCC-3, which a shap value of -0.1314, was used to detect the sample as bonafide .",
      " Yes, MFCC-3, was used to detect the sample as bonafide .",
      " Yes, MFCC-3.1314, was used to detect the sample as bonafide .",
      " Yes, bonafide, which a shap value of -0.1314, was used to detect the sample as bonafide .",
      " Yes, MFCC-3, which a shap value of -0.1314, was used to detect the sample as MFCC-3 .",
      " Yes, MFCC-3, which a shap value of -, was used to detect the sample as bonafide .",
      " Yes, MFCC-3, which a shap value of shap, was used to detect the sample as bonafide .",
      " Yes, M, which a shap value of -0.1314, was used to detect the sample as bonafide .",
      "Yes, MFCC-3, which a shap value of -0.1314, was used to detect the sample as bonafide .  Yes, MFCC-3, which a shap value of -0.1314, was used to detect the sample as bonafide .",
      " Yes, MFCC-3, which a shap value of -0.1314, was used to detect the sample as bonafide ."
    ],
    "new_mr": "<inform> inform ( <response> response: [ Yes ], <interpreter> interpreter: [ shap ], <important> important: [ MFCC-3 ], <classification> classification: [ bonafide ], <shap_value> shap value: [ -0.1314 ]> )"
  },
  {
    "mr": "inform(classification[spoof], edit_type[multi_microphone],  classified_by[feature])",
    "ref": [
      "Several features were used . Several features were used .",
      "Several fes were used .",
      "the audio sample was used in a CNN model tasked at detecting if an audio sample is bonafide or spoofed . Several features were used .",
      "the audio sample was used in a CNN model tasked at detecting if an audio sample is bonafide or spoofed .",
      "Several multi_microphones were used .",
      "Several features were used . Several features were used .",
      "Several fes were used .",
      "the audio sample was used in a CNN model tasked at detecting if an audio sample is bonafide or spoofed . Several features were used .",
      "the audio sample was used in a CNN model tasked at detecting if an audio sample is bonafide or spoofed .",
      "Several multi_microphones were used .",
      "Several features were used ."
    ],
    "new_mr": "<inform> inform ( <classification> classification: [ spoof ], <edit_type> edit type: [ multi_microphone ], < classified_by>  classified by: [ feature ]> )"
  },
  {
    "mr": "inform(speaker_id[1])",
    "ref": [
      " person  was detected as the primary speaker of the audio sample .",
      "There are three distinct microphone signatures .  person 1 was detected as the primary speaker of the audio sample .",
      "person 1 was detected as the primary speaker of the audio sample .  person 1 was detected as the primary speaker of the audio sample .",
      "There are three distinct microphone signatures .",
      " person  was detected as the primary speaker of the audio sample .",
      "There are three distinct microphone signatures .  person 1 was detected as the primary speaker of the audio sample .",
      "person 1 was detected as the primary speaker of the audio sample .  person 1 was detected as the primary speaker of the audio sample .",
      "There are three distinct microphone signatures .",
      " person  was detected as the primary speaker of the audio sample .",
      "There are three distinct microphone signatures .  person 1 was detected as the primary speaker of the audio sample .",
      " person 1 was detected as the primary speaker of the audio sample ."
    ],
    "new_mr": "<inform> inform ( <speaker_id> speaker id: [ 1 ]> )"
  },
  {
    "mr": "inform(classification[spoof], edit_type[computer])",
    "ref": [
      "Some of the recording was made with a mobile device and some with a spoof . ",
      "Some of the recording was made with a mobile device and some with a computer . Some of the recording was made with a mobile device and some with a computer .",
      "There was more than one person speaking .",
      "There was more than one person speaking . Some of the recording was made with a mobile device and some with a computer .",
      "Some of the recording was made with a mobile device and some with a compute . ",
      "Some of the recording was made with a mobile device and some with a spoof . ",
      "Some of the recording was made with a mobile device and some with a computer . Some of the recording was made with a mobile device and some with a computer .",
      "There was more than one person speaking .",
      "There was more than one person speaking . Some of the recording was made with a mobile device and some with a computer .",
      "Some of the recording was made with a mobile device and some with a compute . ",
      "Some of the recording was made with a mobile device and some with a computer . "
    ],
    "new_mr": "<inform> inform ( <classification> classification: [ spoof ], <edit_type> edit type: [ computer ]> )"
  },
  {
    "mr": "inform(response[Yes], interpreter[shap], important[LFCC-17], classification[bonafide], shap_value[0.809])",
    "ref": [
      " Yes, bonafide, which a shap value of 0.809, was used to detect the sample as bonafide .",
      " Yes, LFCC-17, which a sha value of 0.809, was used to detect the sample as bonafide .",
      " Yes, LFCC-17, which a shap value of , was used to detect the sample as bonafide .",
      " Ye, LFCC-17, which a shap value of 0.809, was used to detect the sample as bonafide .",
      "Yes, LFCC-23, which a shap value of -0.561, was used to detect the sample as replayed .",
      " Yes.809, was used to detect the sample as bonafide .",
      "Yes, LFCC-17, which a shap value of 0.809, was used to detect the sample as bonafide .  Yes, LFCC-17, which a shap value of 0.809, was used to detect the sample as bonafide .",
      " Yes, LFCC-17, which a shap value of 0.809, was used to detect the sample as LFCC-17 .",
      " bonafide, LFCC-17, which a shap value of 0.809, was used to detect the sample as bonafide .",
      " Yes, LFCC-17, which a shap value of shap, was used to detect the sample as bonafide .",
      " Yes, LFCC-17, which a shap value of 0.809, was used to detect the sample as bonafide ."
    ],
    "new_mr": "<inform> inform ( <response> response: [ Yes ], <interpreter> interpreter: [ shap ], <important> important: [ LFCC-17 ], <classification> classification: [ bonafide ], <shap_value> shap value: [ 0.809 ]> )"
  },
  {
    "mr": "inform(response[Yes], classification[spoofed], spoof_type[cloning])",
    "ref": [
      "Yes, person 3 was detected by LFCC-39 with a shap value of -0.3915 .",
      "Yes, person 3 was detected by LFCC-39 with a shap value of -0.3915 . There appears to be a cloned voice on the recording .",
      "There appears to be a cloned voice on the recording . There appears to be a cloned voice on the recording .",
      "Yes, person 3 was detected by LFCC-39 with a shap value of -0.3915 .",
      "Yes, person 3 was detected by LFCC-39 with a shap value of -0.3915 . There appears to be a cloned voice on the recording .",
      "There appears to be a cloned voice on the recording . There appears to be a cloned voice on the recording .",
      "Yes, person 3 was detected by LFCC-39 with a shap value of -0.3915 .",
      "Yes, person 3 was detected by LFCC-39 with a shap value of -0.3915 . There appears to be a cloned voice on the recording .",
      "There appears to be a cloned voice on the recording . There appears to be a cloned voice on the recording .",
      "Yes, person 3 was detected by LFCC-39 with a shap value of -0.3915 .",
      "There appears to be a cloned voice on the recording ."
    ],
    "new_mr": "<inform> inform ( <response> response: [ Yes ], <classification> classification: [ spoofed ], <spoof_type> spoof type: [ cloning ]> )"
  },
  {
    "mr": "inform(speaker_id[6], model[SVM])",
    "ref": [
      " the audio sample was used in a SVM model tasked at detecting speaker id, determined to be  .",
      " the audio sample was used in a SVM model tasked at detecting speaker id, determined to be SVM .",
      "the audio sample was used in a SVM model tasked at detecting speaker id, determined to be 6 .  the audio sample was used in a SVM model tasked at detecting speaker id, determined to be 6 .",
      "Yes, GTCC-2, which a shap value of 1, was used to detect the sample as replayed .  the audio sample was used in a SVM model tasked at detecting speaker id, determined to be 6 .",
      " the audio sample was used in a SVM model tasked at detecting speaker id.",
      " the audio sample was used in a 6 model tasked at detecting speaker id, determined to be 6 .",
      " the audio sample was used in a SV model tasked at detecting speaker id, determined to be 6 .",
      "Yes, GTCC-2, which a shap value of 1, was used to detect the sample as replayed .",
      " the audio sample was used in a SVM model tasked at detecting speaker id, determined to be  .",
      " the audio sample was used in a SVM model tasked at detecting speaker id, determined to be SVM .",
      " the audio sample was used in a SVM model tasked at detecting speaker id, determined to be 6 ."
    ],
    "new_mr": "<inform> inform ( <speaker_id> speaker id: [ 6 ], <model> model: [ SVM ]> )"
  },
  {
    "mr": "inform(response[yes], speaker_id[4], feature[MFCC-25], interpreter[shap], shap_value[-0.8658])",
    "ref": [
      "Yes, PSRCC-9, which a shap value of 0.786, was used to detect the id of speaker 5 for the audio sample .",
      " Yes, MFCC-25.8658, was used to detect the id of speaker 4 for the audio sample .",
      " Yes, MFCC-25, which a shap value of -0.8658.",
      " Yes, MFCC-25, which a shap value of -0.8658, was used to detect the id of speaker yes for the audio sample .",
      " Yes, MFCC-25, which a -0.8658 value of -0.8658, was used to detect the id of speaker 4 for the audio sample .",
      " Yes, MFCC-25, which a sha value of -0.8658, was used to detect the id of speaker 4 for the audio sample .",
      " Yes, -0.8658, which a shap value of -0.8658, was used to detect the id of speaker 4 for the audio sample .",
      " Yes, MFCC-25, which a shap value of -0.865, was used to detect the id of speaker 4 for the audio sample .",
      " Yes, which a shap value of -0.8658, was used to detect the id of speaker 4 for the audio sample .",
      "Yes, MFCC-25, which a shap value of -0.8658, was used to detect the id of speaker 4 for the audio sample .  Yes, MFCC-25, which a shap value of -0.8658, was used to detect the id of speaker 4 for the audio sample .",
      " Yes, MFCC-25, which a shap value of -0.8658, was used to detect the id of speaker 4 for the audio sample ."
    ],
    "new_mr": "<inform> inform ( <response> response: [ yes ], <speaker_id> speaker id: [ 4 ], <feature> feature: [ MFCC-25 ], <interpreter> interpreter: [ shap ], <shap_value> shap value: [ -0.8658 ]> )"
  },
  {
    "mr": "inform(classification[spoof], edit_type[sampling])",
    "ref": [
      "There is evidence of sam .",
      "There is evidence of sampling . There is evidence of sampling .",
      "Dynamic microphones were used the most .",
      "There is evidence of spoof .",
      "Dynamic microphones were used the most . There is evidence of sampling .",
      "There is evidence of sam .",
      "There is evidence of sampling . There is evidence of sampling .",
      "Dynamic microphones were used the most .",
      "There is evidence of spoof .",
      "Dynamic microphones were used the most . There is evidence of sampling .",
      "There is evidence of sampling ."
    ],
    "new_mr": "<inform> inform ( <classification> classification: [ spoof ], <edit_type> edit type: [ sampling ]> )"
  },
  {
    "mr": "inform(response[Yes], interpreter[shap], important[GTCC-5], classification[bonafide], shap_value[0])",
    "ref": [
      " Yes, Yes, which a shap value of 0, was used to detect the sample as bonafide .",
      " Yes, which a shap value of 0, was used to detect the sample as bonafide .",
      " Yes, GTCC-5, was used to detect the sample as bonafide .",
      "Yes, GTCC-5, which a shap value of 0, was used to detect the sample as bonafide .  Yes, GTCC-5, which a shap value of 0, was used to detect the sample as bonafide .",
      " Yes, GTCC-5, which a shap value of , was used to detect the sample as bonafide .",
      " Yes, GTCC-5, which a shap value of 0.",
      " Yes.",
      "The spoofed audio was a replayed audio .  Yes, GTCC-5, which a shap value of 0, was used to detect the sample as bonafide .",
      " Yes, GTCC-5, which a shap value of 0, was used to detect the sample as Yes .",
      " Ye, GTCC-5, which a shap value of 0, was used to detect the sample as bonafide .",
      " Yes, GTCC-5, which a shap value of 0, was used to detect the sample as bonafide ."
    ],
    "new_mr": "<inform> inform ( <response> response: [ Yes ], <interpreter> interpreter: [ shap ], <important> important: [ GTCC-5 ], <classification> classification: [ bonafide ], <shap_value> shap value: [ 0 ]> )"
  },
  {
    "mr": "inform(response[yes], speaker_id[4], feature[LFCC-47], interpreter[shap], shap_value[-0.8006])",
    "ref": [
      " Yes.8006 .",
      "the audio sample had MSRCC features extracted and MSRCC-12 was determined to have a large impact on the CNN model that determined the sample to be replayed .  Yes, person 4 was detected by LFCC-47 with a shap value of -0.8006 .",
      " Yes, person 4 was detected by LFCC-47 with a  value of -0.8006 .",
      " Yes, person 4 was detected by LFCC-47 with a LFCC-47 value of -0.8006 .",
      " Yes, person 4 was detected by LFCC-47 with a shap value of  .",
      " Yes, person 4 was detected by shap with a shap value of -0.8006 .",
      " Yes, person 4 was detected by LFCC with a shap value of -0.8006 .",
      " Yes, person 4 was detected by LFCC-47 with a shap value of LFCC-47 .",
      " Yes, person yes was detected by LFCC-yes7 with a shap value of -0.8006 .",
      "the audio sample had MSRCC features extracted and MSRCC-12 was determined to have a large impact on the CNN model that determined the sample to be replayed .",
      " Yes, person 4 was detected by LFCC-47 with a shap value of -0.8006 ."
    ],
    "new_mr": "<inform> inform ( <response> response: [ yes ], <speaker_id> speaker id: [ 4 ], <feature> feature: [ LFCC-47 ], <interpreter> interpreter: [ shap ], <shap_value> shap value: [ -0.8006 ]> )"
  },
  {
    "mr": "inform(general)",
    "ref": [
      "Spectral Centroid Frequency Coefficients . Spectral Centroid Frequency Coefficients .",
      "shap determined that the MSRCC-5 feature was one of the more important features by assigning it a value of 0.2454 . Spectral Centroid Frequency Coefficients .",
      "shap determined that the MSRCC-5 feature was one of the more important features by assigning it a value of 0.2454 .",
      "Spectral Centroid Frequency Coefficients . Spectral Centroid Frequency Coefficients .",
      "shap determined that the MSRCC-5 feature was one of the more important features by assigning it a value of 0.2454 . Spectral Centroid Frequency Coefficients .",
      "shap determined that the MSRCC-5 feature was one of the more important features by assigning it a value of 0.2454 .",
      "Spectral Centroid Frequency Coefficients . Spectral Centroid Frequency Coefficients .",
      "shap determined that the MSRCC-5 feature was one of the more important features by assigning it a value of 0.2454 . Spectral Centroid Frequency Coefficients .",
      "shap determined that the MSRCC-5 feature was one of the more important features by assigning it a value of 0.2454 .",
      "Spectral Centroid Frequency Coefficients . Spectral Centroid Frequency Coefficients .",
      "Spectral Centroid Frequency Coefficients ."
    ],
    "new_mr": "<inform> inform ( > )"
  },
  {
    "mr": "inform(classification[spoof], edit_type[speed])",
    "ref": [
      "The recording seems to be at the same spoof throughout . ",
      "the audio sample had MFCC features extracted and MFCC-1 was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      "the audio sample had MFCC features extracted and MFCC-1 was determined to have a large impact on the CNN model that determined the sample to be bonafide . The recording seems to be at the same speed throughout .",
      "The recording seems to be at the same  throughout . ",
      "The recording seems to be at the same speed throughout . The recording seems to be at the same speed throughout .",
      "The recording seems to be at the same spoof throughout . ",
      "the audio sample had MFCC features extracted and MFCC-1 was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      "the audio sample had MFCC features extracted and MFCC-1 was determined to have a large impact on the CNN model that determined the sample to be bonafide . The recording seems to be at the same speed throughout .",
      "The recording seems to be at the same  throughout . ",
      "The recording seems to be at the same speed throughout . The recording seems to be at the same speed throughout .",
      "The recording seems to be at the same speed throughout . "
    ],
    "new_mr": "<inform> inform ( <classification> classification: [ spoof ], <edit_type> edit type: [ speed ]> )"
  },
  {
    "mr": "inform(extracted[MFCC], model[CNN], important[MFCC-9], classification[bonafide])",
    "ref": [
      " the audio sample had MFCC features extracted and MFCC-9 was determined to have a large impact on the CNN model that determined the sample to be CNN .",
      " the audio sample had  features extracted and -9 was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      " the audio sample had bonafide features extracted and bonafide-9 was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      " the audio sample had MFCC features extracted and  was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      "the audio sample had MFCC features extracted and MFCC-9 was determined to have a large impact on the CNN model that determined the sample to be bonafide .  the audio sample had MFCC features extracted and MFCC-9 was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      " the audio sample had MFCC features extracted and bonafide was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      "There is an unusually long pause at 37 seconds .",
      "There is an unusually long pause at 37 seconds .  the audio sample had MFCC features extracted and MFCC-9 was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      " the audio sample had MFCC features extracted and MFCC-9 was determined to have a large impact on the CNN model that determined the sample to be bon .",
      " the audio sample had MFCC features extracted and MFCC-9 was determined to have a large impact on the C model that determined the sample to be bonafide .",
      " the audio sample had MFCC features extracted and MFCC-9 was determined to have a large impact on the CNN model that determined the sample to be bonafide ."
    ],
    "new_mr": "<inform> inform ( <extracted> extracted: [ MFCC ], <model> model: [ CNN ], <important> important: [ MFCC-9 ], <classification> classification: [ bonafide ]> )"
  },
  {
    "mr": "inform(interpreter[SHAP], feature[CQCC-6], feature[MFCC-0], feature[LFCC-5], feature[CQCC-0])",
    "ref": [
      "SHAP determined that CQCC-6, MFCC-0, LFCC-5, CQCC-0 had the highest impact on classification . SHAP determined that CQCC-6, MFCC-0, LFCC-5, CQCC-0 had the highest impact on classification .",
      "SHAP determined that CQCC-6, MFCC-0, CQCC-0 had the highest impact on classification .",
      "SHAP determined that CQCC-6, MFCC-0.",
      "SHAP determined that CQCC-6, MFCC-0, L, CQCC-0 had the highest impact on classification .",
      "SHAP determined that CQCC-6, CQCC-0, LFCC-5, CQCC-0 had the highest impact on classification .",
      "S determined that CQCC-6, MFCC-0, LFCC-5, CQCC-0 had the highest impact on classification .",
      "SHAP determined that SHAP, MFCC-0, LFCC-5, CQCC-0 had the highest impact on classification .",
      "SHAP determined that CQCC-6, LFCC-5, CQCC-0 had the highest impact on classification .",
      "SHAP determined that CQCC-6, MFCC-0, LFCC-5, CQCC had the highest impact on classification .",
      "SHAP determined that CQCC, MFCC-0, LFCC-5, CQCC-0 had the highest impact on classification .",
      "SHAP determined that CQCC-6, MFCC-0, LFCC-5, CQCC-0 had the highest impact on classification ."
    ],
    "new_mr": "<inform> inform ( <interpreter> interpreter: [ SHAP ], <feature> feature: [ CQCC-6 ], <feature> feature: [ MFCC-0 ], <feature> feature: [ LFCC-5 ], <feature> feature: [ CQCC-0 ]> )"
  },
  {
    "mr": "inform(classification[spoof], edit_type[computer])",
    "ref": [
      "Some of the recording was made using a spoof .",
      "Some of the recording was made using a  .",
      "shap determined that the LFCC-22 feature was one of the more important features by assigning it a value of 0.8296 . Some of the recording was made using a computer .",
      "Some of the recording was made using a computer . Some of the recording was made using a computer .",
      "shap determined that the LFCC-22 feature was one of the more important features by assigning it a value of 0.8296 .",
      "Some of the recording was made using a spoof .",
      "Some of the recording was made using a  .",
      "shap determined that the LFCC-22 feature was one of the more important features by assigning it a value of 0.8296 . Some of the recording was made using a computer .",
      "Some of the recording was made using a computer . Some of the recording was made using a computer .",
      "shap determined that the LFCC-22 feature was one of the more important features by assigning it a value of 0.8296 .",
      "Some of the recording was made using a computer ."
    ],
    "new_mr": "<inform> inform ( <classification> classification: [ spoof ], <edit_type> edit type: [ computer ]> )"
  },
  {
    "mr": "inform( classification[spoof], edit_type[multi_microphone], mic_quantity[>1])",
    "ref": [
      "the audio sample had PSRCC features extracted and PSRCC-4 was determined to have a large impact on the CNN model that determined the sample to be replayed .",
      "There are different microphone signatures . There are different microphone signatures .",
      "the audio sample had PSRCC features extracted and PSRCC-4 was determined to have a large impact on the CNN model that determined the sample to be replayed . There are different microphone signatures .",
      "the audio sample had PSRCC features extracted and PSRCC-4 was determined to have a large impact on the CNN model that determined the sample to be replayed .",
      "There are different microphone signatures . There are different microphone signatures .",
      "the audio sample had PSRCC features extracted and PSRCC-4 was determined to have a large impact on the CNN model that determined the sample to be replayed . There are different microphone signatures .",
      "the audio sample had PSRCC features extracted and PSRCC-4 was determined to have a large impact on the CNN model that determined the sample to be replayed .",
      "There are different microphone signatures . There are different microphone signatures .",
      "the audio sample had PSRCC features extracted and PSRCC-4 was determined to have a large impact on the CNN model that determined the sample to be replayed . There are different microphone signatures .",
      "the audio sample had PSRCC features extracted and PSRCC-4 was determined to have a large impact on the CNN model that determined the sample to be replayed .",
      "There are different microphone signatures ."
    ],
    "new_mr": "<inform> inform ( < classification>  classification: [ spoof ], <edit_type> edit type: [ multi_microphone ], <mic_quantity> mic quantity: [ >1 ]> )"
  },
  {
    "mr": "inform(classification[spoof], edit_type[cloning])",
    "ref": [
      "the audio sample had LFCC features extracted and LFCC-5 was determined to have a large impact on the CNN model that determined the sample to be replayed .",
      "The signal indicates voice cl . ",
      "The signal indicates voice spoof . ",
      "The signal indicates voice cloning . The signal indicates voice cloning .",
      "the audio sample had LFCC features extracted and LFCC-5 was determined to have a large impact on the CNN model that determined the sample to be replayed . The signal indicates voice cloning .",
      "the audio sample had LFCC features extracted and LFCC-5 was determined to have a large impact on the CNN model that determined the sample to be replayed .",
      "The signal indicates voice cl . ",
      "The signal indicates voice spoof . ",
      "The signal indicates voice cloning . The signal indicates voice cloning .",
      "the audio sample had LFCC features extracted and LFCC-5 was determined to have a large impact on the CNN model that determined the sample to be replayed . The signal indicates voice cloning .",
      "The signal indicates voice cloning . "
    ],
    "new_mr": "<inform> inform ( <classification> classification: [ spoof ], <edit_type> edit type: [ cloning ]> )"
  },
  {
    "mr": "inform(interpreter[shap], important[LFCC-19], shap_value[0.5217])",
    "ref": [
      " shap determined that the LFCC-19 feature was one of the more important features by assigning it a value of  .",
      " sh determined that the LFCC-19 feature was one of the more important features by assigning it a value of 0.5217 .",
      "The SHAP values indicate the contribution of the features on the outcome of the classification model .  shap determined that the LFCC-19 feature was one of the more important features by assigning it a value of 0.5217 .",
      " shap determined that the 0.5217 feature was one of the more important features by assigning it a value of 0.5217 .",
      " LFCC-19 determined that the LFCC-19 feature was one of the more important features by assigning it a value of 0.5217 .",
      " shap determined that the LFC feature was one of the more important features by assigning it a value of 0.5217 .",
      "shap determined that the LFCC-19 feature was one of the more important features by assigning it a value of 0.5217 .  shap determined that the LFCC-19 feature was one of the more important features by assigning it a value of 0.5217 .",
      "The SHAP values indicate the contribution of the features on the outcome of the classification model .",
      " shap determined that the LFCC-19 feature was one of the more important features by assigning it a value of shap .",
      " shap determined that the LFCC-19 feature was one of the more important features by assigning it a value of  .",
      " shap determined that the LFCC-19 feature was one of the more important features by assigning it a value of 0.5217 ."
    ],
    "new_mr": "<inform> inform ( <interpreter> interpreter: [ shap ], <important> important: [ LFCC-19 ], <shap_value> shap value: [ 0.5217 ]> )"
  },
  {
    "mr": "inform(speaker_id[2])",
    "ref": [
      "The audio is fake .  person 2 was detected as the primary speaker of the audio sample .",
      "person 2 was detected as the primary speaker of the audio sample .  person 2 was detected as the primary speaker of the audio sample .",
      " person  was detected as the primary speaker of the audio sample .",
      "The audio is fake .",
      "The audio is fake .  person 2 was detected as the primary speaker of the audio sample .",
      "person 2 was detected as the primary speaker of the audio sample .  person 2 was detected as the primary speaker of the audio sample .",
      " person  was detected as the primary speaker of the audio sample .",
      "The audio is fake .",
      "The audio is fake .  person 2 was detected as the primary speaker of the audio sample .",
      "person 2 was detected as the primary speaker of the audio sample .  person 2 was detected as the primary speaker of the audio sample .",
      " person 2 was detected as the primary speaker of the audio sample ."
    ],
    "new_mr": "<inform> inform ( <speaker_id> speaker id: [ 2 ]> )"
  },
  {
    "mr": "inform(response[yes], speaker_id[1], feature[LFCC-32], interpreter[shap], shap_value[-0.5324])",
    "ref": [
      " Yes, person 1 was detected by LFCC-32 with a yes value of -0.5324 .",
      " Yes, person 1 was detected by LFCC-32 with a shap value of LFCC-32 .",
      "Yes, person 1 was detected by LFCC-32 with a shap value of -0.5324 .  Yes, person 1 was detected by LFCC-32 with a shap value of -0.5324 .",
      " Yes.5324 .",
      " Yes, person 1 was detected by  with a shap value of -0.5324 .",
      " Yes, person 1 was detected by shap with a shap value of -0.5324 .",
      "There is evidence of sampling .",
      " Yes, person  was detected by LFCC-32 with a shap value of -0.5324 .",
      " Yes, person -0.5324 was detected by LFCC-32 with a shap value of -0.5324 .",
      " Yes, person 1 was detected by LFCC-32 with a sh value of -0.5324 .",
      " Yes, person 1 was detected by LFCC-32 with a shap value of -0.5324 ."
    ],
    "new_mr": "<inform> inform ( <response> response: [ yes ], <speaker_id> speaker id: [ 1 ], <feature> feature: [ LFCC-32 ], <interpreter> interpreter: [ shap ], <shap_value> shap value: [ -0.5324 ]> )"
  },
  {
    "mr": "inform(response[yes], speaker_id[7], feature[MSRCC-9], interpreter[shap], shap_value[-0.9806])",
    "ref": [
      " Yes, person yes was detected by MSRCC-9 with a shap value of -0.9806 .",
      "The recording was passed to a SVM model for classification .",
      " Yes, person 7 was detected by M with a shap value of -0.9806 .",
      "Yes, person 7 was detected by MSRCC-9 with a shap value of -0.9806 .  Yes, person 7 was detected by MSRCC-9 with a shap value of -0.9806 .",
      " Yes, person  was detected by MSRCC-9 with a shap value of -0.9806 .",
      " Yes, person 7 was detected by MSRCC-9 with a shap value of 7 .",
      " Yes, person 7 was detected by MSRCC-9 with a sh value of -0.9806 .",
      " Yes, person 7 was detected by MSRCC-9 with a shap value of -0.98 .",
      " Yes, person 7 was detected by MSRCC-9 with a MSRCC-9 value of -0.9806 .",
      " Yes.9806 .",
      " Yes, person 7 was detected by MSRCC-9 with a shap value of -0.9806 ."
    ],
    "new_mr": "<inform> inform ( <response> response: [ yes ], <speaker_id> speaker id: [ 7 ], <feature> feature: [ MSRCC-9 ], <interpreter> interpreter: [ shap ], <shap_value> shap value: [ -0.9806 ]> )"
  },
  {
    "mr": "inform(interpreter[shap], important[GTCC-10], shap_value[0])",
    "ref": [
      "the audio sample had LFCC features extracted and LFCC-45 was determined to have a large impact on the CNN model that determined the sample to be replayed .  shap determined that the GTCC-10 feature was one of the more important features by assigning it a value of 0 .",
      "the audio sample had LFCC features extracted and LFCC-45 was determined to have a large impact on the CNN model that determined the sample to be replayed .",
      " shap determined that the GTCC-1 feature was one of the more important features by assigning it a value of 0 .",
      " shap determined that the GTCC-1GTCC-10 feature was one of the more important features by assigning it a value of GTCC-10 .",
      " shap determined that the GTCC-1 feature was one of the more important features by assigning it a value of  .",
      " 0 determined that the GTCC-10 feature was one of the more important features by assigning it a value of 0 .",
      "shap determined that the GTCC-10 feature was one of the more important features by assigning it a value of 0 .  shap determined that the GTCC-10 feature was one of the more important features by assigning it a value of 0 .",
      " shap determined that the 0 feature was one of the more important features by assigning it a value of 0 .",
      " sh determined that the GTCC-10 feature was one of the more important features by assigning it a value of 0 .",
      "the audio sample had LFCC features extracted and LFCC-45 was determined to have a large impact on the CNN model that determined the sample to be replayed .  shap determined that the GTCC-10 feature was one of the more important features by assigning it a value of 0 .",
      " shap determined that the GTCC-10 feature was one of the more important features by assigning it a value of 0 ."
    ],
    "new_mr": "<inform> inform ( <interpreter> interpreter: [ shap ], <important> important: [ GTCC-10 ], <shap_value> shap value: [ 0 ]> )"
  },
  {
    "mr": "inform(interpreter[shap], important[LFCC-23], shap_value[-0.9787])",
    "ref": [
      " shap determined that the shap feature was one of the more important features by assigning it a value of -0.9787 .",
      "Yes, person 3 was detected by LFCC-5 with a shap value of 0.9355 .",
      " shap determined that the L feature was one of the more important features by assigning it a value of -0.9787 .",
      "Yes, person 3 was detected by LFCC-5 with a shap value of 0.9355 .  shap determined that the LFCC-23 feature was one of the more important features by assigning it a value of -0.9787 .",
      " sha determined that the LFCC-23 feature was one of the more important features by assigning it a value of -0.9787 .",
      " shap determined that the LFCC-23 feature was one of the more important features by assigning it a value of shap .",
      "shap determined that the LFCC-23 feature was one of the more important features by assigning it a value of -0.9787 .  shap determined that the LFCC-23 feature was one of the more important features by assigning it a value of -0.9787 .",
      " shap determined that the LFCC-23 feature was one of the more important features by assigning it a value of -0.978 .",
      " -0.9787 determined that the LFCC-23 feature was one of the more important features by assigning it a value of -0.9787 .",
      " shap determined that the shap feature was one of the more important features by assigning it a value of -0.9787 .",
      " shap determined that the LFCC-23 feature was one of the more important features by assigning it a value of -0.9787 ."
    ],
    "new_mr": "<inform> inform ( <interpreter> interpreter: [ shap ], <important> important: [ LFCC-23 ], <shap_value> shap value: [ -0.9787 ]> )"
  },
  {
    "mr": "inform(response[Yes], interpreter[shap], important[LFCC-36], classification[bonafide], shap_value[-0.1149])",
    "ref": [
      "It is not a bona fide audio .  Yes, LFCC-36, which a shap value of -0.1149, was used to detect the sample as bonafide .",
      " Yes, LFCC-36, which a shap value of LFCC-36, was used to detect the sample as bonafide .",
      " Yes, LFCC-36, which a -0.1149 value of -0.1149, was used to detect the sample as bonafide .",
      "It is not a bona fide audio .",
      " LFCC-36, LFCC-36, which a shap value of -0.1149, was used to detect the sample as bonafide .",
      " Yes, LFCC-36, which a shap value of -0.1149, was used to detect the sample as bona .",
      " Yes, LFCC-36, which a  value of -0.1149, was used to detect the sample as bonafide .",
      " Yes, which a shap value of -0.1149, was used to detect the sample as bonafide .",
      " Yes, LFCC-36, was used to detect the sample as bonafide .",
      " Yes, LFCC-36.1149, was used to detect the sample as bonafide .",
      " Yes, LFCC-36, which a shap value of -0.1149, was used to detect the sample as bonafide ."
    ],
    "new_mr": "<inform> inform ( <response> response: [ Yes ], <interpreter> interpreter: [ shap ], <important> important: [ LFCC-36 ], <classification> classification: [ bonafide ], <shap_value> shap value: [ -0.1149 ]> )"
  },
  {
    "mr": "inform(response[yes], speaker_id[7], feature[LFCC-39], interpreter[shap], shap_value[-0.549])",
    "ref": [
      "Yes, LFCC-39, which a shap value of -0.549, was used to detect the id of speaker 7 for the audio sample .  Yes, LFCC-39, which a shap value of -0.549, was used to detect the id of speaker 7 for the audio sample .",
      " Yes, LFCC-39, which a shap value of -0.549, was used to detect the id of speaker  for the audio sample .",
      " Yes, shap, which a shap value of -0.549, was used to detect the id of speaker 7 for the audio sample .",
      " Yes, LFCC-39, was used to detect the id of speaker 7 for the audio sample .",
      " Yes, LFCC-39, which a shap value of -0.549.",
      " Yes, LFCC-39, which a shap value of -0.549, was used to detect the id of speaker shap for the audio sample .",
      " Yes, LFCC-39, which a shap value of LFCC-39, was used to detect the id of speaker 7 for the audio sample .",
      "Several features show this is a Conversion sample .  Yes, LFCC-39, which a shap value of -0.549, was used to detect the id of speaker 7 for the audio sample .",
      " Yes, LFCC-39, which a 7 value of -0.549, was used to detect the id of speaker 7 for the audio sample .",
      " Yes, LFCC-39, which a sha value of -0.549, was used to detect the id of speaker 7 for the audio sample .",
      " Yes, LFCC-39, which a shap value of -0.549, was used to detect the id of speaker 7 for the audio sample ."
    ],
    "new_mr": "<inform> inform ( <response> response: [ yes ], <speaker_id> speaker id: [ 7 ], <feature> feature: [ LFCC-39 ], <interpreter> interpreter: [ shap ], <shap_value> shap value: [ -0.549 ]> )"
  },
  {
    "mr": "inform(interpreter[shap], important[PSRCC-10], shap_value[0.5528])",
    "ref": [
      " shap determined that the PSRCC-10 feature was one of the more important features by assigning it a value of PSRCC-10 .",
      "shap determined that the PSRCC-10 feature was one of the more important features by assigning it a value of 0.5528 .  shap determined that the PSRCC-10 feature was one of the more important features by assigning it a value of 0.5528 .",
      "There are inconsistencies in the number of people speaking .  shap determined that the PSRCC-10 feature was one of the more important features by assigning it a value of 0.5528 .",
      "  determined that the PSRCC-10 feature was one of the more important features by assigning it a value of 0.5528 .",
      " shap determined that the shap feature was one of the more important features by assigning it a value of 0.5528 .",
      " PSRCC-10 determined that the PSRCC-10 feature was one of the more important features by assigning it a value of 0.5528 .",
      " shap determined that the PSRCC-10 feature was one of the more important features by assigning it a value of 0 .",
      " shap determined that the PSRCC- feature was one of the more important features by assigning it a value of 0.5528 .",
      "There are inconsistencies in the number of people speaking .",
      " shap determined that the PSRCC-10 feature was one of the more important features by assigning it a value of PSRCC-10 .",
      " shap determined that the PSRCC-10 feature was one of the more important features by assigning it a value of 0.5528 ."
    ],
    "new_mr": "<inform> inform ( <interpreter> interpreter: [ shap ], <important> important: [ PSRCC-10 ], <shap_value> shap value: [ 0.5528 ]> )"
  },
  {
    "mr": "inform(response[Yes], interpreter[shap], important[LFCC-23], classification[bonafide], shap_value[0.514])",
    "ref": [
      " Yes, which a shap value of 0.514, was used to detect the sample as bonafide .",
      " Yes, LFCC-23, which a shap value of 0.514, was used to detect the sample as bonafi .",
      " , LFCC-23, which a shap value of 0.514, was used to detect the sample as bonafide .",
      " Yes, LFCC-23, was used to detect the sample as bonafide .",
      " Yes, bonafide, which a shap value of 0.514, was used to detect the sample as bonafide .",
      " Yes, LFCC-23, which a shap value of shap, was used to detect the sample as bonafide .",
      " Yes, LFCC, which a shap value of 0.514, was used to detect the sample as bonafide .",
      " Yes, LFCC-23, which a shap value of 0.514, was used to detect the sample as Yes .",
      "Yes, LFCC-32, which a shap value of -0.9762, was used to detect the sample as bonafide .",
      " LFCC-23, LFCC-23, which a shap value of 0.514, was used to detect the sample as bonafide .",
      " Yes, LFCC-23, which a shap value of 0.514, was used to detect the sample as bonafide ."
    ],
    "new_mr": "<inform> inform ( <response> response: [ Yes ], <interpreter> interpreter: [ shap ], <important> important: [ LFCC-23 ], <classification> classification: [ bonafide ], <shap_value> shap value: [ 0.514 ]> )"
  },
  {
    "mr": "inform(response[No], classification[bonafide])",
    "ref": [
      "bonafide , it is not a bona fide recording .",
      " , it is not a bona fide recording .",
      "Yes, LFCC-51, which a shap value of -0.5435, was used to detect the id of speaker 5 for the audio sample . No , it is not a bona fide recording .",
      "No .",
      "Yes, LFCC-51, which a shap value of -0.5435, was used to detect the id of speaker 5 for the audio sample .",
      "No , it is not a bona fide recording . No , it is not a bona fide recording .",
      "No , it is a bona fide recording .",
      "bonafide , it is not a bona fide recording .",
      " , it is not a bona fide recording .",
      "Yes, LFCC-51, which a shap value of -0.5435, was used to detect the id of speaker 5 for the audio sample . No , it is not a bona fide recording .",
      "No , it is not a bona fide recording ."
    ],
    "new_mr": "<inform> inform ( <response> response: [ No ], <classification> classification: [ bonafide ]> )"
  },
  {
    "mr": "inform(response[Yes], interpreter[shap], important[LFCC-5], classification[bonafide], shap_value[0.767])",
    "ref": [
      " Yes, LFCC-5, which a shap value of 0.767.",
      " Yes, bonafide, which a shap value of 0.767, was used to detect the sample as bonafide .",
      " 0.767, LFCC-5, which a shap value of 0.767, was used to detect the sample as bonafide .",
      " Yes, LFCC-5, which a bonafide value of 0.767, was used to detect the sample as bonafide .",
      " Yes, LFCC-5, which a shap value of 0.767, was used to detect the sample as 0.767 .",
      " Yes, LFCC-5, which a shap value of 0.767, was used to detect the sample as bonaf .",
      "There is a Reverberation signature .",
      "Yes, LFCC-5, which a shap value of 0.767, was used to detect the sample as bonafide .  Yes, LFCC-5, which a shap value of 0.767, was used to detect the sample as bonafide .",
      " Yes.767, was used to detect the sample as bonafide .",
      " Yes, LFCC-5, was used to detect the sample as bonafide .",
      " Yes, LFCC-5, which a shap value of 0.767, was used to detect the sample as bonafide ."
    ],
    "new_mr": "<inform> inform ( <response> response: [ Yes ], <interpreter> interpreter: [ shap ], <important> important: [ LFCC-5 ], <classification> classification: [ bonafide ], <shap_value> shap value: [ 0.767 ]> )"
  },
  {
    "mr": "inform(response[Yes], interpreter[shap], important[LFCC-8], classification[replayed], shap_value[0.5604])",
    "ref": [
      " Yes, LFCC-8, which a shap value of shap, was used to detect the sample as replayed .",
      "Yes, LFCC-8, which a shap value of 0.5604, was used to detect the sample as replayed .  Yes, LFCC-8, which a shap value of 0.5604, was used to detect the sample as replayed .",
      " Yes, LFCC-8, which a shap value of 0., was used to detect the sample as replayed .",
      " Yes, LF, which a shap value of 0.5604, was used to detect the sample as replayed .",
      " Yes, LFCC-8.5604, was used to detect the sample as replayed .",
      "Yes, GTCC-12, which a shap value of 0, was used to detect the sample as bonafide .  Yes, LFCC-8, which a shap value of 0.5604, was used to detect the sample as replayed .",
      " Yes, LFCC-8, was used to detect the sample as replayed .",
      " Yes, LFCC-8, which a Yes value of 0.5604, was used to detect the sample as replayed .",
      " Yes, LFCC-8, which a shap value of 0.5604, was used to detect the sample as shap .",
      " Yes.5604, was used to detect the sample as replayed .",
      " Yes, LFCC-8, which a shap value of 0.5604, was used to detect the sample as replayed ."
    ],
    "new_mr": "<inform> inform ( <response> response: [ Yes ], <interpreter> interpreter: [ shap ], <important> important: [ LFCC-8 ], <classification> classification: [ replayed ], <shap_value> shap value: [ 0.5604 ]> )"
  },
  {
    "mr": "inform(response[yes], speaker_id[2], feature[MFCC-37], interpreter[shap], shap_value[0.2651])",
    "ref": [
      " Yes, person 2 was detected by shap with a shap value of 0.2651 .",
      " Yes, person 0.2651 was detected by MFCC-37 with a shap value of 0.0.2651651 .",
      " Yes, person 2 was detected by MFCC-37 with a MFCC-37 value of 0.2651 .",
      " Yes, person 2 was detected by MFC with a shap value of 0.2651 .",
      "the audio sample had LFCC features extracted and LFCC-36 was determined to have a large impact on the CNN model that determined the sample to be replayed .",
      "the audio sample had LFCC features extracted and LFCC-36 was determined to have a large impact on the CNN model that determined the sample to be replayed .  Yes, person 2 was detected by MFCC-37 with a shap value of 0.2651 .",
      " Yes, person 2 was detected by MFCC-37 with a s value of 0.2651 .",
      "Yes, person 2 was detected by MFCC-37 with a shap value of 0.2651 .  Yes, person 2 was detected by MFCC-37 with a shap value of 0.2651 .",
      " Yes, person  was detected by MFCC-37 with a shap value of 0.651 .",
      " Yes, person 2 was detected by MFCC-37 with a shap value of 0.2 .",
      " Yes, person 2 was detected by MFCC-37 with a shap value of 0.2651 ."
    ],
    "new_mr": "<inform> inform ( <response> response: [ yes ], <speaker_id> speaker id: [ 2 ], <feature> feature: [ MFCC-37 ], <interpreter> interpreter: [ shap ], <shap_value> shap value: [ 0.2651 ]> )"
  },
  {
    "mr": "inform(extracted[LFCC], model[CNN], important[LFCC-4], classification[replayed])",
    "ref": [
      " the audio sample had LFC features extracted and LFC-4 was determined to have a large impact on the CNN model that determined the sample to be replayed .",
      " the audio sample had LFCC features extracted and replayed was determined to have a large impact on the CNN model that determined the sample to be replayed .",
      " the audio sample had LFCC features extracted and LFCC- was determined to have a large impact on the CNN model that determined the sample to be replayed .",
      " the audio sample had LFCC-4 features extracted and LFCC-4-4 was determined to have a large impact on the CNN model that determined the sample to be replayed .",
      " the audio sample had LFCC features extracted and LFCC-4 was determined to have a large impact on the CNN model that determined the sample to be repl .",
      "Yes, MFCC-11, which a shap value of 0.8105, was used to detect the sample as bonafide .",
      " the audio sample had LFCC features extracted and LFCC-4 was determined to have a large impact on the CNN model that determined the sample to be LFCC .",
      "the audio sample had LFCC features extracted and LFCC-4 was determined to have a large impact on the CNN model that determined the sample to be replayed .  the audio sample had LFCC features extracted and LFCC-4 was determined to have a large impact on the CNN model that determined the sample to be replayed .",
      " the audio sample had LFCC features extracted and LFCC-4 was determined to have a large impact on the CN model that determined the sample to be replayed .",
      " the audio sample had LFCC features extracted and LFCC-4 was determined to have a large impact on the LFCC-4 model that determined the sample to be replayed .",
      " the audio sample had LFCC features extracted and LFCC-4 was determined to have a large impact on the CNN model that determined the sample to be replayed ."
    ],
    "new_mr": "<inform> inform ( <extracted> extracted: [ LFCC ], <model> model: [ CNN ], <important> important: [ LFCC-4 ], <classification> classification: [ replayed ]> )"
  },
  {
    "mr": "inform(classification[spoof], edit_type[copy])",
    "ref": [
      "shap determined that the LFCC-21 feature was one of the more important features by assigning it a value of 0.3974 . Part of the audio was played back .",
      "shap determined that the LFCC-21 feature was one of the more important features by assigning it a value of 0.3974 .",
      "Part of the audio was played back . Part of the audio was played back .",
      "shap determined that the LFCC-21 feature was one of the more important features by assigning it a value of 0.3974 . Part of the audio was played back .",
      "shap determined that the LFCC-21 feature was one of the more important features by assigning it a value of 0.3974 .",
      "Part of the audio was played back . Part of the audio was played back .",
      "shap determined that the LFCC-21 feature was one of the more important features by assigning it a value of 0.3974 . Part of the audio was played back .",
      "shap determined that the LFCC-21 feature was one of the more important features by assigning it a value of 0.3974 .",
      "Part of the audio was played back . Part of the audio was played back .",
      "shap determined that the LFCC-21 feature was one of the more important features by assigning it a value of 0.3974 . Part of the audio was played back .",
      "Part of the audio was played back ."
    ],
    "new_mr": "<inform> inform ( <classification> classification: [ spoof ], <edit_type> edit type: [ copy ]> )"
  },
  {
    "mr": "inform(response[yes], speaker_id[1], feature[LFCC-17], interpreter[shap], shap_value[0.7883])",
    "ref": [
      " Yes, person 1 was detected by LFCC-17 with a shap value of LFCC-17 .",
      "Yes, person 7 was detected by LFCC-14 with a shap value of -0.2405 .",
      " Yes, person  was detected by LFCC-7 with a shap value of 0.7883 .",
      " Yes, person 1 was detected by LFCC with a shap value of 0.7883 .",
      "Yes, person 1 was detected by LFCC-17 with a shap value of 0.7883 .  Yes, person 1 was detected by LFCC-17 with a shap value of 0.7883 .",
      " Yes, person 1 was detected by 1 with a shap value of 0.7883 .",
      " Yes, person 1 was detected by LFCC-17 with a sha value of 0.7883 .",
      "Yes, person 7 was detected by LFCC-14 with a shap value of -0.2405 .  Yes, person 1 was detected by LFCC-17 with a shap value of 0.7883 .",
      " Yes.7883 .",
      " Yes, person 1 was detected by LFCC-17 with a shap value of 0.7 .",
      " Yes, person 1 was detected by LFCC-17 with a shap value of 0.7883 ."
    ],
    "new_mr": "<inform> inform ( <response> response: [ yes ], <speaker_id> speaker id: [ 1 ], <feature> feature: [ LFCC-17 ], <interpreter> interpreter: [ shap ], <shap_value> shap value: [ 0.7883 ]> )"
  },
  {
    "mr": "inform(classification[spoof], edit_type[replay], classified_by[feature])",
    "ref": [
      "Other featurs also show the audio sample was Replayed .",
      "shap determined that the GTCC-2 feature was one of the more important features by assigning it a value of -1 . Other features also show the audio sample was Replayed .",
      "shap determined that the GTCC-2 feature was one of the more important features by assigning it a value of -1 .",
      "Other replays also show the audio sample was Replayed .",
      "Other features also show the audio sample was Replayed . Other features also show the audio sample was Replayed .",
      "Other featurs also show the audio sample was Replayed .",
      "shap determined that the GTCC-2 feature was one of the more important features by assigning it a value of -1 . Other features also show the audio sample was Replayed .",
      "shap determined that the GTCC-2 feature was one of the more important features by assigning it a value of -1 .",
      "Other replays also show the audio sample was Replayed .",
      "Other features also show the audio sample was Replayed . Other features also show the audio sample was Replayed .",
      "Other features also show the audio sample was Replayed ."
    ],
    "new_mr": "<inform> inform ( <classification> classification: [ spoof ], <edit_type> edit type: [ replay ], <classified_by> classified by: [ feature ]> )"
  },
  {
    "mr": "inform(response[yes], speaker_id[7], feature[LFCC-14], interpreter[shap], shap_value[-0.2405])",
    "ref": [
      "It was altered using software .  Yes, person 7 was detected by LFCC-14 with a shap value of -0.2405 .",
      " Yes, person 7 was detected by LF with a shap value of -0.2405 .",
      " Yes, person shap was detected by LFCC-14 with a shap value of -0.2405 .",
      " Yes, person 7 was detected by LFCC-14 with a shap value of shap .",
      "It was altered using software .",
      "Yes, person 7 was detected by LFCC-14 with a shap value of -0.2405 .  Yes, person 7 was detected by LFCC-14 with a shap value of -0.2405 .",
      " Yes, person  was detected by LFCC-14 with a shap value of -0.2405 .",
      " Yes.2405 .",
      " Yes, person 7 was detected by LFCC-14 with a sha value of -0.2405 .",
      " Yes, person 7 was detected by shap with a shap value of -0.2405 .",
      " Yes, person 7 was detected by LFCC-14 with a shap value of -0.2405 ."
    ],
    "new_mr": "<inform> inform ( <response> response: [ yes ], <speaker_id> speaker id: [ 7 ], <feature> feature: [ LFCC-14 ], <interpreter> interpreter: [ shap ], <shap_value> shap value: [ -0.2405 ]> )"
  },
  {
    "mr": "inform(response[Yes], interpreter[shap], important[MSRCC-2], classification[bonafide], shap_value[-0.7602])",
    "ref": [
      " Yes, MSRCC-2, which a s value of -0.7602, was used to detect the sample as bonafide .",
      " Yes, MSRCC-2, which a shap value of -0.7602, was used to detect the sample as  .",
      "Yes, MSRCC-2, which a shap value of -0.7602, was used to detect the sample as bonafide .  Yes, MSRCC-2, which a shap value of -0.7602, was used to detect the sample as bonafide .",
      " Ye, MSRCC-2, which a shap value of -0.7602, was used to detect the sample as bonafide .",
      " -0.7602, MSRCC-2, which a shap value of -0.7602, was used to detect the sample as bonafide .",
      " Yes, MSRCC-2, which a shap value of -0.7602, was used to detect the sample as -0.7602 .",
      " Yes, MSRCC-2.7602, was used to detect the sample as bonafide .",
      " Yes, MSRCC-2, which a MSRCC-2 value of -0.7602, was used to detect the sample as bonafide .",
      " Yes, Yes, which a shap value of -0.7602, was used to detect the sample as bonafide .",
      " Yes, MSRCC-2, which a shap value of -0.7602.",
      " Yes, MSRCC-2, which a shap value of -0.7602, was used to detect the sample as bonafide ."
    ],
    "new_mr": "<inform> inform ( <response> response: [ Yes ], <interpreter> interpreter: [ shap ], <important> important: [ MSRCC-2 ], <classification> classification: [ bonafide ], <shap_value> shap value: [ -0.7602 ]> )"
  },
  {
    "mr": "inform(classification[spoof], edit_type[environment], classified_by[feature])",
    "ref": [
      "Yes, MFCC-2, which a shap value of -0.7935, was used to detect the id of speaker 7 for the audio sample . Several features showed the Reverberation signature .",
      "Several features showed the Reverberation signature . Several features showed the Reverberation signature .",
      "Several environments showed the Reverberation signature .",
      "Yes, MFCC-2, which a shap value of -0.7935, was used to detect the id of speaker 7 for the audio sample .",
      "Several s showed the Reverberation signature .",
      "Yes, MFCC-2, which a shap value of -0.7935, was used to detect the id of speaker 7 for the audio sample . Several features showed the Reverberation signature .",
      "Several features showed the Reverberation signature . Several features showed the Reverberation signature .",
      "Several environments showed the Reverberation signature .",
      "Yes, MFCC-2, which a shap value of -0.7935, was used to detect the id of speaker 7 for the audio sample .",
      "Several s showed the Reverberation signature .",
      "Several features showed the Reverberation signature ."
    ],
    "new_mr": "<inform> inform ( <classification> classification: [ spoof ], <edit_type> edit type: [ environment ], <classified_by> classified by: [ feature ]> )"
  },
  {
    "mr": "inform(general)",
    "ref": [
      "Subband Spectral Flux Coefficients are calculated by First , the subband spectral flux (SSF) of the i-th subband of the t-th speech frame is computed . A professional mixer was used . Then  SSFCs are then obtained by performing logarithm and DCT on the SSFs .",
      "A professional mixer was used . Subband Spectral Flux Coefficients are calculated by First , the subband spectral flux (SSF) of the i-th subband of the t-th speech frame is computed . A professional mixer was used . Then  SSFCs are then obtained by performing logarithm and DCT on the SSFs .",
      "Subband Spectral Flux Coefficients are calculated by First , the subband spectral flux (SSF) of the i-th subband of the t-th speech frame is computed .",
      "Then  SSFCs are then obtained by performing logarithm and DCT on the SSFs .",
      "A professional mixer was used . A professional mixer was used .",
      "A professional mixer was used . Then  SSFCs are then obtained by performing logarithm and DCT on the SSFs .",
      "Then  SSFCs are then obtained by performing logarithm and DCT on the SSFs . Subband Spectral Flux Coefficients are calculated by First , the subband spectral flux (SSF) of the i-th subband of the t-th speech frame is computed . Then  SSFCs are then obtained by performing logarithm and DCT on the SSFs .",
      "Then  SSFCs are then obtained by performing logarithm and DCT on the SSFs . Then  SSFCs are then obtained by performing logarithm and DCT on the SSFs . Subband Spectral Flux Coefficients are calculated by First , the subband spectral flux (SSF) of the i-th subband of the t-th speech frame is computed . Then  SSFCs are then obtained by performing logarithm and DCT on the SSFs .",
      "Subband Spectral Flux Coefficients are calculated by First . Then  SSFCs are then obtained by performing logarithm and DCT on the SSFs .",
      "Subband Spectral Flux Coefficients are calculated by First , the subband spectral flux (SSF) of the i-th subband of the t-th speech frame is computed . A professional mixer was used . Then  SSFCs are then obtained by performing logarithm and DCT on the SSFs .",
      "Subband Spectral Flux Coefficients are calculated by First , the subband spectral flux (SSF) of the i-th subband of the t-th speech frame is computed . Then  SSFCs are then obtained by performing logarithm and DCT on the SSFs ."
    ],
    "new_mr": "<inform> inform ( > )"
  },
  {
    "mr": "inform(interpreter[shap], important[MFCC-8], shap_value[-0.4934])",
    "ref": [
      " shap determined that the MF feature was one of the more important features by assigning it a value of -0.4934 .",
      " sh determined that the MFCC-8 feature was one of the more important features by assigning it a value of -0.4934 .",
      "shap determined that the MFCC-8 feature was one of the more important features by assigning it a value of -0.4934 .  shap determined that the MFCC-8 feature was one of the more important features by assigning it a value of -0.4934 .",
      "shap determined that the LFCC-23 feature was one of the more important features by assigning it a value of -0.9787 .  shap determined that the MFCC-8 feature was one of the more important features by assigning it a value of -0.4934 .",
      " MFCC-8 determined that the MFCC-8 feature was one of the more important features by assigning it a value of -0.4934 .",
      " shap determined that the MFCC-8 feature was one of the more important features by assigning it a value of MFCC-8 .",
      "shap determined that the LFCC-23 feature was one of the more important features by assigning it a value of -0.9787 .",
      " shap determined that the MFCC-8 feature was one of the more important features by assigning it a value of -0.49 .",
      " shap determined that the -0.4934 feature was one of the more important features by assigning it a value of -0.4934 .",
      " shap determined that the MF feature was one of the more important features by assigning it a value of -0.4934 .",
      " shap determined that the MFCC-8 feature was one of the more important features by assigning it a value of -0.4934 ."
    ],
    "new_mr": "<inform> inform ( <interpreter> interpreter: [ shap ], <important> important: [ MFCC-8 ], <shap_value> shap value: [ -0.4934 ]> )"
  },
  {
    "mr": "inform(extracted[MSRCC], model[CNN], important[MSRCC-3], classification[bonafide])",
    "ref": [
      " the audio sample had MSRCC features extracted and  was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      " the audio sample had MSRCC features extracted and MSRCC-3 was determined to have a large impact on the  model that determined the sample to be bonafide .",
      " the audio sample had MSRCC features extracted and bonafide was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      " the audio sample had MSRCC features extracted and MSRCC-3 was determined to have a large impact on the CNN model that determined the sample to be MSRCC-3 .",
      " the audio sample had  features extracted and -3 was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      "Yes, MFCC-10, which a shap value of -0.6103, was used to detect the sample as replayed .",
      " the audio sample had MSRCC-3 features extracted and MSRCC-3-3 was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      " the audio sample had MSRCC features extracted and MSRCC-3 was determined to have a large impact on the CNN model that determined the sample to be  .",
      "the audio sample had MSRCC features extracted and MSRCC-3 was determined to have a large impact on the CNN model that determined the sample to be bonafide .  the audio sample had MSRCC features extracted and MSRCC-3 was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      "Yes, MFCC-10, which a shap value of -0.6103, was used to detect the sample as replayed .  the audio sample had MSRCC features extracted and MSRCC-3 was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      " the audio sample had MSRCC features extracted and MSRCC-3 was determined to have a large impact on the CNN model that determined the sample to be bonafide ."
    ],
    "new_mr": "<inform> inform ( <extracted> extracted: [ MSRCC ], <model> model: [ CNN ], <important> important: [ MSRCC-3 ], <classification> classification: [ bonafide ]> )"
  },
  {
    "mr": "inform(response[Yes], interpreter[shap], important[MFCC-9], classification[bonafide], shap_value[-0.4455])",
    "ref": [
      " Yes, MFCC-9, which a shap value of -0.4455, was used to detect the sample as bonafid .",
      " Yes, MFCC-9, which a shap value of Yes, was used to detect the sample as bonafide .",
      " Yes, MFCC-9, which a shap value of -0, was used to detect the sample as bonafide .",
      " Yes, MFCC-9, which a shap value of -0.4455, was used to detect the sample as Yes .",
      " shap, MFCC-9, which a shap value of -0.4455, was used to detect the sample as bonafide .",
      " Yes, MFCC-9, which a shap value of -0.4455.",
      "the audio sample had LFCC features extracted and LFCC-4 was determined to have a large impact on the CNN model that determined the sample to be replayed .  Yes, MFCC-9, which a shap value of -0.4455, was used to detect the sample as bonafide .",
      " Yes, Yes, which a shap value of -0.4455, was used to detect the sample as bonafide .",
      " Yes, MFC, which a shap value of -0.4455, was used to detect the sample as bonafide .",
      " Yes, MFCC-9, which a sha value of -0.4455, was used to detect the sample as bonafide .",
      " Yes, MFCC-9, which a shap value of -0.4455, was used to detect the sample as bonafide ."
    ],
    "new_mr": "<inform> inform ( <response> response: [ Yes ], <interpreter> interpreter: [ shap ], <important> important: [ MFCC-9 ], <classification> classification: [ bonafide ], <shap_value> shap value: [ -0.4455 ]> )"
  },
  {
    "mr": "inform(interpreter[shap], important[MFCC-10], shap_value[-0.0298])",
    "ref": [
      " sh determined that the MFCC-10 feature was one of the more important features by assigning it a value of -0.0298 .",
      " shap determined that the MFCC feature was one of the more important features by assigning it a value of -0.0298 .",
      " shap determined that the MFCC-10 feature was one of the more important features by assigning it a value of shap .",
      " shap determined that the MFCC-10 feature was one of the more important features by assigning it a value of  .",
      " -0.0298 determined that the MFCC-10 feature was one of the more important features by assigning it a value of -0.0298 .",
      "Dynamic microphones were used the most .",
      "Dynamic microphones were used the most .  shap determined that the MFCC-10 feature was one of the more important features by assigning it a value of -0.0298 .",
      " shap determined that the -0.0298 feature was one of the more important features by assigning it a value of -0.0298 .",
      "shap determined that the MFCC-10 feature was one of the more important features by assigning it a value of -0.0298 .  shap determined that the MFCC-10 feature was one of the more important features by assigning it a value of -0.0298 .",
      " sh determined that the MFCC-10 feature was one of the more important features by assigning it a value of -0.0298 .",
      " shap determined that the MFCC-10 feature was one of the more important features by assigning it a value of -0.0298 ."
    ],
    "new_mr": "<inform> inform ( <interpreter> interpreter: [ shap ], <important> important: [ MFCC-10 ], <shap_value> shap value: [ -0.0298 ]> )"
  },
  {
    "mr": "inform(response[Yes], interpreter[shap], important[MFCC-21], classification[replayed], shap_value[0.0724])",
    "ref": [
      "Yes, MFCC-21, which a shap value of 0.0724, was used to detect the sample as replayed .  Yes, MFCC-21, which a shap value of 0.0724, was used to detect the sample as replayed .",
      " Yes, MFCC-21, was used to detect the sample as replayed .",
      " Yes, MFCC-21, which a shap value of 0, was used to detect the sample as replayed .",
      " Yes, Yes, which a shap value of 0.0724, was used to detect the sample as replayed .",
      " MFCC-21, MFCC-21, which a shap value of 0.0724, was used to detect the sample as replayed .",
      " Yes, MFCC-21, which a shap value of Yes, was used to detect the sample as replayed .",
      " Yes, MFCC-2, which a shap value of 0.0724, was used to detect the sample as replayed .",
      "Yes, LFCC-10, which a shap value of 0.8478, was used to detect the sample as replayed .",
      " Yes, MFCC-21, which a shap value of 0.0724, was used to detect the sample as 0.0724 .",
      "Yes, LFCC-10, which a shap value of 0.8478, was used to detect the sample as replayed .  Yes, MFCC-21, which a shap value of 0.0724, was used to detect the sample as replayed .",
      " Yes, MFCC-21, which a shap value of 0.0724, was used to detect the sample as replayed ."
    ],
    "new_mr": "<inform> inform ( <response> response: [ Yes ], <interpreter> interpreter: [ shap ], <important> important: [ MFCC-21 ], <classification> classification: [ replayed ], <shap_value> shap value: [ 0.0724 ]> )"
  },
  {
    "mr": "inform(speaker_id[5])",
    "ref": [
      "Yes, LFCC-53, which a shap value of 0.9557, was used to detect the sample as replayed .  person 5 was detected as the primary speaker of the audio sample .",
      " person  was detected as the primary speaker of the audio sample .",
      "person 5 was detected as the primary speaker of the audio sample .  person 5 was detected as the primary speaker of the audio sample .",
      "Yes, LFCC-53, which a shap value of 0.9557, was used to detect the sample as replayed .",
      "Yes, LFCC-53, which a shap value of 0.9557, was used to detect the sample as replayed .  person 5 was detected as the primary speaker of the audio sample .",
      " person  was detected as the primary speaker of the audio sample .",
      "person 5 was detected as the primary speaker of the audio sample .  person 5 was detected as the primary speaker of the audio sample .",
      "Yes, LFCC-53, which a shap value of 0.9557, was used to detect the sample as replayed .",
      "Yes, LFCC-53, which a shap value of 0.9557, was used to detect the sample as replayed .  person 5 was detected as the primary speaker of the audio sample .",
      " person  was detected as the primary speaker of the audio sample .",
      " person 5 was detected as the primary speaker of the audio sample ."
    ],
    "new_mr": "<inform> inform ( <speaker_id> speaker id: [ 5 ]> )"
  },
  {
    "mr": "inform(classification[spoof], edit_type[multi_microphone], mic_quantity[2])",
    "ref": [
      "Features in the audio show there were two microphones used . Features in the audio show there were two microphones used .",
      "Yes, person 2 was detected by GTCC-4 with a shap value of 1 . Features in the audio show there were two microphones used .",
      "Yes, person 2 was detected by GTCC-4 with a shap value of 1 .",
      "Features in the audio show there were two microphones used . Features in the audio show there were two microphones used .",
      "Yes, person 2 was detected by GTCC-4 with a shap value of 1 . Features in the audio show there were two microphones used .",
      "Yes, person 2 was detected by GTCC-4 with a shap value of 1 .",
      "Features in the audio show there were two microphones used . Features in the audio show there were two microphones used .",
      "Yes, person 2 was detected by GTCC-4 with a shap value of 1 . Features in the audio show there were two microphones used .",
      "Yes, person 2 was detected by GTCC-4 with a shap value of 1 .",
      "Features in the audio show there were two microphones used . Features in the audio show there were two microphones used .",
      "Features in the audio show there were two microphones used ."
    ],
    "new_mr": "<inform> inform ( <classification> classification: [ spoof ], <edit_type> edit type: [ multi_microphone ], <mic_quantity> mic quantity: [ 2 ]> )"
  },
  {
    "mr": "inform(response[Yes], interpreter[shap], important[MFCC-20], classification[bonafide], shap_value[0.0087])",
    "ref": [
      " Yes, MFCC-20, which a shap value of 0.0087, was used to detect the sample as bonafid .",
      " Yes, shap, which a shap value of 0.0087, was used to detect the sample as bonafide .",
      " Yes, MFCC-2, which a shap value of 0.0087, was used to detect the sample as bonafide .",
      " Yes, MFCC-20.0087, was used to detect the sample as bonafide .",
      " Yes, which a shap value of 0.0087, was used to detect the sample as bonafide .",
      " Yes, MFCC-20, was used to detect the sample as bonafide .",
      " Yes, MFCC-20, which a shap value of 0.0087, was used to detect the sample as Yes .",
      " Yes.0087, was used to detect the sample as bonafide .",
      "the audio sample had PSRCC features extracted and PSRCC-9 was determined to have a large impact on the CNN model that determined the sample to be replayed .",
      " Yes, MFCC-20, which a sha value of 0.0087, was used to detect the sample as bonafide .",
      " Yes, MFCC-20, which a shap value of 0.0087, was used to detect the sample as bonafide ."
    ],
    "new_mr": "<inform> inform ( <response> response: [ Yes ], <interpreter> interpreter: [ shap ], <important> important: [ MFCC-20 ], <classification> classification: [ bonafide ], <shap_value> shap value: [ 0.0087 ]> )"
  },
  {
    "mr": "inform(extracted[PSRCC], model[CNN], important[PSRCC-11], classification[bonafide])",
    "ref": [
      " the audio sample had PSRCC features extracted and PSRCC-11 was determined to have a large impact on the CNN model that determined the sample to be CNN .",
      " the audio sample had  features extracted and -11 was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      " the audio sample had PSRCC features extracted and PSRCC-11 was determined to have a large impact on the CNN model that determined the sample to be b .",
      "Yes, MFCC-30, which a shap value of -0.7633, was used to detect the sample as replayed .  the audio sample had PSRCC features extracted and PSRCC-11 was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      " the audio sample had PSRCC features extracted and PSRCC-11 was determined to have a large impact on the PSRCC-11 model that determined the sample to be bonafide .",
      " the audio sample had bonafide features extracted and bonafide-11 was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      "Yes, MFCC-30, which a shap value of -0.7633, was used to detect the sample as replayed .",
      " the audio sample had PSRCC features extracted and PSRCC was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      " the audio sample had PSRCC features extracted and PSRCC-11 was determined to have a large impact on the C model that determined the sample to be bonafide .",
      " the audio sample had PSRCC features extracted and  was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      " the audio sample had PSRCC features extracted and PSRCC-11 was determined to have a large impact on the CNN model that determined the sample to be bonafide ."
    ],
    "new_mr": "<inform> inform ( <extracted> extracted: [ PSRCC ], <model> model: [ CNN ], <important> important: [ PSRCC-11 ], <classification> classification: [ bonafide ]> )"
  },
  {
    "mr": "inform(response[yes], speaker_id[5], feature[LFCC-51], interpreter[shap], shap_value[-0.5435])",
    "ref": [
      " Yes, LFCC--0.54351, which a shap value of -0.-0.543543-0.5435, was used to detect the id of speaker -0.5435 for the audio sample .",
      " Yes, LFCC-51, which a shap value of -0.5435.",
      " Yes, LFCC-51, which a shap value of -0.543, was used to detect the id of speaker 5 for the audio sample .",
      "yes, GTCC-9 was used to determine speaker id .  Yes, LFCC-51, which a shap value of -0.5435, was used to detect the id of speaker 5 for the audio sample .",
      " Yes, LFCC-51, which a  value of -0.5435, was used to detect the id of speaker 5 for the audio sample .",
      " Yes, LFCC-1, which a shap value of -0.43, was used to detect the id of speaker  for the audio sample .",
      " Yes.5435, was used to detect the id of speaker 5 for the audio sample .",
      "yes, GTCC-9 was used to determine speaker id .",
      " Yes, LFC, which a shap value of -0.5435, was used to detect the id of speaker 5 for the audio sample .",
      "Yes, LFCC-51, which a shap value of -0.5435, was used to detect the id of speaker 5 for the audio sample .  Yes, LFCC-51, which a shap value of -0.5435, was used to detect the id of speaker 5 for the audio sample .",
      " Yes, LFCC-51, which a shap value of -0.5435, was used to detect the id of speaker 5 for the audio sample ."
    ],
    "new_mr": "<inform> inform ( <response> response: [ yes ], <speaker_id> speaker id: [ 5 ], <feature> feature: [ LFCC-51 ], <interpreter> interpreter: [ shap ], <shap_value> shap value: [ -0.5435 ]> )"
  },
  {
    "mr": "inform(response[yes], speaker_id[3], feature[LFCC-30], interpreter[shap], shap_value[0.2213])",
    "ref": [
      " Yes, LFCC-30, which a  value of 0.2213, was used to detect the id of speaker 3 for the audio sample .",
      " Yes, LFCC-30.2213, was used to detect the id of speaker 3 for the audio sample .",
      " Yes, LFCC-30, which a yes value of 0.2213, was used to detect the id of speaker 3 for the audio sample .",
      " Yes, shap, which a shap value of 0.2213, was used to detect the id of speaker 3 for the audio sample .",
      " Yes, LFCC-yes0, which a shap value of 0.221yes, was used to detect the id of speaker yes for the audio sample .",
      "Yes, GTCC-3, which a shap value of 1, was used to detect the sample as bonafide .  Yes, LFCC-30, which a shap value of 0.2213, was used to detect the id of speaker 3 for the audio sample .",
      " Yes, LFCC-30, which a shap value of 0.2213.",
      " Yes, LFCC-0, which a shap value of 0.221, was used to detect the id of speaker  for the audio sample .",
      " Yes, LFCC-30, which a shap value of 0.22, was used to detect the id of speaker 3 for the audio sample .",
      "Yes, LFCC-30, which a shap value of 0.2213, was used to detect the id of speaker 3 for the audio sample .  Yes, LFCC-30, which a shap value of 0.2213, was used to detect the id of speaker 3 for the audio sample .",
      " Yes, LFCC-30, which a shap value of 0.2213, was used to detect the id of speaker 3 for the audio sample ."
    ],
    "new_mr": "<inform> inform ( <response> response: [ yes ], <speaker_id> speaker id: [ 3 ], <feature> feature: [ LFCC-30 ], <interpreter> interpreter: [ shap ], <shap_value> shap value: [ 0.2213 ]> )"
  },
  {
    "mr": "inform(response[yes], speaker_id[4], feature[MFCC-37], interpreter[shap], shap_value[-0.6786])",
    "ref": [
      "the audio sample had PSRCC features extracted and PSRCC-1 was determined to have a large impact on the CNN model that determined the sample to be replayed .",
      " Yes, MFCC-37, was used to detect the id of speaker 4 for the audio sample .",
      "Yes, MFCC-37, which a shap value of -0.6786, was used to detect the id of speaker 4 for the audio sample .  Yes, MFCC-37, which a shap value of -0.6786, was used to detect the id of speaker 4 for the audio sample .",
      " Yes, shap, which a shap value of -0.6786, was used to detect the id of speaker 4 for the audio sample .",
      " Yes, MFCC-37, which a shap value of shap, was used to detect the id of speaker 4 for the audio sample .",
      " Yes, MFCC-37, which a -0.6786 value of -0.6786, was used to detect the id of speaker 4 for the audio sample .",
      " Yes, MFCC-37, which a shap value of -0.6786.",
      " Yes, which a shap value of -0.6786, was used to detect the id of speaker 4 for the audio sample .",
      " Yes, MFCC-37, which a s value of -0.6786, was used to detect the id of speaker 4 for the audio sample .",
      " Yes, MFCC, which a shap value of -0.6786, was used to detect the id of speaker 4 for the audio sample .",
      " Yes, MFCC-37, which a shap value of -0.6786, was used to detect the id of speaker 4 for the audio sample ."
    ],
    "new_mr": "<inform> inform ( <response> response: [ yes ], <speaker_id> speaker id: [ 4 ], <feature> feature: [ MFCC-37 ], <interpreter> interpreter: [ shap ], <shap_value> shap value: [ -0.6786 ]> )"
  },
  {
    "mr": "inform(response[Yes], interpreter[shap], important[LFCC-45], classification[bonafide], shap_value[-0.9902])",
    "ref": [
      " Yes, L, which a shap value of -0.9902, was used to detect the sample as bonafide .",
      "Yes, LFCC-45, which a shap value of -0.9902, was used to detect the sample as bonafide .  Yes, LFCC-45, which a shap value of -0.9902, was used to detect the sample as bonafide .",
      " Yes, which a shap value of -0.9902, was used to detect the sample as bonafide .",
      " Yes, LFCC-45, which a sh value of -0.9902, was used to detect the sample as bonafide .",
      "shap determined that the MFCC-20 feature was one of the more important features by assigning it a value of 0.3878 .",
      " Yes, LFCC-45, which a shap value of LFCC-45, was used to detect the sample as bonafide .",
      " Yes, LFCC-45, which a shap value of -0.9, was used to detect the sample as bonafide .",
      " Yes, Yes, which a shap value of -0.9902, was used to detect the sample as bonafide .",
      " Yes, LFCC-45, which a shap value of -0.9902.",
      " Ye, LFCC-45, which a shap value of -0.9902, was used to detect the sample as bonafide .",
      " Yes, LFCC-45, which a shap value of -0.9902, was used to detect the sample as bonafide ."
    ],
    "new_mr": "<inform> inform ( <response> response: [ Yes ], <interpreter> interpreter: [ shap ], <important> important: [ LFCC-45 ], <classification> classification: [ bonafide ], <shap_value> shap value: [ -0.9902 ]> )"
  },
  {
    "mr": "inform(response[yes], speaker_id[5], feature[MFCC-19], interpreter[shap], shap_value[-0.5025])",
    "ref": [
      " Yes.5025 .",
      " Yes, person 5 was detected by MFCC with a shap value of -0.5025 .",
      " Yes, person 5 was detected by MFCC-19 with a shap value of -0.5 .",
      " Yes, person 5 was detected by MFCC-19 with a  value of -0.5025 .",
      "Yes, person 5 was detected by MFCC-19 with a shap value of -0.5025 .  Yes, person 5 was detected by MFCC-19 with a shap value of -0.5025 .",
      " Yes, person 5 was detected by MFCC-19 with a shap value of yes .",
      "Yes, person 1 was detected by LFCC-56 with a shap value of -0.4735 .  Yes, person 5 was detected by MFCC-19 with a shap value of -0.5025 .",
      " Yes, person 5 was detected by 5 with a shap value of -0.5025 .",
      "Yes, person 1 was detected by LFCC-56 with a shap value of -0.4735 .",
      " Yes, person -0.5025 was detected by MFCC-19 with a shap value of -0.-0.502502-0.5025 .",
      " Yes, person 5 was detected by MFCC-19 with a shap value of -0.5025 ."
    ],
    "new_mr": "<inform> inform ( <response> response: [ yes ], <speaker_id> speaker id: [ 5 ], <feature> feature: [ MFCC-19 ], <interpreter> interpreter: [ shap ], <shap_value> shap value: [ -0.5025 ]> )"
  },
  {
    "mr": "inform(response[Yes], interpreter[shap], important[MFCC-12], classification[bonafide], shap_value[-0.3641])",
    "ref": [
      " Yes, MFCC-12, which a -0.3641 value of -0.3641, was used to detect the sample as bonafide .",
      "Yes, MFCC-26, which a shap value of 0.737, was used to detect the sample as replayed .",
      " Ye, MFCC-12, which a shap value of -0.3641, was used to detect the sample as bonafide .",
      " Yes, MFCC-12, which a shap value of , was used to detect the sample as bonafide .",
      " Yes, which a shap value of -0.3641, was used to detect the sample as bonafide .",
      " Yes, bonafide, which a shap value of -0.3641, was used to detect the sample as bonafide .",
      "Yes, MFCC-12, which a shap value of -0.3641, was used to detect the sample as bonafide .  Yes, MFCC-12, which a shap value of -0.3641, was used to detect the sample as bonafide .",
      " Yes, MFCC-12, which a shap value of shap, was used to detect the sample as bonafide .",
      " -0.3641, MFCC-12, which a shap value of -0.3641, was used to detect the sample as bonafide .",
      " Yes.3641, was used to detect the sample as bonafide .",
      " Yes, MFCC-12, which a shap value of -0.3641, was used to detect the sample as bonafide ."
    ],
    "new_mr": "<inform> inform ( <response> response: [ Yes ], <interpreter> interpreter: [ shap ], <important> important: [ MFCC-12 ], <classification> classification: [ bonafide ], <shap_value> shap value: [ -0.3641 ]> )"
  },
  {
    "mr": "inform(response[Yes], classification[spoofed], spoof_type[cloning])",
    "ref": [
      "No . The signal is consistent with a cloned voice .",
      "The signal is consistent with a cloned voice . The signal is consistent with a cloned voice .",
      "No .",
      "No . The signal is consistent with a cloned voice .",
      "The signal is consistent with a cloned voice . The signal is consistent with a cloned voice .",
      "No .",
      "No . The signal is consistent with a cloned voice .",
      "The signal is consistent with a cloned voice . The signal is consistent with a cloned voice .",
      "No .",
      "No . The signal is consistent with a cloned voice .",
      "The signal is consistent with a cloned voice ."
    ],
    "new_mr": "<inform> inform ( <response> response: [ Yes ], <classification> classification: [ spoofed ], <spoof_type> spoof type: [ cloning ]> )"
  },
  {
    "mr": "inform(extracted[LFCC], model[CNN], important[LFCC-35], classification[replayed])",
    "ref": [
      " the audio sample had LFCC features extracted and LFCC-35 was determined to have a large impact on the CNN model that determined the sample to be LFCC-35 .",
      "shap determined that the LFCC-31 feature was one of the more important features by assigning it a value of -0.9197 .",
      " the audio sample had L features extracted and L-35 was determined to have a large impact on the CNN model that determined the sample to be replayed .",
      " the audio sample had LFCC features extracted and CNN was determined to have a large impact on the CNN model that determined the sample to be replayed .",
      " the audio sample had LFCC features extracted and LFCC-3 was determined to have a large impact on the CNN model that determined the sample to be replayed .",
      "the audio sample had LFCC features extracted and LFCC-35 was determined to have a large impact on the CNN model that determined the sample to be replayed .  the audio sample had LFCC features extracted and LFCC-35 was determined to have a large impact on the CNN model that determined the sample to be replayed .",
      " the audio sample had LFCC features extracted and LFCC-35 was determined to have a large impact on the CNN model that determined the sample to be  .",
      " the audio sample had LFCC features extracted and LFCC-35 was determined to have a large impact on the replayed model that determined the sample to be replayed .",
      " the audio sample had LFCC features extracted and LFCC-35 was determined to have a large impact on the CN model that determined the sample to be replayed .",
      "shap determined that the LFCC-31 feature was one of the more important features by assigning it a value of -0.9197 .  the audio sample had LFCC features extracted and LFCC-35 was determined to have a large impact on the CNN model that determined the sample to be replayed .",
      " the audio sample had LFCC features extracted and LFCC-35 was determined to have a large impact on the CNN model that determined the sample to be replayed ."
    ],
    "new_mr": "<inform> inform ( <extracted> extracted: [ LFCC ], <model> model: [ CNN ], <important> important: [ LFCC-35 ], <classification> classification: [ replayed ]> )"
  },
  {
    "mr": "inform(response[Yes], interpreter[shap], important[PSRCC-1], classification[bonafide], shap_value[0.1274])",
    "ref": [
      " bonafide, PSRCC-1, which a shap value of 0.1274, was used to detect the sample as bonafide .",
      " Yes, PSRCC-1, which a shap value of 0.1274.",
      " Yes, PSRCC-1, which a shap value of bonafide, was used to detect the sample as bonafide .",
      "Yes, LFCC-35, which a shap value of 0.3982, was used to detect the id of speaker 2 for the audio sample .",
      " Yes, PSRCC-1, which a shap value of 0.1274, was used to detect the sample as Yes .",
      " Yes, PSRCC-1, which a shap value of 0.1274, was used to detect the sample as bona .",
      " Yes, PSRCC-1.1274, was used to detect the sample as bonafide .",
      "Yes, LFCC-35, which a shap value of 0.3982, was used to detect the id of speaker 2 for the audio sample .  Yes, PSRCC-1, which a shap value of 0.1274, was used to detect the sample as bonafide .",
      " Yes, PSRCC-, which a shap value of 0.1274, was used to detect the sample as bonafide .",
      " Yes, PSRCC-1, was used to detect the sample as bonafide .",
      " Yes, PSRCC-1, which a shap value of 0.1274, was used to detect the sample as bonafide ."
    ],
    "new_mr": "<inform> inform ( <response> response: [ Yes ], <interpreter> interpreter: [ shap ], <important> important: [ PSRCC-1 ], <classification> classification: [ bonafide ], <shap_value> shap value: [ 0.1274 ]> )"
  },
  {
    "mr": "inform(classification[spoof], edit_type[multi_microphone], signal_length[5])",
    "ref": [
      "Yes, MFCC-19, which a shap value of 0.4159, was used to detect the sample as bonafide . That microphone was used for 5 seconds .",
      "Yes, MFCC-19, which a shap value of 0.4159, was used to detect the sample as bonafide .",
      "That microphone was used for  seconds .",
      "That microphone was used for 5 seconds . That microphone was used for 5 seconds .",
      "That microphone was used for multi_microphone seconds .",
      "Yes, MFCC-19, which a shap value of 0.4159, was used to detect the sample as bonafide . That microphone was used for 5 seconds .",
      "Yes, MFCC-19, which a shap value of 0.4159, was used to detect the sample as bonafide .",
      "That microphone was used for  seconds .",
      "That microphone was used for 5 seconds . That microphone was used for 5 seconds .",
      "That microphone was used for multi_microphone seconds .",
      "That microphone was used for 5 seconds ."
    ],
    "new_mr": "<inform> inform ( <classification> classification: [ spoof ], <edit_type> edit type: [ multi_microphone ], <signal_length> signal length: [ 5 ]> )"
  },
  {
    "mr": "inform(interpreter[shap], important[LFCC-48], shap_value[0.7218])",
    "ref": [
      "shap determined that the LFCC-48 feature was one of the more important features by assigning it a value of 0.7218 .  shap determined that the LFCC-48 feature was one of the more important features by assigning it a value of 0.7218 .",
      " shap determined that the 0.7218 feature was one of the more important features by assigning it a value of 0.7218 .",
      " shap determined that the LFCC-4 feature was one of the more important features by assigning it a value of 0.7218 .",
      "Yes, person 7 was detected by MSRCC-9 with a shap value of -0.9806 .  shap determined that the LFCC-48 feature was one of the more important features by assigning it a value of 0.7218 .",
      " s determined that the LFCC-48 feature was one of the more important features by assigning it a value of 0.7218 .",
      " LFCC-48 determined that the LFCC-48 feature was one of the more important features by assigning it a value of 0.7218 .",
      " shap determined that the LFCC-48 feature was one of the more important features by assigning it a value of 0.721 .",
      " shap determined that the LFCC-48 feature was one of the more important features by assigning it a value of shap .",
      "Yes, person 7 was detected by MSRCC-9 with a shap value of -0.9806 .",
      "shap determined that the LFCC-48 feature was one of the more important features by assigning it a value of 0.7218 .  shap determined that the LFCC-48 feature was one of the more important features by assigning it a value of 0.7218 .",
      " shap determined that the LFCC-48 feature was one of the more important features by assigning it a value of 0.7218 ."
    ],
    "new_mr": "<inform> inform ( <interpreter> interpreter: [ shap ], <important> important: [ LFCC-48 ], <shap_value> shap value: [ 0.7218 ]> )"
  },
  {
    "mr": "inform(general)",
    "ref": [
      "Yes, LFCC-14, which a shap value of 0.4354, was used to detect the sample as replayed .",
      "Yes, LFCC-14, which a shap value of 0.4354, was used to detect the sample as replayed . Linear Frequency Cepstral Coefficients .",
      "Linear Frequency Cepstral Coefficients . Linear Frequency Cepstral Coefficients .",
      "Yes, LFCC-14, which a shap value of 0.4354, was used to detect the sample as replayed .",
      "Yes, LFCC-14, which a shap value of 0.4354, was used to detect the sample as replayed . Linear Frequency Cepstral Coefficients .",
      "Linear Frequency Cepstral Coefficients . Linear Frequency Cepstral Coefficients .",
      "Yes, LFCC-14, which a shap value of 0.4354, was used to detect the sample as replayed .",
      "Yes, LFCC-14, which a shap value of 0.4354, was used to detect the sample as replayed . Linear Frequency Cepstral Coefficients .",
      "Linear Frequency Cepstral Coefficients . Linear Frequency Cepstral Coefficients .",
      "Yes, LFCC-14, which a shap value of 0.4354, was used to detect the sample as replayed .",
      "Linear Frequency Cepstral Coefficients ."
    ],
    "new_mr": "<inform> inform ( > )"
  },
  {
    "mr": "inform(classification[spoof], edit_type[sampling], num_samples[3])",
    "ref": [
      "the audio sample had LFCC features extracted and LFCC-7 was determined to have a large impact on the CNN model that determined the sample to be bonafide . It has been replayed and re-recorded 3 times .",
      "the audio sample had LFCC features extracted and LFCC-7 was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      "It has been replayed and re-recorded spoof times .",
      "It has been replayed and re-recorded 3 times . It has been replayed and re-recorded 3 times .",
      "It has been replayed and re-recorded  times .",
      "the audio sample had LFCC features extracted and LFCC-7 was determined to have a large impact on the CNN model that determined the sample to be bonafide . It has been replayed and re-recorded 3 times .",
      "the audio sample had LFCC features extracted and LFCC-7 was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      "It has been replayed and re-recorded spoof times .",
      "It has been replayed and re-recorded 3 times . It has been replayed and re-recorded 3 times .",
      "It has been replayed and re-recorded  times .",
      "It has been replayed and re-recorded 3 times ."
    ],
    "new_mr": "<inform> inform ( <classification> classification: [ spoof ], <edit_type> edit type: [ sampling ], <num_samples> num samples: [ 3 ]> )"
  },
  {
    "mr": "inform(classification[spoof], edit_type[environment])",
    "ref": [
      "The breathing rate changes The breathing rate changes",
      "the audio sample had LFCC features extracted and LFCC-3 was determined to have a large impact on the CNN model that determined the sample to be bonafide . The breathing rate changes",
      "the audio sample had LFCC features extracted and LFCC-3 was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      "The breathing rate changes The breathing rate changes",
      "the audio sample had LFCC features extracted and LFCC-3 was determined to have a large impact on the CNN model that determined the sample to be bonafide . The breathing rate changes",
      "the audio sample had LFCC features extracted and LFCC-3 was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      "The breathing rate changes The breathing rate changes",
      "the audio sample had LFCC features extracted and LFCC-3 was determined to have a large impact on the CNN model that determined the sample to be bonafide . The breathing rate changes",
      "the audio sample had LFCC features extracted and LFCC-3 was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      "The breathing rate changes The breathing rate changes",
      "The breathing rate changes "
    ],
    "new_mr": "<inform> inform ( <classification> classification: [ spoof ], <edit_type> edit type: [ environment ]> )"
  },
  {
    "mr": "inform(response[Yes], interpreter[shap], important[LFCC-18], classification[bonafide], shap_value[-0.8228])",
    "ref": [
      " Yes, LFCC-18, which a shap value of -0.8228, was used to detect the sample as LFCC-18 .",
      " Yes, LFCC-18, was used to detect the sample as bonafide .",
      " Yes, LFCC-18, which a  value of -0.8228, was used to detect the sample as bonafide .",
      " Ye, LFCC-18, which a shap value of -0.8228, was used to detect the sample as bonafide .",
      " Yes, LFCC-18, which a shap value of -0.8228.",
      " Yes, which a shap value of -0.8228, was used to detect the sample as bonafide .",
      "the audio sample had MFCC features extracted and MFCC-4 was determined to have a large impact on the CNN model that determined the sample to be replayed .  Yes, LFCC-18, which a shap value of -0.8228, was used to detect the sample as bonafide .",
      " Yes, shap, which a shap value of -0.8228, was used to detect the sample as bonafide .",
      " Yes, LFCC-18, which a shap value of -0.8228, was used to detect the sample as bon .",
      " Yes, LF, which a shap value of -0.8228, was used to detect the sample as bonafide .",
      " Yes, LFCC-18, which a shap value of -0.8228, was used to detect the sample as bonafide ."
    ],
    "new_mr": "<inform> inform ( <response> response: [ Yes ], <interpreter> interpreter: [ shap ], <important> important: [ LFCC-18 ], <classification> classification: [ bonafide ], <shap_value> shap value: [ -0.8228 ]> )"
  },
  {
    "mr": "inform(classification[spoof], edit_type[computer], change_at[7])",
    "ref": [
      "The synthesized speech starts at 7 seconds . The synthesized speech starts at 7 seconds .",
      "Yes, person 2 was detected by PSRCC-4 with a shap value of -0.4072 .",
      "Yes, person 2 was detected by PSRCC-4 with a shap value of -0.4072 . The synthesized speech starts at 7 seconds .",
      "The synthesized speech starts at spoof seconds . ",
      "The synthesized speech starts at  seconds . ",
      "The synthesized speech starts at 7 seconds . The synthesized speech starts at 7 seconds .",
      "Yes, person 2 was detected by PSRCC-4 with a shap value of -0.4072 .",
      "Yes, person 2 was detected by PSRCC-4 with a shap value of -0.4072 . The synthesized speech starts at 7 seconds .",
      "The synthesized speech starts at spoof seconds . ",
      "The synthesized speech starts at  seconds . ",
      "The synthesized speech starts at 7 seconds . "
    ],
    "new_mr": "<inform> inform ( <classification> classification: [ spoof ], <edit_type> edit type: [ computer ], <change_at> change at: [ 7 ]> )"
  },
  {
    "mr": "inform(response[Yes], interpreter[shap], important[LFCC-13], classification[replayed], shap_value[0.2183])",
    "ref": [
      "Yes, LFCC-13, which a shap value of 0.2183, was used to detect the sample as replayed .  Yes, LFCC-13, which a shap value of 0.2183, was used to detect the sample as replayed .",
      " Yes, which a shap value of 0.2183, was used to detect the sample as replayed .",
      " Yes, 0.2183, which a shap value of 0.2183, was used to detect the sample as replayed .",
      " Yes, LFCC-13, which a s value of 0.2183, was used to detect the sample as replayed .",
      " Yes, LFCC-13.2183, was used to detect the sample as replayed .",
      " 0.2183, LFCC-13, which a shap value of 0.2183, was used to detect the sample as replayed .",
      " Yes, LFCC-13, which a Yes value of 0.2183, was used to detect the sample as replayed .",
      "shap determined that the LFCC-34 feature was one of the more important features by assigning it a value of -0.9876 .  Yes, LFCC-13, which a shap value of 0.2183, was used to detect the sample as replayed .",
      " Yes, LFCC-13, which a shap value of 0.218, was used to detect the sample as replayed .",
      " Yes, LFCC-13, was used to detect the sample as replayed .",
      " Yes, LFCC-13, which a shap value of 0.2183, was used to detect the sample as replayed ."
    ],
    "new_mr": "<inform> inform ( <response> response: [ Yes ], <interpreter> interpreter: [ shap ], <important> important: [ LFCC-13 ], <classification> classification: [ replayed ], <shap_value> shap value: [ 0.2183 ]> )"
  },
  {
    "mr": "inform(classification[spoof], edit_type[computer])",
    "ref": [
      "A computer was used to edit the audio A computer was used to edit the audio",
      "A spoof was used to edit the audio",
      "That microphone was used for 5 seconds .",
      "That microphone was used for 5 seconds . A computer was used to edit the audio",
      "A comput was used to edit the audio",
      "A computer was used to edit the audio A computer was used to edit the audio",
      "A spoof was used to edit the audio",
      "That microphone was used for 5 seconds .",
      "That microphone was used for 5 seconds . A computer was used to edit the audio",
      "A comput was used to edit the audio",
      "A computer was used to edit the audio"
    ],
    "new_mr": "<inform> inform ( <classification> classification: [ spoof ], <edit_type> edit type: [ computer ]> )"
  },
  {
    "mr": "inform(response[Yes], classification[spoofed], spoof_type[replayed])",
    "ref": [
      "Yes, the spoofed recording was a replayed recording . Yes, the spoofed recording was a replayed recording .",
      "the audio sample had LFCC features extracted and LFCC-47 was determined to have a large impact on the CNN model that determined the sample to be bonafide . Yes, the spoofed recording was a replayed recording .",
      "the audio sample had LFCC features extracted and LFCC-47 was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      "Yes, the spoofed recording was a r recording .",
      "replayed, the spoofed recording was a replayed recording .",
      "Y, the spoofed recording was a replayed recording .",
      "Yes, the spoofed recording was a spoofed recording .",
      "Yes, the s recording was a replayed recording .",
      "Yes.",
      "Yes, the replayed recording was a replayed recording .",
      "Yes, the spoofed recording was a replayed recording ."
    ],
    "new_mr": "<inform> inform ( <response> response: [ Yes ], <classification> classification: [ spoofed ], <spoof_type> spoof type: [ replayed ]> )"
  },
  {
    "mr": "inform(response[yes], speaker_id[7], feature[LFCC-58], interpreter[shap], shap_value[0.3804])",
    "ref": [
      " Yes, LFCC-58, which a shap value of 0.3804, was used to detect the id of speaker  for the audio sample .",
      " Yes, LFCC-58.3804, was used to detect the id of speaker 7 for the audio sample .",
      " Yes, which a shap value of 0.3804, was used to detect the id of speaker 7 for the audio sample .",
      " Yes, LFCC-58, which a shap value of 0.3, was used to detect the id of speaker 7 for the audio sample .",
      " Yes, LFCC-58, was used to detect the id of speaker 7 for the audio sample .",
      " Yes, LFCC-58, which a LFCC-58 value of 0.3804, was used to detect the id of speaker 7 for the audio sample .",
      " Yes, LFCC-58, which a shap value of 0.3804, was used to detect the id of speaker LFCC-58 for the audio sample .",
      " Yes, shap, which a shap value of 0.3804, was used to detect the id of speaker 7 for the audio sample .",
      "Yes, LFCC-58, which a shap value of 0.3804, was used to detect the id of speaker 7 for the audio sample .  Yes, LFCC-58, which a shap value of 0.3804, was used to detect the id of speaker 7 for the audio sample .",
      " Yes, LFCC-58, which a sh value of 0.3804, was used to detect the id of speaker 7 for the audio sample .",
      " Yes, LFCC-58, which a shap value of 0.3804, was used to detect the id of speaker 7 for the audio sample ."
    ],
    "new_mr": "<inform> inform ( <response> response: [ yes ], <speaker_id> speaker id: [ 7 ], <feature> feature: [ LFCC-58 ], <interpreter> interpreter: [ shap ], <shap_value> shap value: [ 0.3804 ]> )"
  },
  {
    "mr": "inform(extracted[LFCC], model[CNN], important[LFCC-24], classification[replayed])",
    "ref": [
      " the audio sample had replayed features extracted and replayed-24 was determined to have a large impact on the CNN model that determined the sample to be replayed .",
      "Yes, MSRCC-2, which a shap value of -0.5591, was used to detect the sample as replayed .  the audio sample had LFCC features extracted and LFCC-24 was determined to have a large impact on the CNN model that determined the sample to be replayed .",
      " the audio sample had LFCC features extracted and LFCC-24 was determined to have a large impact on the CNN model that determined the sample to be re .",
      "the audio sample had LFCC features extracted and LFCC-24 was determined to have a large impact on the CNN model that determined the sample to be replayed .  the audio sample had LFCC features extracted and LFCC-24 was determined to have a large impact on the CNN model that determined the sample to be replayed .",
      " the audio sample had LFCC features extracted and LFCC-24 was determined to have a large impact on the CNN model that determined the sample to be CNN .",
      " the audio sample had LFCC features extracted and LFCC was determined to have a large impact on the CNN model that determined the sample to be replayed .",
      " the audio sample had LFCC features extracted and L was determined to have a large impact on the CNN model that determined the sample to be replayed .",
      " the audio sample had LFCC features extracted and LFCC-24 was determined to have a large impact on the C model that determined the sample to be replayed .",
      " the audio sample had  features extracted and -24 was determined to have a large impact on the CNN model that determined the sample to be replayed .",
      "Yes, MSRCC-2, which a shap value of -0.5591, was used to detect the sample as replayed .",
      " the audio sample had LFCC features extracted and LFCC-24 was determined to have a large impact on the CNN model that determined the sample to be replayed ."
    ],
    "new_mr": "<inform> inform ( <extracted> extracted: [ LFCC ], <model> model: [ CNN ], <important> important: [ LFCC-24 ], <classification> classification: [ replayed ]> )"
  },
  {
    "mr": "inform(extracted[PSRCC], model[CNN], important[PSRCC-4], classification[replayed])",
    "ref": [
      " the audio sample had PSRCC features extracted and PSRCC-4 was determined to have a large impact on the CNN model that determined the sample to be re .",
      "Yes, MFCC-19, which a shap value of 0.4159, was used to detect the sample as bonafide .",
      " the audio sample had PSRCC features extracted and PS was determined to have a large impact on the CNN model that determined the sample to be replayed .",
      " the audio sample had PSRCC features extracted and PSRCC-4 was determined to have a large impact on the  model that determined the sample to be replayed .",
      " the audio sample had PSRCC-4 features extracted and PSRCC-4-4 was determined to have a large impact on the CNN model that determined the sample to be replayed .",
      " the audio sample had PSRCC features extracted and PSRCC-4 was determined to have a large impact on the CNN model that determined the sample to be CNN .",
      " the audio sample had PSRCC features extracted and PSRCC-4 was determined to have a large impact on the replayed model that determined the sample to be replayed .",
      "the audio sample had PSRCC features extracted and PSRCC-4 was determined to have a large impact on the CNN model that determined the sample to be replayed .  the audio sample had PSRCC features extracted and PSRCC-4 was determined to have a large impact on the CNN model that determined the sample to be replayed .",
      " the audio sample had  features extracted and -4 was determined to have a large impact on the CNN model that determined the sample to be replayed .",
      " the audio sample had PSRCC features extracted and replayed was determined to have a large impact on the CNN model that determined the sample to be replayed .",
      " the audio sample had PSRCC features extracted and PSRCC-4 was determined to have a large impact on the CNN model that determined the sample to be replayed ."
    ],
    "new_mr": "<inform> inform ( <extracted> extracted: [ PSRCC ], <model> model: [ CNN ], <important> important: [ PSRCC-4 ], <classification> classification: [ replayed ]> )"
  },
  {
    "mr": "inform(classification[spoof], edit_type[speed])",
    "ref": [
      "It appears that part of the audio was sped up . It appears that part of the audio was sped up .",
      "The audio sample had GTCC and MFCC features extracted and passed through a trained SVM which determined the id of speaker 3 .",
      "The audio sample had GTCC and MFCC features extracted and passed through a trained SVM which determined the id of speaker 3 . It appears that part of the audio was sped up .",
      "It appears that part of the audio was sped up . It appears that part of the audio was sped up .",
      "The audio sample had GTCC and MFCC features extracted and passed through a trained SVM which determined the id of speaker 3 .",
      "The audio sample had GTCC and MFCC features extracted and passed through a trained SVM which determined the id of speaker 3 . It appears that part of the audio was sped up .",
      "It appears that part of the audio was sped up . It appears that part of the audio was sped up .",
      "The audio sample had GTCC and MFCC features extracted and passed through a trained SVM which determined the id of speaker 3 .",
      "The audio sample had GTCC and MFCC features extracted and passed through a trained SVM which determined the id of speaker 3 . It appears that part of the audio was sped up .",
      "It appears that part of the audio was sped up . It appears that part of the audio was sped up .",
      "It appears that part of the audio was sped up ."
    ],
    "new_mr": "<inform> inform ( <classification> classification: [ spoof ], <edit_type> edit type: [ speed ]> )"
  },
  {
    "mr": "inform(interpreter[shap], important[MSRCC-4], shap_value[0.7907])",
    "ref": [
      "shap determined that the MSRCC-4 feature was one of the more important features by assigning it a value of 0.7907 .  shap determined that the MSRCC-4 feature was one of the more important features by assigning it a value of 0.7907 .",
      " 0.7907 determined that the MSRCC-4 feature was one of the more important features by assigning it a value of 0.7907 .",
      "There are inconsistencies in the background noise which indicate the room changed .",
      " shap determined that the M feature was one of the more important features by assigning it a value of 0.7907 .",
      "  determined that the MSRCC-4 feature was one of the more important features by assigning it a value of 0.7907 .",
      " shap determined that the MSRCC-4 feature was one of the more important features by assigning it a value of 0.790 .",
      " shap determined that the 0.7907 feature was one of the more important features by assigning it a value of 0.7907 .",
      " shap determined that the MSRCC-4 feature was one of the more important features by assigning it a value of shap .",
      "There are inconsistencies in the background noise which indicate the room changed .  shap determined that the MSRCC-4 feature was one of the more important features by assigning it a value of 0.7907 .",
      "shap determined that the MSRCC-4 feature was one of the more important features by assigning it a value of 0.7907 .  shap determined that the MSRCC-4 feature was one of the more important features by assigning it a value of 0.7907 .",
      " shap determined that the MSRCC-4 feature was one of the more important features by assigning it a value of 0.7907 ."
    ],
    "new_mr": "<inform> inform ( <interpreter> interpreter: [ shap ], <important> important: [ MSRCC-4 ], <shap_value> shap value: [ 0.7907 ]> )"
  },
  {
    "mr": "inform(response[Yes], interpreter[shap], important[LFCC-7], classification[bonafide], shap_value[0.3274])",
    "ref": [
      " Yes, LFCC-7, which a LFCC-7 value of 0.3274, was used to detect the sample as bonafide .",
      " Yes, LFCC-7, was used to detect the sample as bonafide .",
      " Yes.3274, was used to detect the sample as bonafide .",
      " Yes, LFCC-7, which a shap value of shap, was used to detect the sample as bonafide .",
      " Yes, LFCC-7, which a shap value of 0.3274.",
      "Yes, LFCC-57, which a shap value of -0.3017, was used to detect the sample as replayed .  Yes, LFCC-7, which a shap value of 0.3274, was used to detect the sample as bonafide .",
      " Yes, LFCC-7.3274, was used to detect the sample as bonafide .",
      " bonafide, LFCC-7, which a shap value of 0.3274, was used to detect the sample as bonafide .",
      " Yes, LFCC-7, which a shap value of 0.3274, was used to detect the sample as Yes .",
      "Yes, LFCC-57, which a shap value of -0.3017, was used to detect the sample as replayed .",
      " Yes, LFCC-7, which a shap value of 0.3274, was used to detect the sample as bonafide ."
    ],
    "new_mr": "<inform> inform ( <response> response: [ Yes ], <interpreter> interpreter: [ shap ], <important> important: [ LFCC-7 ], <classification> classification: [ bonafide ], <shap_value> shap value: [ 0.3274 ]> )"
  },
  {
    "mr": "inform(general)",
    "ref": [
      "Mel Frequency Cepstral Coefficients . Mel Frequency Cepstral Coefficients .",
      "the audio sample had PSRCC features extracted and PSRCC-8 was determined to have a large impact on the CNN model that determined the sample to be replayed .",
      "the audio sample had PSRCC features extracted and PSRCC-8 was determined to have a large impact on the CNN model that determined the sample to be replayed . Mel Frequency Cepstral Coefficients .",
      "Mel Frequency Cepstral Coefficients . Mel Frequency Cepstral Coefficients .",
      "the audio sample had PSRCC features extracted and PSRCC-8 was determined to have a large impact on the CNN model that determined the sample to be replayed .",
      "the audio sample had PSRCC features extracted and PSRCC-8 was determined to have a large impact on the CNN model that determined the sample to be replayed . Mel Frequency Cepstral Coefficients .",
      "Mel Frequency Cepstral Coefficients . Mel Frequency Cepstral Coefficients .",
      "the audio sample had PSRCC features extracted and PSRCC-8 was determined to have a large impact on the CNN model that determined the sample to be replayed .",
      "the audio sample had PSRCC features extracted and PSRCC-8 was determined to have a large impact on the CNN model that determined the sample to be replayed . Mel Frequency Cepstral Coefficients .",
      "Mel Frequency Cepstral Coefficients . Mel Frequency Cepstral Coefficients .",
      "Mel Frequency Cepstral Coefficients ."
    ],
    "new_mr": "<inform> inform ( > )"
  },
  {
    "mr": "inform(response[yes], speaker_id[5], feature[LFCC-21], interpreter[shap], shap_value[-0.6054])",
    "ref": [
      " Yes, person 5 was detected by -0.6054 with a shap value of -0.6054 .",
      " Yes.6054 .",
      " Yes, person -0.6054 was detected by LFCC-21 with a shap value of -0.60-0.60544 .",
      " Yes, person 5 was detected by LFCC-21 with a shap value of yes .",
      "Yes, person 5 was detected by LFCC-21 with a shap value of -0.6054 .  Yes, person 5 was detected by LFCC-21 with a shap value of -0.6054 .",
      " Yes, person 5 was detected by LFCC-21 with a shap value of -0 .",
      " Yes, person 5 was detected by LFCC-21 with a yes value of -0.6054 .",
      " Yes, person  was detected by LFCC-21 with a shap value of -0.604 .",
      " Yes, person 5 was detected by LFC with a shap value of -0.6054 .",
      "Most of the recording was not made with a mobile phone .  Yes, person 5 was detected by LFCC-21 with a shap value of -0.6054 .",
      " Yes, person 5 was detected by LFCC-21 with a shap value of -0.6054 ."
    ],
    "new_mr": "<inform> inform ( <response> response: [ yes ], <speaker_id> speaker id: [ 5 ], <feature> feature: [ LFCC-21 ], <interpreter> interpreter: [ shap ], <shap_value> shap value: [ -0.6054 ]> )"
  },
  {
    "mr": "inform(interpreter[shap], important[MFCC-14], shap_value[-0.1931])",
    "ref": [
      " MFCC-14 determined that the MFCC-14 feature was one of the more important features by assigning it a value of -0.1931 .",
      "No .",
      " shap determined that the MFCC-14 feature was one of the more important features by assigning it a value of - .",
      " shap determined that the shap feature was one of the more important features by assigning it a value of -0.1931 .",
      "No .  shap determined that the MFCC-14 feature was one of the more important features by assigning it a value of -0.1931 .",
      "  determined that the MFCC-14 feature was one of the more important features by assigning it a value of -0.1931 .",
      " shap determined that the MFCC feature was one of the more important features by assigning it a value of -0.1931 .",
      " shap determined that the MFCC-14 feature was one of the more important features by assigning it a value of shap .",
      "shap determined that the MFCC-14 feature was one of the more important features by assigning it a value of -0.1931 .  shap determined that the MFCC-14 feature was one of the more important features by assigning it a value of -0.1931 .",
      " MFCC-14 determined that the MFCC-14 feature was one of the more important features by assigning it a value of -0.1931 .",
      " shap determined that the MFCC-14 feature was one of the more important features by assigning it a value of -0.1931 ."
    ],
    "new_mr": "<inform> inform ( <interpreter> interpreter: [ shap ], <important> important: [ MFCC-14 ], <shap_value> shap value: [ -0.1931 ]> )"
  },
  {
    "mr": "inform(response[Yes], classification[spoofed], spoof_type[cloning])",
    "ref": [
      "Ye , voice cloning was used .",
      "cloning , voice cloning was used .",
      "Yes , voice Yes was used .",
      "The audio sample had GTCC and MFCC features extracted and passed through a trained SVM which determined the id of speaker 8 .",
      "Yes , voice cloning was used . Yes , voice cloning was used .",
      "Yes , voice  was used .",
      "Yes .",
      "The audio sample had GTCC and MFCC features extracted and passed through a trained SVM which determined the id of speaker 8 . Yes , voice cloning was used .",
      "Ye , voice cloning was used .",
      "cloning , voice cloning was used .",
      "Yes , voice cloning was used ."
    ],
    "new_mr": "<inform> inform ( <response> response: [ Yes ], <classification> classification: [ spoofed ], <spoof_type> spoof type: [ cloning ]> )"
  },
  {
    "mr": "inform(classification[spoof], edit_type[multi_speaker], speaker_quantity[2], speaker_start[30])",
    "ref": [
      "The next person starts speaking at 30 seconds . The next person starts speaking at 30 seconds .",
      "The next person starts speaking at spoof seconds . ",
      "Yes, the recording was found to be spoofed.",
      "Yes, the recording was found to be spoofed. The next person starts speaking at 30 seconds .",
      "The next person starts speaking at  seconds . ",
      "The next person starts speaking at 30 seconds . The next person starts speaking at 30 seconds .",
      "The next person starts speaking at spoof seconds . ",
      "Yes, the recording was found to be spoofed.",
      "Yes, the recording was found to be spoofed. The next person starts speaking at 30 seconds .",
      "The next person starts speaking at  seconds . ",
      "The next person starts speaking at 30 seconds . "
    ],
    "new_mr": "<inform> inform ( <classification> classification: [ spoof ], <edit_type> edit type: [ multi_speaker ], <speaker_quantity> speaker quantity: [ 2 ], <speaker_start> speaker start: [ 30 ]> )"
  },
  {
    "mr": "inform(response[Yes], interpreter[shap], important[MSRCC-6], classification[replayed], shap_value[0.5663])",
    "ref": [
      " Yes, MSRCC-6, which a shap value of Yes, was used to detect the sample as replayed .",
      " Yes, MSRCC-6, which a shap value of 0.5663, was used to detect the sample as  .",
      " Yes, MSRCC-6, which a shap value of 0.5663.",
      " Yes, MSRCC-6, which a sh value of 0.5663, was used to detect the sample as replayed .",
      " Y, MSRCC-6, which a shap value of 0.5663, was used to detect the sample as replayed .",
      "Yes, LFCC-52, which a shap value of -0.7766, was used to detect the id of speaker 1 for the audio sample .",
      " Yes, MSRCC-6, which a MSRCC-6 value of 0.5663, was used to detect the sample as replayed .",
      "Yes, MSRCC-6, which a shap value of 0.5663, was used to detect the sample as replayed .  Yes, MSRCC-6, which a shap value of 0.5663, was used to detect the sample as replayed .",
      " shap, MSRCC-6, which a shap value of 0.5663, was used to detect the sample as replayed .",
      " Yes, 0.5663, which a shap value of 0.5663, was used to detect the sample as replayed .",
      " Yes, MSRCC-6, which a shap value of 0.5663, was used to detect the sample as replayed ."
    ],
    "new_mr": "<inform> inform ( <response> response: [ Yes ], <interpreter> interpreter: [ shap ], <important> important: [ MSRCC-6 ], <classification> classification: [ replayed ], <shap_value> shap value: [ 0.5663 ]> )"
  },
  {
    "mr": "inform(response[Yes], interpreter[shap], important[MSRCC-4], classification[bonafide], shap_value[0.665])",
    "ref": [
      " Yes, 0.665, which a shap value of 0.665, was used to detect the sample as bonafide .",
      "Yes, MSRCC-4, which a shap value of 0.665, was used to detect the sample as bonafide .  Yes, MSRCC-4, which a shap value of 0.665, was used to detect the sample as bonafide .",
      " Yes, MS, which a shap value of 0.665, was used to detect the sample as bonafide .",
      " Yes, MSRCC-4.665, was used to detect the sample as bonafide .",
      " Yes, MSRCC-4, which a shap value of 0.665.",
      " Yes, MSRCC-4, which a Yes value of 0.665, was used to detect the sample as bonafide .",
      "yes, MFCC-3 was used to determine speaker id .",
      " Yes, MSRCC-4, was used to detect the sample as bonafide .",
      " Yes, which a shap value of 0.665, was used to detect the sample as bonafide .",
      " Yes.665, was used to detect the sample as bonafide .",
      " Yes, MSRCC-4, which a shap value of 0.665, was used to detect the sample as bonafide ."
    ],
    "new_mr": "<inform> inform ( <response> response: [ Yes ], <interpreter> interpreter: [ shap ], <important> important: [ MSRCC-4 ], <classification> classification: [ bonafide ], <shap_value> shap value: [ 0.665 ]> )"
  },
  {
    "mr": "inform(classification[spoof], edit_type[conversion])",
    "ref": [
      "The audio is converted . The audio is converted .",
      "person 8 was detected as the primary speaker of the audio sample .",
      "person 8 was detected as the primary speaker of the audio sample . The audio is converted .",
      "The audio is converted . The audio is converted .",
      "person 8 was detected as the primary speaker of the audio sample .",
      "person 8 was detected as the primary speaker of the audio sample . The audio is converted .",
      "The audio is converted . The audio is converted .",
      "person 8 was detected as the primary speaker of the audio sample .",
      "person 8 was detected as the primary speaker of the audio sample . The audio is converted .",
      "The audio is converted . The audio is converted .",
      "The audio is converted ."
    ],
    "new_mr": "<inform> inform ( <classification> classification: [ spoof ], <edit_type> edit type: [ conversion ]> )"
  },
  {
    "mr": "inform(response[Yes], interpreter[shap], important[MFCC-32], classification[bonafide], shap_value[-0.2438])",
    "ref": [
      " , MFCC-32, which a shap value of -0.2438, was used to detect the sample as bonafide .",
      " Yes, MFCC, which a shap value of -0.2438, was used to detect the sample as bonafide .",
      " Yes, MFCC-32, which a shap value of -0.2438.",
      " Yes, MFCC-32, which a Yes value of -0.2438, was used to detect the sample as bonafide .",
      " Yes, MFCC-32, which a shap value of -0.2438, was used to detect the sample as Yes .",
      " Yes, MFCC-32, which a shap value of -0.2438, was used to detect the sample as bona .",
      " Yes, MFCC-32.2438, was used to detect the sample as bonafide .",
      " Yes, MFCC-32, which a shap value of MFCC-32, was used to detect the sample as bonafide .",
      " Yes, MFCC-32, which a shap value of -0.2, was used to detect the sample as bonafide .",
      "Yes, MSRCC-7, which a shap value of -0.2973, was used to detect the sample as bonafide .",
      " Yes, MFCC-32, which a shap value of -0.2438, was used to detect the sample as bonafide ."
    ],
    "new_mr": "<inform> inform ( <response> response: [ Yes ], <interpreter> interpreter: [ shap ], <important> important: [ MFCC-32 ], <classification> classification: [ bonafide ], <shap_value> shap value: [ -0.2438 ]> )"
  },
  {
    "mr": "inform(classification[bonafide], edit_type[none])",
    "ref": [
      "The spoofed audio was a Replayed sample . ",
      "Mel Frequency Cepstral Coefficients . The spoofed audio was not a Replayed sample .",
      "The spoofed audio was not a Replayed sample . The spoofed audio was not a Replayed sample .",
      "Mel Frequency Cepstral Coefficients .",
      "The spoofed audio was a Replayed sample . ",
      "Mel Frequency Cepstral Coefficients . The spoofed audio was not a Replayed sample .",
      "The spoofed audio was not a Replayed sample . The spoofed audio was not a Replayed sample .",
      "Mel Frequency Cepstral Coefficients .",
      "The spoofed audio was a Replayed sample . ",
      "Mel Frequency Cepstral Coefficients . The spoofed audio was not a Replayed sample .",
      "The spoofed audio was not a Replayed sample . "
    ],
    "new_mr": "<inform> inform ( <classification> classification: [ bonafide ], <edit_type> edit type: [ none ]> )"
  },
  {
    "mr": "inform(classification[bonafide], edit_type[none], classified_by[feature])",
    "ref": [
      "the audio sample had LFCC features extracted and LFCC-7 was determined to have a large impact on the CNN model that determined the sample to be replayed . SHAP determined that CQCC-2, MFCC-6, LFCC-0, MFCC-1 had the highest impact on classification .",
      "SHAP determined that CQCC-2, MFCC-6, LFCC-0, MFCC-1 had the highest impact on classification . SHAP determined that CQCC-2, MFCC-6, LFCC-0, MFCC-1 had the highest impact on classification .",
      "the audio sample had LFCC features extracted and LFCC-7 was determined to have a large impact on the CNN model that determined the sample to be replayed .",
      "SHAP determined that CQCC-2, MFCC-6, MFCC-1 had the highest impact on classification .",
      "SHAP determined that CQCC-2.",
      "SHAP determined that CQCC-2, LFCC-0, MFCC-1 had the highest impact on classification .",
      "SHAP determined that CQCC-2, MFCC-6.",
      "SHAP determined that CQCC-2, MFCC-6, LFCC-0.",
      "the audio sample had LFCC features extracted and LFCC-7 was determined to have a large impact on the CNN model that determined the sample to be replayed . SHAP determined that CQCC-2, MFCC-6, LFCC-0, MFCC-1 had the highest impact on classification .",
      "SHAP determined that CQCC-2, MFCC-6, LFCC-0, MFCC-1 had the highest impact on classification . SHAP determined that CQCC-2, MFCC-6, LFCC-0, MFCC-1 had the highest impact on classification .",
      "SHAP determined that CQCC-2, MFCC-6, LFCC-0, MFCC-1 had the highest impact on classification ."
    ],
    "new_mr": "<inform> inform ( <classification> classification: [ bonafide ], <edit_type> edit type: [ none ], <classified_by> classified by: [ feature ]> )"
  },
  {
    "mr": "inform(interpreter[shap], important[LFCC-59], shap_value[0.8351])",
    "ref": [
      "shap determined that the LFCC-59 feature was one of the more important features by assigning it a value of 0.8351 .  shap determined that the LFCC-59 feature was one of the more important features by assigning it a value of 0.8351 .",
      "shap determined that the MFCC-0 feature was one of the more important features by assigning it a value of -0.3268 .",
      " 0.8351 determined that the LFCC-59 feature was one of the more important features by assigning it a value of 0.8351 .",
      " shap determined that the LFCC-59 feature was one of the more important features by assigning it a value of LFCC-59 .",
      " shap determined that the 0.8351 feature was one of the more important features by assigning it a value of 0.8351 .",
      " shap determined that the LFCC-59 feature was one of the more important features by assigning it a value of 0.835 .",
      "  determined that the LFCC-59 feature was one of the more important features by assigning it a value of 0.8351 .",
      " shap determined that the LFCC-5 feature was one of the more important features by assigning it a value of 0.8351 .",
      "shap determined that the MFCC-0 feature was one of the more important features by assigning it a value of -0.3268 .  shap determined that the LFCC-59 feature was one of the more important features by assigning it a value of 0.8351 .",
      "shap determined that the LFCC-59 feature was one of the more important features by assigning it a value of 0.8351 .  shap determined that the LFCC-59 feature was one of the more important features by assigning it a value of 0.8351 .",
      " shap determined that the LFCC-59 feature was one of the more important features by assigning it a value of 0.8351 ."
    ],
    "new_mr": "<inform> inform ( <interpreter> interpreter: [ shap ], <important> important: [ LFCC-59 ], <shap_value> shap value: [ 0.8351 ]> )"
  },
  {
    "mr": "inform(interpreter[shap], important[MSRCC-8], shap_value[0.7203])",
    "ref": [
      " shap determined that the MSRCC-8 feature was one of the more important features by assigning it a value of 0.7 .",
      " shap determined that the 0.7203 feature was one of the more important features by assigning it a value of 0.7203 .",
      "  determined that the MSRCC-8 feature was one of the more important features by assigning it a value of 0.7203 .",
      "shap determined that the MSRCC-8 feature was one of the more important features by assigning it a value of 0.7203 .  shap determined that the MSRCC-8 feature was one of the more important features by assigning it a value of 0.7203 .",
      "The SHAP values indicate the contribution of the features on the outcome of the classification model .",
      " shap determined that the MSRCC-8 feature was one of the more important features by assigning it a value of MSRCC-8 .",
      " shap determined that the MSRCC- feature was one of the more important features by assigning it a value of 0.7203 .",
      " MSRCC-8 determined that the MSRCC-8 feature was one of the more important features by assigning it a value of 0.7203 .",
      "The SHAP values indicate the contribution of the features on the outcome of the classification model .  shap determined that the MSRCC-8 feature was one of the more important features by assigning it a value of 0.7203 .",
      " shap determined that the MSRCC-8 feature was one of the more important features by assigning it a value of 0.7 .",
      " shap determined that the MSRCC-8 feature was one of the more important features by assigning it a value of 0.7203 ."
    ],
    "new_mr": "<inform> inform ( <interpreter> interpreter: [ shap ], <important> important: [ MSRCC-8 ], <shap_value> shap value: [ 0.7203 ]> )"
  },
  {
    "mr": "inform(response[yes], speaker_id[3], feature[GTCC-6], interpreter[shap], shap_value[0])",
    "ref": [
      " Yes, person 3 was detected by GTCC-6 with a shap value of  .",
      " Yes, person 3 was detected by GTCC-6 with a 0 value of 0 .",
      " Yes.",
      "Yes, person 3 was detected by GTCC-6 with a shap value of 0 .  Yes, person 3 was detected by GTCC-6 with a shap value of 0 .",
      " Yes, person 3 was detected by shap with a shap value of 0 .",
      " Yes, person 3 was detected by GTCC-6 with a sha value of 0 .",
      " Yes, person 3 was detected by GTCC-6 with a shap value of yes .",
      " Yes, person  was detected by GTCC-6 with a shap value of 0 .",
      "It was altered using software .",
      "It was altered using software .  Yes, person 3 was detected by GTCC-6 with a shap value of 0 .",
      " Yes, person 3 was detected by GTCC-6 with a shap value of 0 ."
    ],
    "new_mr": "<inform> inform ( <response> response: [ yes ], <speaker_id> speaker id: [ 3 ], <feature> feature: [ GTCC-6 ], <interpreter> interpreter: [ shap ], <shap_value> shap value: [ 0 ]> )"
  },
  {
    "mr": "inform(response[yes], speaker_id[6], feature[MFCC-30], interpreter[shap], shap_value[-0.8651])",
    "ref": [
      " Yes, person -0.8651 was detected by MFCC-30 with a shap value of -0.8-0.865151 .",
      " Yes, person 6 was detected by MFCC- with a shap value of -0.8651 .",
      " Yes, person  was detected by MFCC-30 with a shap value of -0.851 .",
      " Yes, person 6 was detected by MFCC-30 with a MFCC-30 value of -0.8651 .",
      " Yes, person 6 was detected by shap with a shap value of -0.8651 .",
      "Yes, person 6 was detected by MFCC-30 with a shap value of -0.8651 .  Yes, person 6 was detected by MFCC-30 with a shap value of -0.8651 .",
      " Yes.8651 .",
      "Yes, PSRCC-7, which a shap value of -0.9946, was used to detect the sample as bonafide .",
      "Yes, PSRCC-7, which a shap value of -0.9946, was used to detect the sample as bonafide .  Yes, person 6 was detected by MFCC-30 with a shap value of -0.8651 .",
      " Yes, person 6 was detected by MFCC-30 with a shap value of -0 .",
      " Yes, person 6 was detected by MFCC-30 with a shap value of -0.8651 ."
    ],
    "new_mr": "<inform> inform ( <response> response: [ yes ], <speaker_id> speaker id: [ 6 ], <feature> feature: [ MFCC-30 ], <interpreter> interpreter: [ shap ], <shap_value> shap value: [ -0.8651 ]> )"
  },
  {
    "mr": "inform(response[Yes], interpreter[shap], important[MSRCC-3], classification[replayed], shap_value[0.2359])",
    "ref": [
      " Yes, replayed, which a shap value of 0.2359, was used to detect the sample as replayed .",
      "Yes, LFCC-32, which a shap value of -0.3151, was used to detect the sample as replayed .  Yes, MSRCC-3, which a shap value of 0.2359, was used to detect the sample as replayed .",
      "Yes, LFCC-32, which a shap value of -0.3151, was used to detect the sample as replayed .",
      " Yes, MSRCC-3, which a s value of 0.2359, was used to detect the sample as replayed .",
      " Yes, MSRCC-3, which a shap value of shap, was used to detect the sample as replayed .",
      " Yes, MSRC, which a shap value of 0.2359, was used to detect the sample as replayed .",
      "Yes, MSRCC-3, which a shap value of 0.2359, was used to detect the sample as replayed .  Yes, MSRCC-3, which a shap value of 0.2359, was used to detect the sample as replayed .",
      " Yes, MSRCC-3, which a 0.2359 value of 0.2359, was used to detect the sample as replayed .",
      " Yes, MSRCC-3, which a shap value of 0.2359, was used to detect the sample as r .",
      " Yes, MSRCC-3, which a shap value of 0, was used to detect the sample as replayed .",
      " Yes, MSRCC-3, which a shap value of 0.2359, was used to detect the sample as replayed ."
    ],
    "new_mr": "<inform> inform ( <response> response: [ Yes ], <interpreter> interpreter: [ shap ], <important> important: [ MSRCC-3 ], <classification> classification: [ replayed ], <shap_value> shap value: [ 0.2359 ]> )"
  },
  {
    "mr": "inform(extracted[LFCC], model[CNN], important[LFCC-45], classification[replayed])",
    "ref": [
      "The recording file was classified as being synthetic by a CNN model .  the audio sample had LFCC features extracted and LFCC-45 was determined to have a large impact on the CNN model that determined the sample to be replayed .",
      "the audio sample had LFCC features extracted and LFCC-45 was determined to have a large impact on the CNN model that determined the sample to be replayed .  the audio sample had LFCC features extracted and LFCC-45 was determined to have a large impact on the CNN model that determined the sample to be replayed .",
      " the audio sample had  features extracted and -45 was determined to have a large impact on the CNN model that determined the sample to be replayed .",
      "The recording file was classified as being synthetic by a CNN model .",
      " the audio sample had LFCC features extracted and LFCC-45 was determined to have a large impact on the CN model that determined the sample to be replayed .",
      " the audio sample had LFCC features extracted and LFCC-45 was determined to have a large impact on the CNN model that determined the sample to be r .",
      " the audio sample had LFCC features extracted and LF was determined to have a large impact on the CNN model that determined the sample to be replayed .",
      " the audio sample had LFCC features extracted and LFCC-45 was determined to have a large impact on the CNN model that determined the sample to be CNN .",
      " the audio sample had LFCC-45 features extracted and LFCC-45-45 was determined to have a large impact on the CNN model that determined the sample to be replayed .",
      " the audio sample had LFCC features extracted and CNN was determined to have a large impact on the CNN model that determined the sample to be replayed .",
      " the audio sample had LFCC features extracted and LFCC-45 was determined to have a large impact on the CNN model that determined the sample to be replayed ."
    ],
    "new_mr": "<inform> inform ( <extracted> extracted: [ LFCC ], <model> model: [ CNN ], <important> important: [ LFCC-45 ], <classification> classification: [ replayed ]> )"
  },
  {
    "mr": "inform(general)",
    "ref": [
      "Spectral centroid magnitude ( SCM ) is the weighted average magnitude for a given subband . SCM captures, to a first order approximation , the distribution of energy in a subband for two arbitrary signals with the same average energy . Due to the weighting function, the two signals would each be represented by different SCF and SCM values . The different steepness of the weighting function with respect to the subband bandwidth may also be noted; this results in different feature element variances . As the spectral centroid magnitude is the magnitude at the position of the spectral centroid frequency , it will carry formant related information which is useful for speaker recognition .",
      "Spectral centroid magnitude ( SCM ) is the weighted average magnitude for a given subband , where the weights are the frequency of each magnitude component in that subband . SCM captures, the distribution of energy in a subband for two arbitrary signals with the same average energy . Due to the weighting function, the two signals would each be represented by different SCF and SCM values . The different steepness of the weighting function with respect to the subband bandwidth may also be noted; this results in different feature element variances . As the spectral centroid magnitude is the magnitude at the position of the spectral centroid frequency , it will carry formant related information which is useful for speaker recognition .",
      "Spectral centroid magnitude ( SCM ) is the weighted average magnitude for a given subband , where the weights are the frequency of each magnitude component in that subband . SCM captures, to a first order approximation , the distribution of energy in a subband for two arbitrary signals with the same average energy . Due to the weighting function. The different steepness of the weighting function with respect to the subband bandwidth may also be noted; this results in different feature element variances . As the spectral centroid magnitude is the magnitude at the position of the spectral centroid frequency , it will carry formant related information which is useful for speaker recognition .",
      "Spectral centroid magnitude ( SCM ) is the weighted average magnitude for a given subband , where the weights are the frequency of each magnitude component in that subband . SCM captures, to a first order approximation , the distribution of energy in a subband for two arbitrary signals with the same average energy .  Yes, LFCC-22, which a shap value of 0.752, was used to detect the sample as replayed . The different steepness of the weighting function with respect to the subband bandwidth may also be noted; this results in different feature element variances .  Yes, LFCC-22, which a shap value of 0.752, was used to detect the sample as replayed .",
      "Due to the weighting function, the two signals would each be represented by different SCF and SCM values . Due to the weighting function, the two signals would each be represented by different SCF and SCM values . Spectral centroid magnitude ( SCM ) is the weighted average magnitude for a given subband , where the weights are the frequency of each magnitude component in that subband . SCM captures, to a first order approximation , the distribution of energy in a subband for two arbitrary signals with the same average energy . Due to the weighting function, the two signals would each be represented by different SCF and SCM values . Due to the weighting function, the two signals would each be represented by different SCF and SCM values . Due to the weighting function, the two signals would each be represented by different SCF and SCM values . The different steepness of the weighting function with respect to the subband bandwidth may also be noted; this results in different feature element variances . As the spectral centroid magnitude is the magnitude at the position of the spectral centroid frequency , it will carry formant related information which is useful for speaker recognition .",
      "Spectral centroid magnitude ( SCM ) is the weighted average magnitude for a given subband , where the weights are the frequency of each magnitude component in that subband . SCM captures, to a first order approximation , the distribution of energy in a subband for two arbitrary signals with the same average energy . Due to the weighting function, it will carry formant related information which is useful for speaker recognition .",
      "Spectral centroid magnitude ( SCM ) is the weighted average magnitude for a given subband , where the weights are the frequency of each magnitude component in that subband .  Yes, LFCC-22, which a shap value of 0.752, was used to detect the sample as replayed . SCM captures, to a first order approximation , the distribution of energy in a subband for two arbitrary signals with the same average energy .  Yes, LFCC-22, which a shap value of 0.752, was used to detect the sample as replayed .  Yes, LFCC-22, which a shap value of 0.752, was used to detect the sample as replayed . Due to the weighting function, the two signals would each be represented by different SCF and SCM values . The different steepness of the weighting function with respect to the subband bandwidth may also be noted; this results in different feature element variances .  Yes, LFCC-22, which a shap value of 0.752, was used to detect the sample as replayed . As the spectral centroid magnitude is the magnitude at the position of the spectral centroid frequency , it will carry formant related information which is useful for speaker recognition .",
      "Spectral centroid magnitude ( SCM ) is the weighted average magnitude for a given subband , where the weights are the frequency of each magnitude component in that subband . SCM captures, to a first order approximation . Due to the weighting function, the two signals would each be represented by different SCF and SCM values . The different steepness of the weighting function with respect to the subband bandwidth may also be noted; this results in different feature element variances . As the spectral centroid magnitude is the magnitude at the position of the spectral centroid frequency , it will carry formant related information which is useful for speaker recognition .",
      "Spectral centroid magnitude ( SCM ) is the weighted average magnitude for a given subband , where the weights are the frequency of each magnitude component in that subband . SCM captures, to a first order approximation , the distribution of energy in a subband for two arbitrary signals with the same average energy . Due to the weighting function, the two signals would each be represented by different SCF and SCM values . The different steepness of the weighting function with respect to the subband bandwidth may also be noted; this results in different feature element variances .",
      "Yes, LFCC-22, which a shap value of 0.752, was used to detect the sample as replayed . Spectral centroid magnitude ( SCM ) is the weighted average magnitude for a given subband , where the weights are the frequency of each magnitude component in that subband .  Yes, LFCC-22, which a shap value of 0.752, was used to detect the sample as replayed . SCM captures, to a first order approximation , the distribution of energy in a subband for two arbitrary signals with the same average energy .  Yes, LFCC-22, which a shap value of 0.752, was used to detect the sample as replayed .  Yes, LFCC-22, which a shap value of 0.752, was used to detect the sample as replayed . Due to the weighting function, the two signals would each be represented by different SCF and SCM values . The different steepness of the weighting function with respect to the subband bandwidth may also be noted; this results in different feature element variances .  Yes, LFCC-22, which a shap value of 0.752, was used to detect the sample as replayed . As the spectral centroid magnitude is the magnitude at the position of the spectral centroid frequency , it will carry formant related information which is useful for speaker recognition .",
      "Spectral centroid magnitude ( SCM ) is the weighted average magnitude for a given subband , where the weights are the frequency of each magnitude component in that subband . SCM captures, to a first order approximation , the distribution of energy in a subband for two arbitrary signals with the same average energy . Due to the weighting function, the two signals would each be represented by different SCF and SCM values . The different steepness of the weighting function with respect to the subband bandwidth may also be noted; this results in different feature element variances . As the spectral centroid magnitude is the magnitude at the position of the spectral centroid frequency , it will carry formant related information which is useful for speaker recognition ."
    ],
    "new_mr": "<inform> inform ( > )"
  },
  {
    "mr": "inform(response[yes], speaker_id[4], feature[MFCC-38], interpreter[shap], shap_value[-0.1123])",
    "ref": [
      "Yes, person 3 was detected by LFCC-5 with a shap value of 0.9355 .  Yes, MFCC-38, which a shap value of -0.1123, was used to detect the id of speaker 4 for the audio sample .",
      " Yes, MFCC-38, which a shap value of -0., was used to detect the id of speaker 4 for the audio sample .",
      " Yes, MFCC-38, was used to detect the id of speaker 4 for the audio sample .",
      " Yes, MFCC-38.1123, was used to detect the id of speaker 4 for the audio sample .",
      " Yes, which a shap value of -0.1123, was used to detect the id of speaker 4 for the audio sample .",
      "Yes, person 3 was detected by LFCC-5 with a shap value of 0.9355 .",
      " Yes, MFCC-38, which a  value of -0.1123, was used to detect the id of speaker 4 for the audio sample .",
      " Yes, MFCC-38, which a shap value of -0.1123.",
      "Yes, MFCC-38, which a shap value of -0.1123, was used to detect the id of speaker 4 for the audio sample .  Yes, MFCC-38, which a shap value of -0.1123, was used to detect the id of speaker 4 for the audio sample .",
      " Yes, 4, which a shap value of -0.1123, was used to detect the id of speaker 4 for the audio sample .",
      " Yes, MFCC-38, which a shap value of -0.1123, was used to detect the id of speaker 4 for the audio sample ."
    ],
    "new_mr": "<inform> inform ( <response> response: [ yes ], <speaker_id> speaker id: [ 4 ], <feature> feature: [ MFCC-38 ], <interpreter> interpreter: [ shap ], <shap_value> shap value: [ -0.1123 ]> )"
  },
  {
    "mr": "inform(response[Yes], interpreter[shap], important[MFCC-35], classification[bonafide], shap_value[-0.6957])",
    "ref": [
      "the audio sample had MSRCC features extracted and MSRCC-3 was determined to have a large impact on the CNN model that determined the sample to be replayed .  Yes, MFCC-35, which a shap value of -0.6957, was used to detect the sample as bonafide .",
      " Yes, MFCC-35, which a shap value of -0, was used to detect the sample as bonafide .",
      " Yes, MFCC-35, which a shap value of -0.6957, was used to detect the sample as bona .",
      " -0.6957, MFCC-35, which a shap value of -0.6957, was used to detect the sample as bonafide .",
      " Yes, MFCC-35, was used to detect the sample as bonafide .",
      " Yes, which a shap value of -0.6957, was used to detect the sample as bonafide .",
      " Yes, -0.6957, which a shap value of -0.6957, was used to detect the sample as bonafide .",
      " Yes, MFCC-35, which a shap value of -0.6957.",
      " Yes, MFCC-35, which a sh value of -0.6957, was used to detect the sample as bonafide .",
      "the audio sample had MSRCC features extracted and MSRCC-3 was determined to have a large impact on the CNN model that determined the sample to be replayed .",
      " Yes, MFCC-35, which a shap value of -0.6957, was used to detect the sample as bonafide ."
    ],
    "new_mr": "<inform> inform ( <response> response: [ Yes ], <interpreter> interpreter: [ shap ], <important> important: [ MFCC-35 ], <classification> classification: [ bonafide ], <shap_value> shap value: [ -0.6957 ]> )"
  },
  {
    "mr": "inform(classification[spoof], edit_type[computer])",
    "ref": [
      "It seems like a com was used .",
      "shap determined that the MFCC-0 feature was one of the more important features by assigning it a value of -0.3268 .",
      "It seems like a spoof was used .",
      "shap determined that the MFCC-0 feature was one of the more important features by assigning it a value of -0.3268 . It seems like a computer was used .",
      "It seems like a computer was used . It seems like a computer was used .",
      "It seems like a com was used .",
      "shap determined that the MFCC-0 feature was one of the more important features by assigning it a value of -0.3268 .",
      "It seems like a spoof was used .",
      "shap determined that the MFCC-0 feature was one of the more important features by assigning it a value of -0.3268 . It seems like a computer was used .",
      "It seems like a computer was used . It seems like a computer was used .",
      "It seems like a computer was used ."
    ],
    "new_mr": "<inform> inform ( <classification> classification: [ spoof ], <edit_type> edit type: [ computer ]> )"
  },
  {
    "mr": "inform(response[Yes], interpreter[shap], important[LFCC-25], classification[replayed], shap_value[0.2955])",
    "ref": [
      " Yes, LFCC-25, which a Yes value of 0.2955, was used to detect the sample as replayed .",
      " Yes, LFCC-25, which a shap value of 0.2955.",
      " Yes, LFCC-25.2955, was used to detect the sample as replayed .",
      " , LFCC-25, which a shap value of 0.2955, was used to detect the sample as replayed .",
      " Yes, LFCC-25, which a shap value of shap, was used to detect the sample as replayed .",
      " replayed, LFCC-25, which a shap value of 0.2955, was used to detect the sample as replayed .",
      " Yes, which a shap value of 0.2955, was used to detect the sample as replayed .",
      " Yes.2955, was used to detect the sample as replayed .",
      " Yes, LFCC-25, was used to detect the sample as replayed .",
      "It is not a bona fide audio .  Yes, LFCC-25, which a shap value of 0.2955, was used to detect the sample as replayed .",
      " Yes, LFCC-25, which a shap value of 0.2955, was used to detect the sample as replayed ."
    ],
    "new_mr": "<inform> inform ( <response> response: [ Yes ], <interpreter> interpreter: [ shap ], <important> important: [ LFCC-25 ], <classification> classification: [ replayed ], <shap_value> shap value: [ 0.2955 ]> )"
  },
  {
    "mr": "inform(classification[spoof], edit_type[computer])",
    "ref": [
      "the audio sample was used in a CNN model tasked at detecting if an audio sample is bonafide or spoofed .",
      "The recording has been tampered with . The recording has been tampered with .",
      "the audio sample was used in a CNN model tasked at detecting if an audio sample is bonafide or spoofed . The recording has been tampered with .",
      "the audio sample was used in a CNN model tasked at detecting if an audio sample is bonafide or spoofed .",
      "The recording has been tampered with . The recording has been tampered with .",
      "the audio sample was used in a CNN model tasked at detecting if an audio sample is bonafide or spoofed . The recording has been tampered with .",
      "the audio sample was used in a CNN model tasked at detecting if an audio sample is bonafide or spoofed .",
      "The recording has been tampered with . The recording has been tampered with .",
      "the audio sample was used in a CNN model tasked at detecting if an audio sample is bonafide or spoofed . The recording has been tampered with .",
      "the audio sample was used in a CNN model tasked at detecting if an audio sample is bonafide or spoofed .",
      "The recording has been tampered with ."
    ],
    "new_mr": "<inform> inform ( <classification> classification: [ spoof ], <edit_type> edit type: [ computer ]> )"
  },
  {
    "mr": "inform(classification[bonafide], model[CNN])",
    "ref": [
      "The recording file was classified as being bo by a CNN model .",
      "The recording file was classified as being bonafide by a CNN model . The recording file was classified as being bonafide by a CNN model .",
      "The recording file was classified as being bonafide by a bonafide model .",
      "shap determined that the LFCC-51 feature was one of the more important features by assigning it a value of -0.7772 . The recording file was classified as being bonafide by a CNN model .",
      "The recording file was classified as being bonafide by a CN model .",
      "shap determined that the LFCC-51 feature was one of the more important features by assigning it a value of -0.7772 .",
      "The recording file was classified as being CNN by a CNN model .",
      "The recording file was classified as being bo by a CNN model .",
      "The recording file was classified as being bonafide by a CNN model . The recording file was classified as being bonafide by a CNN model .",
      "The recording file was classified as being bonafide by a bonafide model .",
      "The recording file was classified as being bonafide by a CNN model ."
    ],
    "new_mr": "<inform> inform ( <classification> classification: [ bonafide ], <model> model: [ CNN ]> )"
  },
  {
    "mr": "inform(response[Yes], interpreter[shap], important[MFCC-0], classification[replayed], shap_value[0.3118])",
    "ref": [
      "Yes, person 3 was detected by MFCC-16 with a shap value of 0.0302 .  Yes, MFCC-0, which a shap value of 0.3118, was used to detect the sample as replayed .",
      " Ye, MFCC-0, which a shap value of 0.3118, was used to detect the sample as replayed .",
      " MFCC-0, MFCC-0, which a shap value of 0.3118, was used to detect the sample as replayed .",
      " Yes, MFCC-0, which a shap value of 0.3118.",
      " Yes, MFCC-0, which a shap value of replayed, was used to detect the sample as replayed .",
      " Yes, MFCC-0, which a MFCC-0 value of 0.3118, was used to detect the sample as replayed .",
      " Yes.3118, was used to detect the sample as replayed .",
      " Yes, replayed, which a shap value of 0.3118, was used to detect the sample as replayed .",
      " Yes, MFCC-0, which a sh value of 0.3118, was used to detect the sample as replayed .",
      " Yes, MFCC-0, was used to detect the sample as replayed .",
      " Yes, MFCC-0, which a shap value of 0.3118, was used to detect the sample as replayed ."
    ],
    "new_mr": "<inform> inform ( <response> response: [ Yes ], <interpreter> interpreter: [ shap ], <important> important: [ MFCC-0 ], <classification> classification: [ replayed ], <shap_value> shap value: [ 0.3118 ]> )"
  },
  {
    "mr": "inform(response[Yes], interpreter[shap], important[MFCC-38], classification[bonafide], shap_value[0.5641])",
    "ref": [
      " Yes, MFCC-38, was used to detect the sample as bonafide .",
      " Yes, MFCC-38, which a shap value of MFCC-38, was used to detect the sample as bonafide .",
      "Yes, PSRCC-9, which a shap value of 0.9541, was used to detect the sample as replayed .",
      "Yes, MFCC-38, which a shap value of 0.5641, was used to detect the sample as bonafide .  Yes, MFCC-38, which a shap value of 0.5641, was used to detect the sample as bonafide .",
      " Yes, which a shap value of 0.5641, was used to detect the sample as bonafide .",
      " Yes, MFCC-38.5641, was used to detect the sample as bonafide .",
      " Yes.5641, was used to detect the sample as bonafide .",
      "Yes, PSRCC-9, which a shap value of 0.9541, was used to detect the sample as replayed .  Yes, MFCC-38, which a shap value of 0.5641, was used to detect the sample as bonafide .",
      " Yes, MFCC-38, which a sh value of 0.5641, was used to detect the sample as bonafide .",
      " Yes, MF, which a shap value of 0.5641, was used to detect the sample as bonafide .",
      " Yes, MFCC-38, which a shap value of 0.5641, was used to detect the sample as bonafide ."
    ],
    "new_mr": "<inform> inform ( <response> response: [ Yes ], <interpreter> interpreter: [ shap ], <important> important: [ MFCC-38 ], <classification> classification: [ bonafide ], <shap_value> shap value: [ 0.5641 ]> )"
  },
  {
    "mr": "inform(response[yes], speaker_id[3], feature[LFCC-5], interpreter[shap], shap_value[0.9355])",
    "ref": [
      "the audio sample was used in a SVM model tasked at detecting speaker id, determined to be 7 .  Yes, person 3 was detected by LFCC-5 with a shap value of 0.9355 .",
      " Yes.9355 .",
      "the audio sample was used in a SVM model tasked at detecting speaker id, determined to be 7 .",
      " Yes, person 3 was detected by LFCC-5 with a shap value of 0.9 .",
      " Yes, person 3 was detected by LFCC-5 with a shap value of LFCC-5 .",
      "Yes, person 3 was detected by LFCC-5 with a shap value of 0.9355 .  Yes, person 3 was detected by LFCC-5 with a shap value of 0.9355 .",
      " Yes, person yes was detected by LFCC-5 with a shap value of 0.9yes55 .",
      " Yes, person 3 was detected by LFC with a shap value of 0.9355 .",
      " Yes, person 3 was detected by shap with a shap value of 0.9355 .",
      " Yes, person  was detected by LFCC-5 with a shap value of 0.955 .",
      " Yes, person 3 was detected by LFCC-5 with a shap value of 0.9355 ."
    ],
    "new_mr": "<inform> inform ( <response> response: [ yes ], <speaker_id> speaker id: [ 3 ], <feature> feature: [ LFCC-5 ], <interpreter> interpreter: [ shap ], <shap_value> shap value: [ 0.9355 ]> )"
  },
  {
    "mr": "inform(interpreter[shap], important[MSRCC-12], shap_value[-0.3688])",
    "ref": [
      "The recording file was classified as being synthetic by a CNN model .  shap determined that the MSRCC-12 feature was one of the more important features by assigning it a value of -0.3688 .",
      " shap determined that the -0.3688 feature was one of the more important features by assigning it a value of -0.3688 .",
      " shap determined that the MSRCC-12 feature was one of the more important features by assigning it a value of -0.36 .",
      " shap determined that the MSRCC-12 feature was one of the more important features by assigning it a value of shap .",
      "The recording file was classified as being synthetic by a CNN model .",
      "shap determined that the MSRCC-12 feature was one of the more important features by assigning it a value of -0.3688 .  shap determined that the MSRCC-12 feature was one of the more important features by assigning it a value of -0.3688 .",
      " s determined that the MSRCC-12 feature was one of the more important features by assigning it a value of -0.3688 .",
      " -0.3688 determined that the MSRCC-12 feature was one of the more important features by assigning it a value of -0.3688 .",
      " shap determined that the MSR feature was one of the more important features by assigning it a value of -0.3688 .",
      "The recording file was classified as being synthetic by a CNN model .  shap determined that the MSRCC-12 feature was one of the more important features by assigning it a value of -0.3688 .",
      " shap determined that the MSRCC-12 feature was one of the more important features by assigning it a value of -0.3688 ."
    ],
    "new_mr": "<inform> inform ( <interpreter> interpreter: [ shap ], <important> important: [ MSRCC-12 ], <shap_value> shap value: [ -0.3688 ]> )"
  },
  {
    "mr": "inform(response[Yes], interpreter[shap], important[MSRCC-9], classification[replayed], shap_value[-0.1353])",
    "ref": [
      " Yes, MSRCC-9, which a shap value of -0.1353.",
      " Yes, shap, which a shap value of -0.1353, was used to detect the sample as replayed .",
      " Yes, MSRCC-9, which a shap value of -0.1353, was used to detect the sample as shap .",
      " Yes, which a shap value of -0.1353, was used to detect the sample as replayed .",
      " Yes, MSRCC-9, which a shap value of -0.135, was used to detect the sample as replayed .",
      " MSRCC-9, MSRCC-9, which a shap value of -0.1353, was used to detect the sample as replayed .",
      "The audio file was classified as being synthetic by a CNN model .",
      " Yes, MSRCC-9, which a shap value of replayed, was used to detect the sample as replayed .",
      " Yes, MSRCC-9, which a shap value of -0.1353, was used to detect the sample as replaye .",
      " Yes, MSRCC-9.1353, was used to detect the sample as replayed .",
      " Yes, MSRCC-9, which a shap value of -0.1353, was used to detect the sample as replayed ."
    ],
    "new_mr": "<inform> inform ( <response> response: [ Yes ], <interpreter> interpreter: [ shap ], <important> important: [ MSRCC-9 ], <classification> classification: [ replayed ], <shap_value> shap value: [ -0.1353 ]> )"
  },
  {
    "mr": "inform(speaker_id[8])",
    "ref": [
      "Yes , the recording was made at the same time .  person 8 was detected as the primary speaker of the audio sample .",
      " person  was detected as the primary speaker of the audio sample .",
      "person 8 was detected as the primary speaker of the audio sample .  person 8 was detected as the primary speaker of the audio sample .",
      "Yes , the recording was made at the same time .",
      "Yes , the recording was made at the same time .  person 8 was detected as the primary speaker of the audio sample .",
      " person  was detected as the primary speaker of the audio sample .",
      "person 8 was detected as the primary speaker of the audio sample .  person 8 was detected as the primary speaker of the audio sample .",
      "Yes , the recording was made at the same time .",
      "Yes , the recording was made at the same time .  person 8 was detected as the primary speaker of the audio sample .",
      " person  was detected as the primary speaker of the audio sample .",
      " person 8 was detected as the primary speaker of the audio sample ."
    ],
    "new_mr": "<inform> inform ( <speaker_id> speaker id: [ 8 ]> )"
  },
  {
    "mr": "inform(response[Yes], classification[spoofed])",
    "ref": [
      "spoofed , this is a spoofed recording",
      "Ye , this is a spoofed recording",
      "Yes , this is a Yes recording",
      "Yes , this is a spoofed recording Yes , this is a spoofed recording",
      "Yes , this is a spoofe recording",
      "Yes, MFCC-36, which a shap value of -0.7831, was used to detect the sample as replayed . Yes , this is a spoofed recording",
      "Yes, MFCC-36, which a shap value of -0.7831, was used to detect the sample as replayed .",
      "spoofed , this is a spoofed recording",
      "Ye , this is a spoofed recording",
      "Yes , this is a Yes recording",
      "Yes , this is a spoofed recording"
    ],
    "new_mr": "<inform> inform ( <response> response: [ Yes ], <classification> classification: [ spoofed ]> )"
  },
  {
    "mr": "inform(extracted[PSRCC], model[CNN], important[PSRCC-3], classification[replayed])",
    "ref": [
      "Yes, GTCC-9, which a shap value of -1, was used to detect the sample as bonafide .  the audio sample had PSRCC features extracted and PSRCC-3 was determined to have a large impact on the CNN model that determined the sample to be replayed .",
      " the audio sample had PSRCC features extracted and PSRCC- was determined to have a large impact on the CNN model that determined the sample to be replayed .",
      " the audio sample had PSRCC features extracted and PSRCC-3 was determined to have a large impact on the CNN model that determined the sample to be PSRCC-3 .",
      "the audio sample had PSRCC features extracted and PSRCC-3 was determined to have a large impact on the CNN model that determined the sample to be replayed .  the audio sample had PSRCC features extracted and PSRCC-3 was determined to have a large impact on the CNN model that determined the sample to be replayed .",
      " the audio sample had CNN features extracted and CNN-3 was determined to have a large impact on the CNN model that determined the sample to be replayed .",
      " the audio sample had PSRCC features extracted and PSRCC-3 was determined to have a large impact on the CNN model that determined the sample to be r .",
      " the audio sample had PS features extracted and PS-3 was determined to have a large impact on the CNN model that determined the sample to be replayed .",
      " the audio sample had PSRCC features extracted and PSRCC-3 was determined to have a large impact on the CN model that determined the sample to be replayed .",
      "Yes, GTCC-9, which a shap value of -1, was used to detect the sample as bonafide .",
      " the audio sample had PSRCC features extracted and PSRCC-3 was determined to have a large impact on the PSRCC model that determined the sample to be replayed .",
      " the audio sample had PSRCC features extracted and PSRCC-3 was determined to have a large impact on the CNN model that determined the sample to be replayed ."
    ],
    "new_mr": "<inform> inform ( <extracted> extracted: [ PSRCC ], <model> model: [ CNN ], <important> important: [ PSRCC-3 ], <classification> classification: [ replayed ]> )"
  },
  {
    "mr": "inform(response[yes], speaker_id[5], feature[LFCC-46], interpreter[shap], shap_value[-0.655])",
    "ref": [
      " Yes, LFCC-46.655, was used to detect the id of speaker 5 for the audio sample .",
      "Yes, LFCC-46, which a shap value of -0.655, was used to detect the id of speaker 5 for the audio sample .  Yes, LFCC-46, which a shap value of -0.655, was used to detect the id of speaker 5 for the audio sample .",
      "The audio signal shows signs of it .",
      " Yes.655, was used to detect the id of speaker 5 for the audio sample .",
      " Yes, LFCC-4, which a shap value of -0.655, was used to detect the id of speaker 5 for the audio sample .",
      " Yes, LFCC-46, which a shap value of yes, was used to detect the id of speaker 5 for the audio sample .",
      " Yes, LFCC-46, which a shap value of -0.6LFCC-46LFCC-46, was used to detect the id of speaker LFCC-46 for the audio sample .",
      " Yes, LFCC-46, which a shap value of -0.655.",
      " Yes, LFCC-46, which a shap value of -0.6, was used to detect the id of speaker 5 for the audio sample .",
      " Yes, LFCC-46, which a shap value of -0.6, was used to detect the id of speaker  for the audio sample .",
      " Yes, LFCC-46, which a shap value of -0.655, was used to detect the id of speaker 5 for the audio sample ."
    ],
    "new_mr": "<inform> inform ( <response> response: [ yes ], <speaker_id> speaker id: [ 5 ], <feature> feature: [ LFCC-46 ], <interpreter> interpreter: [ shap ], <shap_value> shap value: [ -0.655 ]> )"
  },
  {
    "mr": "inform(interpreter[shap], important[MSRCC-10], shap_value[-0.331])",
    "ref": [
      " shap determined that the MSRCC-10 feature was one of the more important features by assigning it a value of -0 .",
      " shap determined that the -0.331 feature was one of the more important features by assigning it a value of -0.331 .",
      "Yes, MFCC-32, which a shap value of -0.2438, was used to detect the sample as bonafide .",
      " shap determined that the MSRCC-10 feature was one of the more important features by assigning it a value of shap .",
      " sh determined that the MSRCC-10 feature was one of the more important features by assigning it a value of -0.331 .",
      " MSRCC-10 determined that the MSRCC-10 feature was one of the more important features by assigning it a value of -0.331 .",
      "Yes, MFCC-32, which a shap value of -0.2438, was used to detect the sample as bonafide .  shap determined that the MSRCC-10 feature was one of the more important features by assigning it a value of -0.331 .",
      "shap determined that the MSRCC-10 feature was one of the more important features by assigning it a value of -0.331 .  shap determined that the MSRCC-10 feature was one of the more important features by assigning it a value of -0.331 .",
      " shap determined that the MSRCC feature was one of the more important features by assigning it a value of -0.331 .",
      " shap determined that the MSRCC-10 feature was one of the more important features by assigning it a value of -0 .",
      " shap determined that the MSRCC-10 feature was one of the more important features by assigning it a value of -0.331 ."
    ],
    "new_mr": "<inform> inform ( <interpreter> interpreter: [ shap ], <important> important: [ MSRCC-10 ], <shap_value> shap value: [ -0.331 ]> )"
  },
  {
    "mr": "inform(response[Yes], interpreter[shap], important[LFCC-31], classification[bonafide], shap_value[-0.0632])",
    "ref": [
      " Yes.0632, was used to detect the sample as bonafide .",
      " Yes, LFCC-31, which a shap value of -0.0632, was used to detect the sample as bonafi .",
      " Yes, which a shap value of -0.0632, was used to detect the sample as bonafide .",
      " Yes, LFCC-31, which a shap value of -0.0632.",
      " Yes, LFCC-31, which a shap value of -0.0632, was used to detect the sample as shap .",
      " Yes, LFCC-31, which a sha value of -0.0632, was used to detect the sample as bonafide .",
      " Yes, , which a shap value of -0.0632, was used to detect the sample as bonafide .",
      " Yes, LFCC-31, which a Yes value of -0.0632, was used to detect the sample as bonafide .",
      "Yes, person 3 was detected by MFCC-21 with a shap value of 0.8559 .  Yes, LFCC-31, which a shap value of -0.0632, was used to detect the sample as bonafide .",
      " Yes, LFCC-31.0632, was used to detect the sample as bonafide .",
      " Yes, LFCC-31, which a shap value of -0.0632, was used to detect the sample as bonafide ."
    ],
    "new_mr": "<inform> inform ( <response> response: [ Yes ], <interpreter> interpreter: [ shap ], <important> important: [ LFCC-31 ], <classification> classification: [ bonafide ], <shap_value> shap value: [ -0.0632 ]> )"
  },
  {
    "mr": "inform(response[yes], speaker_id[3], feature[MFCC-11], interpreter[shap], shap_value[-0.3192])",
    "ref": [
      "Yes, MFCC-11, which a shap value of -0.3192, was used to detect the id of speaker 3 for the audio sample .  Yes, MFCC-11, which a shap value of -0.3192, was used to detect the id of speaker 3 for the audio sample .",
      " Yes, MFCC-11, which a shap value of -0.3192.",
      " Yes, MFCC-11, which a shap value of -0.192, was used to detect the id of speaker  for the audio sample .",
      " Yes, 3, which a shap value of -0.3192, was used to detect the id of speaker 3 for the audio sample .",
      " Yes, MFCC-11, which a shap value of yes, was used to detect the id of speaker 3 for the audio sample .",
      "The audio has been tampered with .",
      " Yes, MFCC-11, which a shap value of -, was used to detect the id of speaker 3 for the audio sample .",
      " Yes, MFCC-11, which a 3 value of -0.3192, was used to detect the id of speaker 3 for the audio sample .",
      "The audio has been tampered with .  Yes, MFCC-11, which a shap value of -0.3192, was used to detect the id of speaker 3 for the audio sample .",
      " Yes, MFCC-11.3192, was used to detect the id of speaker 3 for the audio sample .",
      " Yes, MFCC-11, which a shap value of -0.3192, was used to detect the id of speaker 3 for the audio sample ."
    ],
    "new_mr": "<inform> inform ( <response> response: [ yes ], <speaker_id> speaker id: [ 3 ], <feature> feature: [ MFCC-11 ], <interpreter> interpreter: [ shap ], <shap_value> shap value: [ -0.3192 ]> )"
  },
  {
    "mr": "inform(extracted[MFCC], model[CNN], important[MFCC-3], classification[bonafide])",
    "ref": [
      " the audio sample had MFCC features extracted and MFCC-3 was determined to have a large impact on the bonafide model that determined the sample to be bonafide .",
      " the audio sample had MFCC features extracted and MFCC-3 was determined to have a large impact on the CNN model that determined the sample to be bonafid .",
      " the audio sample had MFCC features extracted and MFCC-3 was determined to have a large impact on the C model that determined the sample to be bonafide .",
      "It looks like the audio was edited using software .",
      "It looks like the audio was edited using software .  the audio sample had MFCC features extracted and MFCC-3 was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      " the audio sample had MFCC features extracted and MF was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      " the audio sample had MFCC features extracted and MFCC was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      " the audio sample had MF features extracted and MF-3 was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      "the audio sample had MFCC features extracted and MFCC-3 was determined to have a large impact on the CNN model that determined the sample to be bonafide .  the audio sample had MFCC features extracted and MFCC-3 was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      " the audio sample had MFCC-3 features extracted and MFCC-3-3 was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      " the audio sample had MFCC features extracted and MFCC-3 was determined to have a large impact on the CNN model that determined the sample to be bonafide ."
    ],
    "new_mr": "<inform> inform ( <extracted> extracted: [ MFCC ], <model> model: [ CNN ], <important> important: [ MFCC-3 ], <classification> classification: [ bonafide ]> )"
  },
  {
    "mr": "inform(extracted[LFCC], model[CNN], important[LFCC-5], classification[bonafide])",
    "ref": [
      " the audio sample had LFCC features extracted and LFCC-5 was determined to have a large impact on the CNN model that determined the sample to be bonafi .",
      " the audio sample had CNN features extracted and CNN-5 was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      "yes, GTCC-9 was used to determine speaker id .  the audio sample had LFCC features extracted and LFCC-5 was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      " the audio sample had LFCC features extracted and LFCC-5 was determined to have a large impact on the  model that determined the sample to be bonafide .",
      "yes, GTCC-9 was used to determine speaker id .",
      " the audio sample had LFCC features extracted and LFCC was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      " the audio sample had LFCC features extracted and LFCC-5 was determined to have a large impact on the CNN model that determined the sample to be LFCC .",
      "the audio sample had LFCC features extracted and LFCC-5 was determined to have a large impact on the CNN model that determined the sample to be bonafide .  the audio sample had LFCC features extracted and LFCC-5 was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      " the audio sample had LFCC features extracted and L was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      " the audio sample had LFCC features extracted and LFCC-5 was determined to have a large impact on the LFCC-5 model that determined the sample to be bonafide .",
      " the audio sample had LFCC features extracted and LFCC-5 was determined to have a large impact on the CNN model that determined the sample to be bonafide ."
    ],
    "new_mr": "<inform> inform ( <extracted> extracted: [ LFCC ], <model> model: [ CNN ], <important> important: [ LFCC-5 ], <classification> classification: [ bonafide ]> )"
  },
  {
    "mr": "inform(response[yes], speaker_id[4], feature[MSRCC-6], interpreter[shap], shap_value[0.5455])",
    "ref": [
      " Yes, MSRCC-6, which a shap value of 0.54, was used to detect the id of speaker 4 for the audio sample .",
      " Yes, MSRCC-6, which a shap value of 0.555, was used to detect the id of speaker  for the audio sample .",
      " Yes, MS, which a shap value of 0.5455, was used to detect the id of speaker 4 for the audio sample .",
      " Yes, which a shap value of 0.5455, was used to detect the id of speaker 4 for the audio sample .",
      " Yes, MSRCC-6, which a shap value of 0.5455.",
      " Yes.5455, was used to detect the id of speaker 4 for the audio sample .",
      "Yes, MSRCC-9, which a shap value of -0.007, was used to detect the id of speaker 2 for the audio sample .",
      " Yes, MSRCC-6, which a shap value of 0.5shap55, was used to detect the id of speaker shap for the audio sample .",
      " Yes, yes, which a shap value of 0.5455, was used to detect the id of speaker 4 for the audio sample .",
      " Yes, MSRCC-6.5455, was used to detect the id of speaker 4 for the audio sample .",
      " Yes, MSRCC-6, which a shap value of 0.5455, was used to detect the id of speaker 4 for the audio sample ."
    ],
    "new_mr": "<inform> inform ( <response> response: [ yes ], <speaker_id> speaker id: [ 4 ], <feature> feature: [ MSRCC-6 ], <interpreter> interpreter: [ shap ], <shap_value> shap value: [ 0.5455 ]> )"
  },
  {
    "mr": "inform(response[yes], speaker_id[7], feature[LFCC-3], interpreter[shap], shap_value[-0.2342])",
    "ref": [
      " Yes.2342 .",
      " Yes, person 7 was detected by LFCC-3 with a yes value of -0.2342 .",
      " Yes, person 7 was detected by L with a shap value of -0.2342 .",
      " Yes, person 7 was detected by LFCC-3 with a s value of -0.2342 .",
      " Yes, person shap was detected by LFCC-3 with a shap value of -0.2342 .",
      " Yes, person 7 was detected by LFCC-3 with a shap value of LFCC-3 .",
      "The audio is artificially slowed .",
      " Yes, person  was detected by LFCC-3 with a shap value of -0.2342 .",
      " Yes, person 7 was detected by shap with a shap value of -0.2342 .",
      " Yes, person 7 was detected by LFCC-3 with a shap value of -0 .",
      " Yes, person 7 was detected by LFCC-3 with a shap value of -0.2342 ."
    ],
    "new_mr": "<inform> inform ( <response> response: [ yes ], <speaker_id> speaker id: [ 7 ], <feature> feature: [ LFCC-3 ], <interpreter> interpreter: [ shap ], <shap_value> shap value: [ -0.2342 ]> )"
  },
  {
    "mr": "inform(response[Yes], interpreter[shap], important[MFCC-22], classification[bonafide], shap_value[0.6472])",
    "ref": [
      "the audio sample had MSRCC features extracted and MSRCC-7 was determined to have a large impact on the CNN model that determined the sample to be replayed .",
      " Yes, MFCC-22, was used to detect the sample as bonafide .",
      " Yes, shap, which a shap value of 0.6472, was used to detect the sample as bonafide .",
      " Yes, MFCC-22, which a shap value of 0.6472, was used to detect the sample as bonaf .",
      "the audio sample had MSRCC features extracted and MSRCC-7 was determined to have a large impact on the CNN model that determined the sample to be replayed .  Yes, MFCC-22, which a shap value of 0.6472, was used to detect the sample as bonafide .",
      " Yes.6472, was used to detect the sample as bonafide .",
      " Yes, MFCC-22.6472, was used to detect the sample as bonafide .",
      " Yes, which a shap value of 0.6472, was used to detect the sample as bonafide .",
      " Y, MFCC-22, which a shap value of 0.6472, was used to detect the sample as bonafide .",
      " Yes, MFCC-22, which a shap value of 0.64, was used to detect the sample as bonafide .",
      " Yes, MFCC-22, which a shap value of 0.6472, was used to detect the sample as bonafide ."
    ],
    "new_mr": "<inform> inform ( <response> response: [ Yes ], <interpreter> interpreter: [ shap ], <important> important: [ MFCC-22 ], <classification> classification: [ bonafide ], <shap_value> shap value: [ 0.6472 ]> )"
  },
  {
    "mr": "inform(response[Yes], classification[spoof], spoof_type[converted])",
    "ref": [
      "Yes.",
      "Yes, the recording is conve .",
      "the audio sample had LFCC features extracted and LFCC-12 was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      "Yes, the recording is Yes .",
      "the audio sample had LFCC features extracted and LFCC-12 was determined to have a large impact on the CNN model that determined the sample to be bonafide . Yes, the recording is converted .",
      "Yes, the recording is converted . Yes, the recording is converted .",
      "Ye, the recording is converted .",
      "converted, the recording is converted .",
      "Yes.",
      "Yes, the recording is conve .",
      "Yes, the recording is converted ."
    ],
    "new_mr": "<inform> inform ( <response> response: [ Yes ], <classification> classification: [ spoof ], <spoof_type> spoof type: [ converted ]> )"
  },
  {
    "mr": "inform(classification[spoof], edit_type[environment])",
    "ref": [
      "yes, MFCC-7 was used to determine speaker id . Artificial noise was added .",
      "Artificial noise was added . Artificial noise was added .",
      "yes, MFCC-7 was used to determine speaker id .",
      "yes, MFCC-7 was used to determine speaker id . Artificial noise was added .",
      "Artificial noise was added . Artificial noise was added .",
      "yes, MFCC-7 was used to determine speaker id .",
      "yes, MFCC-7 was used to determine speaker id . Artificial noise was added .",
      "Artificial noise was added . Artificial noise was added .",
      "yes, MFCC-7 was used to determine speaker id .",
      "yes, MFCC-7 was used to determine speaker id . Artificial noise was added .",
      "Artificial noise was added . "
    ],
    "new_mr": "<inform> inform ( <classification> classification: [ spoof ], <edit_type> edit type: [ environment ]> )"
  },
  {
    "mr": "inform(classification[spoofed], model[CNN])",
    "ref": [
      "Yes, PSRCC-5, which a shap value of 0.2383, was used to detect the sample as bonafide .",
      "The recording file was classified as being CNN by a CNN model .",
      "The recording file was classified as being  by a CNN model .",
      "Yes, PSRCC-5, which a shap value of 0.2383, was used to detect the sample as bonafide . The recording file was classified as being spoofed by a CNN model .",
      "The recording file was classified as being spoofed by a CN model .",
      "The recording file was classified as being spoofed by a spoofed model .",
      "The recording file was classified as being spoofed by a CNN model . The recording file was classified as being spoofed by a CNN model .",
      "Yes, PSRCC-5, which a shap value of 0.2383, was used to detect the sample as bonafide .",
      "The recording file was classified as being CNN by a CNN model .",
      "The recording file was classified as being  by a CNN model .",
      "The recording file was classified as being spoofed by a CNN model ."
    ],
    "new_mr": "<inform> inform ( <classification> classification: [ spoofed ], <model> model: [ CNN ]> )"
  },
  {
    "mr": "inform(response[Yes], interpreter[shap], important[PSRCC-5], classification[bonafide], shap_value[0.2383])",
    "ref": [
      " Yes, PSRCC-5, which a shap value of Yes, was used to detect the sample as bonafide .",
      " Yes, which a shap value of 0.2383, was used to detect the sample as bonafide .",
      "Yes, PSRCC-5, which a shap value of 0.2383, was used to detect the sample as bonafide .  Yes, PSRCC-5, which a shap value of 0.2383, was used to detect the sample as bonafide .",
      " Yes, PSRCC-5, which a PSRCC-5 value of 0.2383, was used to detect the sample as bonafide .",
      " Yes, PSRCC-5.2383, was used to detect the sample as bonafide .",
      " Yes, PSRCC-5, which a shap value of 0.2383, was used to detect the sample as shap .",
      " Yes, PSR, which a shap value of 0.2383, was used to detect the sample as bonafide .",
      " Y, PSRCC-5, which a shap value of 0.2383, was used to detect the sample as bonafide .",
      " Yes, PSRCC-5, which a shap value of 0., was used to detect the sample as bonafide .",
      " PSRCC-5, PSRCC-5, which a shap value of 0.2383, was used to detect the sample as bonafide .",
      " Yes, PSRCC-5, which a shap value of 0.2383, was used to detect the sample as bonafide ."
    ],
    "new_mr": "<inform> inform ( <response> response: [ Yes ], <interpreter> interpreter: [ shap ], <important> important: [ PSRCC-5 ], <classification> classification: [ bonafide ], <shap_value> shap value: [ 0.2383 ]> )"
  },
  {
    "mr": "inform(interpreter[shap], important[MFCC-11], shap_value[0.6078])",
    "ref": [
      " MFCC-11 determined that the MFCC-11 feature was one of the more important features by assigning it a value of 0.6078 .",
      "shap determined that the MFCC-11 feature was one of the more important features by assigning it a value of 0.6078 .  shap determined that the MFCC-11 feature was one of the more important features by assigning it a value of 0.6078 .",
      " shap determined that the MF feature was one of the more important features by assigning it a value of 0.6078 .",
      " shap determined that the MFCC-11 feature was one of the more important features by assigning it a value of 0. .",
      "yes, MFCC-10 was used to determine speaker id .",
      " shap determined that the MFCC-11 feature was one of the more important features by assigning it a value of shap .",
      " shap determined that the shap feature was one of the more important features by assigning it a value of 0.6078 .",
      " sha determined that the MFCC-11 feature was one of the more important features by assigning it a value of 0.6078 .",
      "yes, MFCC-10 was used to determine speaker id .  shap determined that the MFCC-11 feature was one of the more important features by assigning it a value of 0.6078 .",
      " MFCC-11 determined that the MFCC-11 feature was one of the more important features by assigning it a value of 0.6078 .",
      " shap determined that the MFCC-11 feature was one of the more important features by assigning it a value of 0.6078 ."
    ],
    "new_mr": "<inform> inform ( <interpreter> interpreter: [ shap ], <important> important: [ MFCC-11 ], <shap_value> shap value: [ 0.6078 ]> )"
  },
  {
    "mr": "inform(response[Yes], interpreter[shap], important[LFCC-33], classification[replayed], shap_value[-0.2295])",
    "ref": [
      " Yes, LFCC-33, which a shap value of -0.2295.",
      "Yes, person 7 was detected by PSRCC-1 with a shap value of 0.6359 .",
      " Yes, LFCC-33, which a sh value of -0.2295, was used to detect the sample as replayed .",
      " Yes, LFCC-33, which a shap value of -0.2, was used to detect the sample as replayed .",
      " Yes, LFCC-33, which a shap value of shap, was used to detect the sample as replayed .",
      " Yes, LFCC-33, was used to detect the sample as replayed .",
      " Yes, shap, which a shap value of -0.2295, was used to detect the sample as replayed .",
      " Yes, LFCC-33, which a shap value of -0.2295, was used to detect the sample as LFCC-33 .",
      " Yes, which a shap value of -0.2295, was used to detect the sample as replayed .",
      " Yes.2295, was used to detect the sample as replayed .",
      " Yes, LFCC-33, which a shap value of -0.2295, was used to detect the sample as replayed ."
    ],
    "new_mr": "<inform> inform ( <response> response: [ Yes ], <interpreter> interpreter: [ shap ], <important> important: [ LFCC-33 ], <classification> classification: [ replayed ], <shap_value> shap value: [ -0.2295 ]> )"
  },
  {
    "mr": "inform(response[Yes], interpreter[shap], important[PSRCC-9], classification[replayed], shap_value[0.9541])",
    "ref": [
      "the audio sample had MFCC features extracted and MFCC-12 was determined to have a large impact on the CNN model that determined the sample to be replayed .",
      " Yes, PSRCC-, which a shap value of 0.9541, was used to detect the sample as replayed .",
      " Yes, PSRCC-9, which a shap value of shap, was used to detect the sample as replayed .",
      " Yes, PSRCC-9, which a  value of 0.9541, was used to detect the sample as replayed .",
      " Yes, PSRCC-9.9541, was used to detect the sample as replayed .",
      " Yes, PSRCC-9, which a shap value of 0.9541, was used to detect the sample as repl .",
      " Yes.9541, was used to detect the sample as replayed .",
      " PSRCC-9, PSRCC-9, which a shap value of 0.9541, was used to detect the sample as replayed .",
      " Yes, PSRCC-9, which a shap value of 0.9541, was used to detect the sample as PSRCC-9 .",
      " Yes, which a shap value of 0.9541, was used to detect the sample as replayed .",
      " Yes, PSRCC-9, which a shap value of 0.9541, was used to detect the sample as replayed ."
    ],
    "new_mr": "<inform> inform ( <response> response: [ Yes ], <interpreter> interpreter: [ shap ], <important> important: [ PSRCC-9 ], <classification> classification: [ replayed ], <shap_value> shap value: [ 0.9541 ]> )"
  },
  {
    "mr": "inform(response[Yes], interpreter[shap], important[LFCC-54], classification[replayed], shap_value[0.1406])",
    "ref": [
      "The audio sample had GTCC and MFCC features extracted and passed through a trained SVM which determined the id of speaker 8 .",
      "Yes, LFCC-54, which a shap value of 0.1406, was used to detect the sample as replayed .  Yes, LFCC-54, which a shap value of 0.1406, was used to detect the sample as replayed .",
      " Yes, LFCC-54, which a shap value of 0.1406.",
      " Yes, LFCC-54, which a sh value of 0.1406, was used to detect the sample as replayed .",
      " 0.1406, LFCC-54, which a shap value of 0.1406, was used to detect the sample as replayed .",
      " Yes, Yes, which a shap value of 0.1406, was used to detect the sample as replayed .",
      "The audio sample had GTCC and MFCC features extracted and passed through a trained SVM which determined the id of speaker 8 .  Yes, LFCC-54, which a shap value of 0.1406, was used to detect the sample as replayed .",
      " Yes, LFCC-54, was used to detect the sample as replayed .",
      " Yes, LFCC-54, which a Yes value of 0.1406, was used to detect the sample as replayed .",
      " Ye, LFCC-54, which a shap value of 0.1406, was used to detect the sample as replayed .",
      " Yes, LFCC-54, which a shap value of 0.1406, was used to detect the sample as replayed ."
    ],
    "new_mr": "<inform> inform ( <response> response: [ Yes ], <interpreter> interpreter: [ shap ], <important> important: [ LFCC-54 ], <classification> classification: [ replayed ], <shap_value> shap value: [ 0.1406 ]> )"
  },
  {
    "mr": "inform(extracted[LFCC], model[CNN], important[LFCC-17], classification[replayed])",
    "ref": [
      " the audio sample had CNN features extracted and CNN-17 was determined to have a large impact on the CNN model that determined the sample to be replayed .",
      " the audio sample had LFCC features extracted and LFCC-17 was determined to have a large impact on the CNN model that determined the sample to be CNN .",
      " the audio sample had LFCC features extracted and LFCC-17 was determined to have a large impact on the CNN model that determined the sample to be replaye .",
      " the audio sample had  features extracted and -17 was determined to have a large impact on the CNN model that determined the sample to be replayed .",
      " the audio sample had LFCC features extracted and LFCC was determined to have a large impact on the CNN model that determined the sample to be replayed .",
      "the audio sample had LFCC features extracted and LFCC-17 was determined to have a large impact on the CNN model that determined the sample to be replayed .  the audio sample had LFCC features extracted and LFCC-17 was determined to have a large impact on the CNN model that determined the sample to be replayed .",
      " the audio sample had LFCC features extracted and LFCC-17 was determined to have a large impact on the C model that determined the sample to be replayed .",
      " the audio sample had LFCC features extracted and LFCC-17 was determined to have a large impact on the LFCC-17 model that determined the sample to be replayed .",
      "the audio sample had LFCC features extracted and LFCC-55 was determined to have a large impact on the CNN model that determined the sample to be bonafide .  the audio sample had LFCC features extracted and LFCC-17 was determined to have a large impact on the CNN model that determined the sample to be replayed .",
      "the audio sample had LFCC features extracted and LFCC-55 was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      " the audio sample had LFCC features extracted and LFCC-17 was determined to have a large impact on the CNN model that determined the sample to be replayed ."
    ],
    "new_mr": "<inform> inform ( <extracted> extracted: [ LFCC ], <model> model: [ CNN ], <important> important: [ LFCC-17 ], <classification> classification: [ replayed ]> )"
  },
  {
    "mr": "inform(classification[spoof], edit_type[conversion], classified_by[feature])",
    "ref": [
      "SHAP determined that CQCC-20, MFCC-10, LFCC-5.",
      "SHAP determined that CQCC-20, LFCC-5, MFCC-3 had the highest impact on classification .",
      "SHAP determined that CQCC-20, MFCC-10.",
      "Yes, GTCC-5, which a shap value of 0, was used to detect the sample as bonafide . SHAP determined that CQCC-20, MFCC-10, LFCC-5, MFCC-3 had the highest impact on classification .",
      "SHAP determined that CQCC-20, MFCC-10, MFCC-3 had the highest impact on classification .",
      "SHAP determined that CQCC-20.",
      "Yes, GTCC-5, which a shap value of 0, was used to detect the sample as bonafide .",
      "SHAP determined that CQCC-20, MFCC-10, LFCC-5, MFCC-3 had the highest impact on classification . SHAP determined that CQCC-20, MFCC-10, LFCC-5, MFCC-3 had the highest impact on classification .",
      "SHAP determined that CQCC-20, MFCC-10, LFCC-5.",
      "SHAP determined that CQCC-20, LFCC-5, MFCC-3 had the highest impact on classification .",
      "SHAP determined that CQCC-20, MFCC-10, LFCC-5, MFCC-3 had the highest impact on classification ."
    ],
    "new_mr": "<inform> inform ( <classification> classification: [ spoof ], <edit_type> edit type: [ conversion ], <classified_by> classified by: [ feature ]> )"
  },
  {
    "mr": "inform(extracted[MSRCC], model[CNN], important[MSRCC-7], classification[replayed])",
    "ref": [
      " the audio sample had MSRCC features extracted and MSRC was determined to have a large impact on the CNN model that determined the sample to be replayed .",
      " the audio sample had MSRCC features extracted and MSRCC-7 was determined to have a large impact on the replayed model that determined the sample to be replayed .",
      " the audio sample had M features extracted and M-7 was determined to have a large impact on the CNN model that determined the sample to be replayed .",
      " the audio sample had MSRCC features extracted and MSRCC-7 was determined to have a large impact on the CN model that determined the sample to be replayed .",
      " the audio sample had MSRCC-7 features extracted and MSRCC-7-7 was determined to have a large impact on the CNN model that determined the sample to be replayed .",
      " the audio sample had MSRCC features extracted and MSRCC-7 was determined to have a large impact on the CNN model that determined the sample to be MSRCC-7 .",
      " the audio sample had MSRCC features extracted and MSRCC was determined to have a large impact on the CNN model that determined the sample to be replayed .",
      "the audio sample had MFCC features extracted and MFCC-5 was determined to have a large impact on the CNN model that determined the sample to be replayed .",
      " the audio sample had MSRCC features extracted and MSRCC-7 was determined to have a large impact on the CNN model that determined the sample to be replay .",
      "the audio sample had MSRCC features extracted and MSRCC-7 was determined to have a large impact on the CNN model that determined the sample to be replayed .  the audio sample had MSRCC features extracted and MSRCC-7 was determined to have a large impact on the CNN model that determined the sample to be replayed .",
      " the audio sample had MSRCC features extracted and MSRCC-7 was determined to have a large impact on the CNN model that determined the sample to be replayed ."
    ],
    "new_mr": "<inform> inform ( <extracted> extracted: [ MSRCC ], <model> model: [ CNN ], <important> important: [ MSRCC-7 ], <classification> classification: [ replayed ]> )"
  },
  {
    "mr": "inform(response[Yes], classification[spoofed], spoof_type[synthetic])",
    "ref": [
      "Yes, the spoofed recording was a Yes recording .",
      "the audio sample had LFCC features extracted and LFCC-3 was determined to have a large impact on the CNN model that determined the sample to be bonafide . Yes, the spoofed recording was a synthetic recording .",
      "Yes.",
      "the audio sample had LFCC features extracted and LFCC-3 was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      "Yes, the synthetic recording was a synthetic recording .",
      "Yes, the spoofed recording was a  recording .",
      "Yes, the spoofed recording was a synthetic recording . Yes, the spoofed recording was a synthetic recording .",
      "spoofed, the spoofed recording was a synthetic recording .",
      "Yes, the spoo recording was a synthetic recording .",
      ", the spoofed recording was a synthetic recording .",
      "Yes, the spoofed recording was a synthetic recording ."
    ],
    "new_mr": "<inform> inform ( <response> response: [ Yes ], <classification> classification: [ spoofed ], <spoof_type> spoof type: [ synthetic ]> )"
  },
  {
    "mr": "inform(response[yes], speaker_id[5], feature[MSRCC-12], interpreter[shap], shap_value[0.9499])",
    "ref": [
      " Yes, MSRCC-12, which a shap value of 0.9, was used to detect the id of speaker 5 for the audio sample .",
      " Yes, 0.9499, which a shap value of 0.9499, was used to detect the id of speaker 5 for the audio sample .",
      " Yes, which a shap value of 0.9499, was used to detect the id of speaker 5 for the audio sample .",
      " Yes, MSRCC-12, which a shap value of 0.9499, was used to detect the id of speaker  for the audio sample .",
      " Yes, MSRCC-12, which a s value of 0.9499, was used to detect the id of speaker 5 for the audio sample .",
      "shap determined that the LFCC-4 feature was one of the more important features by assigning it a value of -0.1907 .  Yes, MSRCC-12, which a shap value of 0.9499, was used to detect the id of speaker 5 for the audio sample .",
      "Yes, MSRCC-12, which a shap value of 0.9499, was used to detect the id of speaker 5 for the audio sample .  Yes, MSRCC-12, which a shap value of 0.9499, was used to detect the id of speaker 5 for the audio sample .",
      " Yes, MSRCC-12, which a shap value of yes, was used to detect the id of speaker 5 for the audio sample .",
      "shap determined that the LFCC-4 feature was one of the more important features by assigning it a value of -0.1907 .",
      " Yes, MSRCC-12, was used to detect the id of speaker 5 for the audio sample .",
      " Yes, MSRCC-12, which a shap value of 0.9499, was used to detect the id of speaker 5 for the audio sample ."
    ],
    "new_mr": "<inform> inform ( <response> response: [ yes ], <speaker_id> speaker id: [ 5 ], <feature> feature: [ MSRCC-12 ], <interpreter> interpreter: [ shap ], <shap_value> shap value: [ 0.9499 ]> )"
  },
  {
    "mr": "inform(response[Yes], interpreter[shap], important[GTCC-9], classification[bonafide], shap_value[-1])",
    "ref": [
      " Yes.",
      " bonafide, GTCC-9, which a shap value of -1, was used to detect the sample as bonafide .",
      " Yes, GTCC-, which a shap value of -1, was used to detect the sample as bonafide .",
      " Yes, GTCC-9, which a shap value of -1, was used to detect the sample as Yes .",
      "Yes, GTCC-9, which a shap value of -1, was used to detect the sample as bonafide .  Yes, GTCC-9, which a shap value of -1, was used to detect the sample as bonafide .",
      " Yes, GTCC-9, which a bonafide value of -1, was used to detect the sample as bonafide .",
      " Yes, GTCC-9.",
      " Yes, bonafide, which a shap value of -1, was used to detect the sample as bonafide .",
      " Yes, GTCC-9, which a shap value of , was used to detect the sample as bonafide .",
      "The signal is consistent with a cloned voice .  Yes, GTCC-9, which a shap value of -1, was used to detect the sample as bonafide .",
      " Yes, GTCC-9, which a shap value of -1, was used to detect the sample as bonafide ."
    ],
    "new_mr": "<inform> inform ( <response> response: [ Yes ], <interpreter> interpreter: [ shap ], <important> important: [ GTCC-9 ], <classification> classification: [ bonafide ], <shap_value> shap value: [ -1 ]> )"
  },
  {
    "mr": "inform(response[Yes], interpreter[shap], important[MFCC-5], classification[bonafide], shap_value[0.1237])",
    "ref": [
      " Yes, bonafide, which a shap value of 0.1237, was used to detect the sample as bonafide .",
      " Yes, MFCC-5, was used to detect the sample as bonafide .",
      "the audio sample had LFCC features extracted and LFCC-14 was determined to have a large impact on the CNN model that determined the sample to be replayed .  Yes, MFCC-5, which a shap value of 0.1237, was used to detect the sample as bonafide .",
      " Yes, which a shap value of 0.1237, was used to detect the sample as bonafide .",
      " Yes.1237, was used to detect the sample as bonafide .",
      " Yes, MFCC-5, which a shap value of shap, was used to detect the sample as bonafide .",
      " Y, MFCC-5, which a shap value of 0.1237, was used to detect the sample as bonafide .",
      " Yes, MFCC-5.1237, was used to detect the sample as bonafide .",
      "Yes, MFCC-5, which a shap value of 0.1237, was used to detect the sample as bonafide .  Yes, MFCC-5, which a shap value of 0.1237, was used to detect the sample as bonafide .",
      " shap, MFCC-5, which a shap value of 0.1237, was used to detect the sample as bonafide .",
      " Yes, MFCC-5, which a shap value of 0.1237, was used to detect the sample as bonafide ."
    ],
    "new_mr": "<inform> inform ( <response> response: [ Yes ], <interpreter> interpreter: [ shap ], <important> important: [ MFCC-5 ], <classification> classification: [ bonafide ], <shap_value> shap value: [ 0.1237 ]> )"
  },
  {
    "mr": "inform(response[Yes], interpreter[shap], important[PSRCC-12], classification[bonafide], shap_value[-0.5073])",
    "ref": [
      " Yes, Yes, which a shap value of -0.5073, was used to detect the sample as bonafide .",
      " Yes, PSRCC-12, which a shap value of -0.507, was used to detect the sample as bonafide .",
      " PSRCC-12, PSRCC-12, which a shap value of -0.5073, was used to detect the sample as bonafide .",
      " Yes, PSRCC-12, which a Yes value of -0.5073, was used to detect the sample as bonafide .",
      " Yes.5073, was used to detect the sample as bonafide .",
      "Yes, PSRCC-12, which a shap value of -0.5073, was used to detect the sample as bonafide .  Yes, PSRCC-12, which a shap value of -0.5073, was used to detect the sample as bonafide .",
      "Yes, MFCC-20, which a shap value of 0.0087, was used to detect the sample as bonafide .  Yes, PSRCC-12, which a shap value of -0.5073, was used to detect the sample as bonafide .",
      " Yes, PSRCC-12, was used to detect the sample as bonafide .",
      " , PSRCC-12, which a shap value of -0.5073, was used to detect the sample as bonafide .",
      " Yes, PSRCC-12, which a shap value of -0.5073, was used to detect the sample as shap .",
      " Yes, PSRCC-12, which a shap value of -0.5073, was used to detect the sample as bonafide ."
    ],
    "new_mr": "<inform> inform ( <response> response: [ Yes ], <interpreter> interpreter: [ shap ], <important> important: [ PSRCC-12 ], <classification> classification: [ bonafide ], <shap_value> shap value: [ -0.5073 ]> )"
  },
  {
    "mr": "inform(interpreter[shap], important[MSRCC-9], shap_value[-0.4534])",
    "ref": [
      " sha determined that the MSRCC-9 feature was one of the more important features by assigning it a value of -0.4534 .",
      "person 3 spoke the audio sample .  shap determined that the MSRCC-9 feature was one of the more important features by assigning it a value of -0.4534 .",
      "shap determined that the MSRCC-9 feature was one of the more important features by assigning it a value of -0.4534 .  shap determined that the MSRCC-9 feature was one of the more important features by assigning it a value of -0.4534 .",
      " shap determined that the MSRCC-9 feature was one of the more important features by assigning it a value of shap .",
      " shap determined that the MS feature was one of the more important features by assigning it a value of -0.4534 .",
      " -0.4534 determined that the MSRCC-9 feature was one of the more important features by assigning it a value of -0.4534 .",
      " shap determined that the MSRCC-9 feature was one of the more important features by assigning it a value of - .",
      "person 3 spoke the audio sample .",
      " shap determined that the shap feature was one of the more important features by assigning it a value of -0.4534 .",
      " sha determined that the MSRCC-9 feature was one of the more important features by assigning it a value of -0.4534 .",
      " shap determined that the MSRCC-9 feature was one of the more important features by assigning it a value of -0.4534 ."
    ],
    "new_mr": "<inform> inform ( <interpreter> interpreter: [ shap ], <important> important: [ MSRCC-9 ], <shap_value> shap value: [ -0.4534 ]> )"
  },
  {
    "mr": "inform(extracted[LFCC], model[CNN], important[LFCC-54], classification[bonafide])",
    "ref": [
      " the audio sample had L features extracted and L-54 was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      " the audio sample had LFCC features extracted and CNN was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      " the audio sample had LFCC features extracted and LFCC-54 was determined to have a large impact on the CNN model that determined the sample to be bon .",
      " the audio sample had bonafide features extracted and bonafide-54 was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      " the audio sample had LFCC features extracted and LFCC-54 was determined to have a large impact on the CN model that determined the sample to be bonafide .",
      "Yes, LFCC-54, which a shap value of 0.1406, was used to detect the sample as replayed .",
      "Yes, LFCC-54, which a shap value of 0.1406, was used to detect the sample as replayed .  the audio sample had LFCC features extracted and LFCC-54 was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      "the audio sample had LFCC features extracted and LFCC-54 was determined to have a large impact on the CNN model that determined the sample to be bonafide .  the audio sample had LFCC features extracted and LFCC-54 was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      " the audio sample had LFCC features extracted and L was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      " the audio sample had LFCC features extracted and LFCC-54 was determined to have a large impact on the LFCC model that determined the sample to be bonafide .",
      " the audio sample had LFCC features extracted and LFCC-54 was determined to have a large impact on the CNN model that determined the sample to be bonafide ."
    ],
    "new_mr": "<inform> inform ( <extracted> extracted: [ LFCC ], <model> model: [ CNN ], <important> important: [ LFCC-54 ], <classification> classification: [ bonafide ]> )"
  },
  {
    "mr": "inform(response[yes], speaker_id[1], feature[MFCC-15], interpreter[shap], shap_value[-0.7171])",
    "ref": [
      " Yes, MFCC-15, which a  value of -0.7171, was used to detect the id of speaker 1 for the audio sample .",
      " Yes, MFCC-15.7171, was used to detect the id of speaker 1 for the audio sample .",
      " Yes, which a shap value of -0.7171, was used to detect the id of speaker 1 for the audio sample .",
      " Yes, MFCC-15, was used to detect the id of speaker 1 for the audio sample .",
      " Yes, MFCC-15, which a MFCC-15 value of -0.7171, was used to detect the id of speaker 1 for the audio sample .",
      " Yes.7171, was used to detect the id of speaker 1 for the audio sample .",
      "Yes, MFCC-15, which a shap value of -0.7171, was used to detect the id of speaker 1 for the audio sample .  Yes, MFCC-15, which a shap value of -0.7171, was used to detect the id of speaker 1 for the audio sample .",
      "Yes, person 2 was detected by MFCC-35 with a shap value of 0.4133 .",
      "Yes, person 2 was detected by MFCC-35 with a shap value of 0.4133 .  Yes, MFCC-15, which a shap value of -0.7171, was used to detect the id of speaker 1 for the audio sample .",
      " Yes, MFCC-15, which a shap value of shap, was used to detect the id of speaker 1 for the audio sample .",
      " Yes, MFCC-15, which a shap value of -0.7171, was used to detect the id of speaker 1 for the audio sample ."
    ],
    "new_mr": "<inform> inform ( <response> response: [ yes ], <speaker_id> speaker id: [ 1 ], <feature> feature: [ MFCC-15 ], <interpreter> interpreter: [ shap ], <shap_value> shap value: [ -0.7171 ]> )"
  },
  {
    "mr": "inform(response[yes], feature[GTCC-1], determined[speaker_id])",
    "ref": [
      "Yes, MFCC-1, which a shap value of -0.3605, was used to detect the id of speaker 6 for the audio sample .  yes, GTCC-1 was used to determine speaker id .",
      " yes, yes was used to determine speaker id .",
      " y, GTCC-1 was used to determine speaker id .",
      " yes.",
      " yes, GTCC was used to determine speaker id .",
      "Yes, MFCC-1, which a shap value of -0.3605, was used to detect the id of speaker 6 for the audio sample .",
      " GTCC-1, GTCC-1 was used to determine speaker id .",
      "yes, GTCC-1 was used to determine speaker id .  yes, GTCC-1 was used to determine speaker id .",
      "Yes, MFCC-1, which a shap value of -0.3605, was used to detect the id of speaker 6 for the audio sample .  yes, GTCC-1 was used to determine speaker id .",
      " yes, yes was used to determine speaker id .",
      " yes, GTCC-1 was used to determine speaker id ."
    ],
    "new_mr": "<inform> inform ( <response> response: [ yes ], <feature> feature: [ GTCC-1 ], <determined> determined: [ speaker_id ]> )"
  },
  {
    "mr": "inform(interpreter[shap], important[LFCC-34], shap_value[-0.9876])",
    "ref": [
      " shap determined that the LFCC-34 feature was one of the more important features by assigning it a value of shap .",
      "  determined that the LFCC-34 feature was one of the more important features by assigning it a value of -0.9876 .",
      " shap determined that the LFCC-34 feature was one of the more important features by assigning it a value of - .",
      "shap determined that the LFCC-34 feature was one of the more important features by assigning it a value of -0.9876 .  shap determined that the LFCC-34 feature was one of the more important features by assigning it a value of -0.9876 .",
      "Yes, MFCC-29, which a shap value of 0.5961, was used to detect the sample as bonafide .  shap determined that the LFCC-34 feature was one of the more important features by assigning it a value of -0.9876 .",
      "Yes, MFCC-29, which a shap value of 0.5961, was used to detect the sample as bonafide .",
      " shap determined that the shap feature was one of the more important features by assigning it a value of -0.9876 .",
      " shap determined that the L feature was one of the more important features by assigning it a value of -0.9876 .",
      " LFCC-34 determined that the LFCC-34 feature was one of the more important features by assigning it a value of -0.9876 .",
      " shap determined that the LFCC-34 feature was one of the more important features by assigning it a value of shap .",
      " shap determined that the LFCC-34 feature was one of the more important features by assigning it a value of -0.9876 ."
    ],
    "new_mr": "<inform> inform ( <interpreter> interpreter: [ shap ], <important> important: [ LFCC-34 ], <shap_value> shap value: [ -0.9876 ]> )"
  },
  {
    "mr": "inform(interpreter[shap], important[LFCC-49], shap_value[-0.6011])",
    "ref": [
      " LFCC-49 determined that the LFCC-49 feature was one of the more important features by assigning it a value of -0.6011 .",
      " shap determined that the LFCC-49 feature was one of the more important features by assigning it a value of LFCC-49 .",
      "shap determined that the LFCC-49 feature was one of the more important features by assigning it a value of -0.6011 .  shap determined that the LFCC-49 feature was one of the more important features by assigning it a value of -0.6011 .",
      " shap determined that the LFCC-49 feature was one of the more important features by assigning it a value of -0.601 .",
      " sha determined that the LFCC-49 feature was one of the more important features by assigning it a value of -0.6011 .",
      " shap determined that the  feature was one of the more important features by assigning it a value of -0.6011 .",
      " shap determined that the -0.6011 feature was one of the more important features by assigning it a value of -0.6011 .",
      "Yes, person 5 was detected by LFCC-58 with a shap value of 0.2487 .  shap determined that the LFCC-49 feature was one of the more important features by assigning it a value of -0.6011 .",
      "Yes, person 5 was detected by LFCC-58 with a shap value of 0.2487 .",
      " LFCC-49 determined that the LFCC-49 feature was one of the more important features by assigning it a value of -0.6011 .",
      " shap determined that the LFCC-49 feature was one of the more important features by assigning it a value of -0.6011 ."
    ],
    "new_mr": "<inform> inform ( <interpreter> interpreter: [ shap ], <important> important: [ LFCC-49 ], <shap_value> shap value: [ -0.6011 ]> )"
  },
  {
    "mr": "inform(response[Yes], interpreter[shap], important[LFCC-21], classification[replayed], shap_value[0.2522])",
    "ref": [
      " Yes, which a shap value of 0.2522, was used to detect the sample as replayed .",
      " Yes, LFCC-21, which a shap value of 0.2522, was used to detect the sample as 0.2522 .",
      "Yes, LFCC-21, which a shap value of 0.2522, was used to detect the sample as replayed .  Yes, LFCC-21, which a shap value of 0.2522, was used to detect the sample as replayed .",
      "Yes, the spoofed recording was a synthetic recording .  Yes, LFCC-21, which a shap value of 0.2522, was used to detect the sample as replayed .",
      " Y, LFCC-21, which a shap value of 0.2522, was used to detect the sample as replayed .",
      " Yes, LFCC-21, which a s value of 0.2522, was used to detect the sample as replayed .",
      " Yes.2522, was used to detect the sample as replayed .",
      " Yes, LFCC-21, which a shap value of 0.2522.",
      " Yes, LFCC-21, which a shap value of Yes, was used to detect the sample as replayed .",
      " Yes, LFCC-21, was used to detect the sample as replayed .",
      " Yes, LFCC-21, which a shap value of 0.2522, was used to detect the sample as replayed ."
    ],
    "new_mr": "<inform> inform ( <response> response: [ Yes ], <interpreter> interpreter: [ shap ], <important> important: [ LFCC-21 ], <classification> classification: [ replayed ], <shap_value> shap value: [ 0.2522 ]> )"
  },
  {
    "mr": "inform(extracted[LFCC], model[CNN], important[LFCC-18], classification[bonafide])",
    "ref": [
      " the audio sample had LFCC features extracted and LFCC-18 was determined to have a large impact on the LFCC model that determined the sample to be bonafide .",
      " the audio sample had LFCC-18 features extracted and LFCC-18-18 was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      "the audio sample had LFCC features extracted and LFCC-12 was determined to have a large impact on the CNN model that determined the sample to be bonafide .  the audio sample had LFCC features extracted and LFCC-18 was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      "the audio sample had LFCC features extracted and LFCC-12 was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      " the audio sample had LFC features extracted and LFC-18 was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      " the audio sample had LFCC features extracted and LFCC-18 was determined to have a large impact on the CNN model that determined the sample to be bon .",
      "the audio sample had LFCC features extracted and LFCC-18 was determined to have a large impact on the CNN model that determined the sample to be bonafide .  the audio sample had LFCC features extracted and LFCC-18 was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      " the audio sample had LFCC features extracted and bonafide was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      " the audio sample had LFCC features extracted and LFCC-18 was determined to have a large impact on the CNN model that determined the sample to be LFCC-18 .",
      " the audio sample had LFCC features extracted and LFCC-18 was determined to have a large impact on the  model that determined the sample to be bonafide .",
      " the audio sample had LFCC features extracted and LFCC-18 was determined to have a large impact on the CNN model that determined the sample to be bonafide ."
    ],
    "new_mr": "<inform> inform ( <extracted> extracted: [ LFCC ], <model> model: [ CNN ], <important> important: [ LFCC-18 ], <classification> classification: [ bonafide ]> )"
  },
  {
    "mr": "inform(response[yes], speaker_id[4], feature[MSRCC-1], interpreter[shap], shap_value[0.1017])",
    "ref": [
      " Yes, MSRCC-1, which a shap value of 0.1017, was used to detect the id of speaker yes for the audio sample .",
      "It looks like the audio was edited using software .",
      "It looks like the audio was edited using software .  Yes, MSRCC-1, which a shap value of 0.1017, was used to detect the id of speaker 4 for the audio sample .",
      " Yes, MSRCC-1, which a yes value of 0.1017, was used to detect the id of speaker 4 for the audio sample .",
      " Yes, MSRCC-1.1017, was used to detect the id of speaker 4 for the audio sample .",
      " Yes, 0.1017, which a shap value of 0.1017, was used to detect the id of speaker 4 for the audio sample .",
      " Yes, MSRCC-1, which a shap value of 0.1017, was used to detect the id of speaker  for the audio sample .",
      "Yes, MSRCC-1, which a shap value of 0.1017, was used to detect the id of speaker 4 for the audio sample .  Yes, MSRCC-1, which a shap value of 0.1017, was used to detect the id of speaker 4 for the audio sample .",
      " Yes, MSRCC-1, which a  value of 0.1017, was used to detect the id of speaker 4 for the audio sample .",
      " Yes, MSR, which a shap value of 0.1017, was used to detect the id of speaker 4 for the audio sample .",
      " Yes, MSRCC-1, which a shap value of 0.1017, was used to detect the id of speaker 4 for the audio sample ."
    ],
    "new_mr": "<inform> inform ( <response> response: [ yes ], <speaker_id> speaker id: [ 4 ], <feature> feature: [ MSRCC-1 ], <interpreter> interpreter: [ shap ], <shap_value> shap value: [ 0.1017 ]> )"
  },
  {
    "mr": "inform(classification[spoof], change_at[5])",
    "ref": [
      "That microphone was used for spoof seconds .",
      "That microphone was used for 5 seconds . That microphone was used for 5 seconds .",
      "Yes, LFCC-53, which a shap value of 0.9557, was used to detect the sample as replayed .",
      "Yes, LFCC-53, which a shap value of 0.9557, was used to detect the sample as replayed . That microphone was used for 5 seconds .",
      "That microphone was used for  seconds .",
      "That microphone was used for spoof seconds .",
      "That microphone was used for 5 seconds . That microphone was used for 5 seconds .",
      "Yes, LFCC-53, which a shap value of 0.9557, was used to detect the sample as replayed .",
      "Yes, LFCC-53, which a shap value of 0.9557, was used to detect the sample as replayed . That microphone was used for 5 seconds .",
      "That microphone was used for  seconds .",
      "That microphone was used for 5 seconds ."
    ],
    "new_mr": "<inform> inform ( <classification> classification: [ spoof ], <change_at> change at: [ 5 ]> )"
  },
  {
    "mr": "inform(extracted[LFCC], model[CNN], important[LFCC-56], classification[bonafide])",
    "ref": [
      " the audio sample had LFCC features extracted and LFCC was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      " the audio sample had LFCC features extracted and LFCC-56 was determined to have a large impact on the CNN model that determined the sample to be bonafid .",
      " the audio sample had LFCC features extracted and LFCC-56 was determined to have a large impact on the CN model that determined the sample to be bonafide .",
      " the audio sample had LFC features extracted and LFC-56 was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      " the audio sample had LFCC features extracted and LFCC-56 was determined to have a large impact on the bonafide model that determined the sample to be bonafide .",
      "Yes, GTCC-7, which a shap value of 0, was used to detect the sample as replayed .  the audio sample had LFCC features extracted and LFCC-56 was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      " the audio sample had LFCC-56 features extracted and LFCC-56-56 was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      "the audio sample had LFCC features extracted and LFCC-56 was determined to have a large impact on the CNN model that determined the sample to be bonafide .  the audio sample had LFCC features extracted and LFCC-56 was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      " the audio sample had LFCC features extracted and LFCC-56 was determined to have a large impact on the CNN model that determined the sample to be LFCC .",
      "Yes, GTCC-7, which a shap value of 0, was used to detect the sample as replayed .",
      " the audio sample had LFCC features extracted and LFCC-56 was determined to have a large impact on the CNN model that determined the sample to be bonafide ."
    ],
    "new_mr": "<inform> inform ( <extracted> extracted: [ LFCC ], <model> model: [ CNN ], <important> important: [ LFCC-56 ], <classification> classification: [ bonafide ]> )"
  },
  {
    "mr": "inform(general)",
    "ref": [
      "Constant-Q transform ( CQT ) has been applied in music signal processing, spoofing detection as well in ASV . Different from STFT , followed by DCT to yield CQCCs .",
      "Different from STFT , CQT produces a timefrequency representation with variable resolution . Different from STFT , CQT produces a timefrequency representation with variable resolution . Different from STFT , CQT produces a timefrequency representation with variable resolution . Constant-Q transform ( CQT ) has been applied in music signal processing, spoofing detection as well in ASV . Different from STFT , CQT produces a timefrequency representation with variable resolution . The resulting CQT power spectrum is log-compressed and uniformly sampled, followed by DCT to yield CQCCs .",
      "Constant-Q transform ( CQT ) has been applied in music signal processing, spoofing detection as well in ASV . Different from STFT , CQT produces a timefrequency representation with variable resolution . The resulting CQT power spectrum is log-compressed and uniformly sampled.",
      "Constant-Q transform ( CQT ) has been applied in music signal processing, CQT produces a timefrequency representation with variable resolution . The resulting CQT power spectrum is log-compressed and uniformly sampled, followed by DCT to yield CQCCs .",
      "Constant-Q transform ( CQT ) has been applied in music signal processing, spoofing detection as well in ASV . Different from STFT , CQT produces a timefrequency representation with variable resolution .  Yes, person 3 was detected by MFCC-24 with a shap value of 0.5756 .",
      "Constant-Q transform ( CQT ) has been applied in music signal processing, spoofing detection as well in ASV .  The resulting CQT power spectrum is log-compressed and uniformly sampled, followed by DCT to yield CQCCs .",
      "Different from STFT , CQT produces a timefrequency representation with variable resolution . Different from STFT , CQT produces a timefrequency representation with variable resolution . Constant-Q transform ( CQT ) has been applied in music signal processing, spoofing detection as well in ASV . Different from STFT , CQT produces a timefrequency representation with variable resolution . The resulting CQT power spectrum is log-compressed and uniformly sampled, followed by DCT to yield CQCCs .",
      "Constant-Q transform ( CQT ) has been applied in music signal processing, spoofing detection as well in ASV . Different from STFT . The resulting CQT power spectrum is log-compressed and uniformly sampled, followed by DCT to yield CQCCs .",
      "Yes, person 3 was detected by MFCC-24 with a shap value of 0.5756 . Constant-Q transform ( CQT ) has been applied in music signal processing, spoofing detection as well in ASV .  Yes, person 3 was detected by MFCC-24 with a shap value of 0.5756 .  Yes, person 3 was detected by MFCC-24 with a shap value of 0.5756 . Different from STFT , CQT produces a timefrequency representation with variable resolution . The resulting CQT power spectrum is log-compressed and uniformly sampled, followed by DCT to yield CQCCs .",
      "Constant-Q transform ( CQT ) has been applied in music signal processing, spoofing detection as well in ASV . Different from STFT , CQT produces a timefrequency representation with variable resolution .",
      "Constant-Q transform ( CQT ) has been applied in music signal processing, spoofing detection as well in ASV . Different from STFT , CQT produces a timefrequency representation with variable resolution . The resulting CQT power spectrum is log-compressed and uniformly sampled, followed by DCT to yield CQCCs ."
    ],
    "new_mr": "<inform> inform ( > )"
  },
  {
    "mr": "inform(extracted[MFCC], model[CNN], important[MFCC-11], classification[bonafide])",
    "ref": [
      " the audio sample had MFCC features extracted and MFCC-11 was determined to have a large impact on the CNN model that determined the sample to be  .",
      " the audio sample had MFCC features extracted and MFCC was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      " the audio sample had MFCC features extracted and MFCC-11 was determined to have a large impact on the CN model that determined the sample to be bonafide .",
      " the audio sample had CNN features extracted and CNN-11 was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      " the audio sample had M features extracted and M-11 was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      "Yes, LFCC-40, which a shap value of -0.6692, was used to detect the id of speaker 4 for the audio sample .",
      " the audio sample had MFCC features extracted and MFCC-11 was determined to have a large impact on the CNN model that determined the sample to be MFCC .",
      "the audio sample had MFCC features extracted and MFCC-11 was determined to have a large impact on the CNN model that determined the sample to be bonafide .  the audio sample had MFCC features extracted and MFCC-11 was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      " the audio sample had MFCC features extracted and MFCC-11 was determined to have a large impact on the MFCC model that determined the sample to be bonafide .",
      "Yes, LFCC-40, which a shap value of -0.6692, was used to detect the id of speaker 4 for the audio sample .  the audio sample had MFCC features extracted and MFCC-11 was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      " the audio sample had MFCC features extracted and MFCC-11 was determined to have a large impact on the CNN model that determined the sample to be bonafide ."
    ],
    "new_mr": "<inform> inform ( <extracted> extracted: [ MFCC ], <model> model: [ CNN ], <important> important: [ MFCC-11 ], <classification> classification: [ bonafide ]> )"
  },
  {
    "mr": "inform(response[Yes], interpreter[shap], important[LFCC-35], classification[replayed], shap_value[0.2867])",
    "ref": [
      " Yes, LFCC-35.2867, was used to detect the sample as replayed .",
      " Yes, LFCC-35, which a shap value of 0.2867, was used to detect the sample as Yes .",
      " Yes, LFCC-35, which a shap value of 0.2867.",
      " Yes, LFCC-35, which a shap value of 0.28, was used to detect the sample as replayed .",
      " Yes, LFCC-35, which a replayed value of 0.2867, was used to detect the sample as replayed .",
      "Yes, LFCC-35, which a shap value of 0.2867, was used to detect the sample as replayed .  Yes, LFCC-35, which a shap value of 0.2867, was used to detect the sample as replayed .",
      " Yes.2867, was used to detect the sample as replayed .",
      " Yes, LFCC-35, which a sha value of 0.2867, was used to detect the sample as replayed .",
      " Yes, , which a shap value of 0.2867, was used to detect the sample as replayed .",
      " Yes, LFCC-35, was used to detect the sample as replayed .",
      " Yes, LFCC-35, which a shap value of 0.2867, was used to detect the sample as replayed ."
    ],
    "new_mr": "<inform> inform ( <response> response: [ Yes ], <interpreter> interpreter: [ shap ], <important> important: [ LFCC-35 ], <classification> classification: [ replayed ], <shap_value> shap value: [ 0.2867 ]> )"
  },
  {
    "mr": "inform(response[yes], speaker_id[5], feature[MSRCC-11], interpreter[shap], shap_value[0.2062])",
    "ref": [
      " Yes, person  was detected by MSRCC-11 with a shap value of 0.2062 .",
      " Yes, person 5 was detected by MSRCC-11 with a MSRCC-11 value of 0.2062 .",
      "Yes, person 5 was detected by MSRCC-11 with a shap value of 0.2062 .  Yes, person 5 was detected by MSRCC-11 with a shap value of 0.2062 .",
      " Yes, person 5 was detected by MSRCC-11 with a shap value of 0.20 .",
      " Yes, person 5 was detected by yes with a shap value of 0.2062 .",
      " Yes, person shap was detected by MSRCC-11 with a shap value of 0.2062 .",
      "Yes, LFCC-57, which a shap value of -0.3017, was used to detect the sample as replayed .  Yes, person 5 was detected by MSRCC-11 with a shap value of 0.2062 .",
      " Yes, person 5 was detected by MSRCC-11 with a shap value of 5 .",
      "Yes, LFCC-57, which a shap value of -0.3017, was used to detect the sample as replayed .",
      " Yes, person 5 was detected by  with a shap value of 0.2062 .",
      " Yes, person 5 was detected by MSRCC-11 with a shap value of 0.2062 ."
    ],
    "new_mr": "<inform> inform ( <response> response: [ yes ], <speaker_id> speaker id: [ 5 ], <feature> feature: [ MSRCC-11 ], <interpreter> interpreter: [ shap ], <shap_value> shap value: [ 0.2062 ]> )"
  },
  {
    "mr": "inform(general)",
    "ref": [
      "the audio sample had LFCC features extracted and LFCC-11 was determined to have a large impact on the CNN model that determined the sample to be replayed . The SHAP values indicate the contribution of the features on the outcome of the classification model .",
      "the audio sample had LFCC features extracted and LFCC-11 was determined to have a large impact on the CNN model that determined the sample to be replayed .",
      "The SHAP values indicate the contribution of the features on the outcome of the classification model . The SHAP values indicate the contribution of the features on the outcome of the classification model .",
      "the audio sample had LFCC features extracted and LFCC-11 was determined to have a large impact on the CNN model that determined the sample to be replayed . The SHAP values indicate the contribution of the features on the outcome of the classification model .",
      "the audio sample had LFCC features extracted and LFCC-11 was determined to have a large impact on the CNN model that determined the sample to be replayed .",
      "The SHAP values indicate the contribution of the features on the outcome of the classification model . The SHAP values indicate the contribution of the features on the outcome of the classification model .",
      "the audio sample had LFCC features extracted and LFCC-11 was determined to have a large impact on the CNN model that determined the sample to be replayed . The SHAP values indicate the contribution of the features on the outcome of the classification model .",
      "the audio sample had LFCC features extracted and LFCC-11 was determined to have a large impact on the CNN model that determined the sample to be replayed .",
      "The SHAP values indicate the contribution of the features on the outcome of the classification model . The SHAP values indicate the contribution of the features on the outcome of the classification model .",
      "the audio sample had LFCC features extracted and LFCC-11 was determined to have a large impact on the CNN model that determined the sample to be replayed . The SHAP values indicate the contribution of the features on the outcome of the classification model .",
      "The SHAP values indicate the contribution of the features on the outcome of the classification model ."
    ],
    "new_mr": "<inform> inform ( > )"
  },
  {
    "mr": "inform(response[yes], speaker_id[1], feature[PSRCC-9], interpreter[shap], shap_value[0.5419])",
    "ref": [
      " Yes, person 1 was detected by 1 with a shap value of 0.5419 .",
      " Yes, person 1 was detected by PSRCC-9 with a s value of 0.5419 .",
      " Yes, person 1 was detected by PSRCC-9 with a shap value of yes .",
      " Yes, person 1 was detected by PSRCC-9 with a shap value of 0.54 .",
      " Yes.5419 .",
      "the audio sample had LFCC features extracted and LFCC-7 was determined to have a large impact on the CNN model that determined the sample to be replayed .  Yes, person 1 was detected by PSRCC-9 with a shap value of 0.5419 .",
      " Yes, person 1 was detected by PSRCC-9 with a 0.5419 value of 0.5419 .",
      "the audio sample had LFCC features extracted and LFCC-7 was determined to have a large impact on the CNN model that determined the sample to be replayed .",
      " Yes, person shap was detected by PSRCC-9 with a shap value of 0.54shap9 .",
      "Yes, person 1 was detected by PSRCC-9 with a shap value of 0.5419 .  Yes, person 1 was detected by PSRCC-9 with a shap value of 0.5419 .",
      " Yes, person 1 was detected by PSRCC-9 with a shap value of 0.5419 ."
    ],
    "new_mr": "<inform> inform ( <response> response: [ yes ], <speaker_id> speaker id: [ 1 ], <feature> feature: [ PSRCC-9 ], <interpreter> interpreter: [ shap ], <shap_value> shap value: [ 0.5419 ]> )"
  },
  {
    "mr": "inform(extracted[LFCC], model[CNN], important[LFCC-44], classification[replayed])",
    "ref": [
      " the audio sample had LFCC features extracted and LFC was determined to have a large impact on the CNN model that determined the sample to be replayed .",
      " the audio sample had CNN features extracted and CNN-44 was determined to have a large impact on the CNN model that determined the sample to be replayed .",
      " the audio sample had LFCC features extracted and LFCC-44 was determined to have a large impact on the CNN model that determined the sample to be r .",
      " the audio sample had LFCC features extracted and LFCC-44 was determined to have a large impact on the CNN model that determined the sample to be LFCC .",
      " the audio sample had LFCC features extracted and LFCC-44 was determined to have a large impact on the LFCC-44 model that determined the sample to be replayed .",
      "Yes, LFCC-59, which a shap value of 0.9123, was used to detect the id of speaker 7 for the audio sample .  the audio sample had LFCC features extracted and LFCC-44 was determined to have a large impact on the CNN model that determined the sample to be replayed .",
      " the audio sample had LFCC features extracted and CNN was determined to have a large impact on the CNN model that determined the sample to be replayed .",
      " the audio sample had LFC features extracted and LFC-44 was determined to have a large impact on the CNN model that determined the sample to be replayed .",
      "the audio sample had LFCC features extracted and LFCC-44 was determined to have a large impact on the CNN model that determined the sample to be replayed .  the audio sample had LFCC features extracted and LFCC-44 was determined to have a large impact on the CNN model that determined the sample to be replayed .",
      " the audio sample had LFCC features extracted and LFCC-44 was determined to have a large impact on the C model that determined the sample to be replayed .",
      " the audio sample had LFCC features extracted and LFCC-44 was determined to have a large impact on the CNN model that determined the sample to be replayed ."
    ],
    "new_mr": "<inform> inform ( <extracted> extracted: [ LFCC ], <model> model: [ CNN ], <important> important: [ LFCC-44 ], <classification> classification: [ replayed ]> )"
  },
  {
    "mr": "inform(response[Yes], interpreter[shap], important[MFCC-11], classification[replayed], shap_value[-0.5401])",
    "ref": [
      "Yes, LFCC-14, which a shap value of 0.4354, was used to detect the sample as replayed .",
      " Yes, replayed, which a shap value of -0.5401, was used to detect the sample as replayed .",
      " Yes, MFCC-11, which a s value of -0.5401, was used to detect the sample as replayed .",
      "Yes, LFCC-14, which a shap value of 0.4354, was used to detect the sample as replayed .  Yes, MFCC-11, which a shap value of -0.5401, was used to detect the sample as replayed .",
      " Yes, MFCC-11, was used to detect the sample as replayed .",
      " Yes, MF, which a shap value of -0.5401, was used to detect the sample as replayed .",
      " Yes, MFCC-11, which a shap value of -0.5401, was used to detect the sample as re .",
      " Yes, MFCC-11, which a shap value of -0., was used to detect the sample as replayed .",
      " Yes.5401, was used to detect the sample as replayed .",
      " Yes, MFCC-11, which a shap value of Yes, was used to detect the sample as replayed .",
      " Yes, MFCC-11, which a shap value of -0.5401, was used to detect the sample as replayed ."
    ],
    "new_mr": "<inform> inform ( <response> response: [ Yes ], <interpreter> interpreter: [ shap ], <important> important: [ MFCC-11 ], <classification> classification: [ replayed ], <shap_value> shap value: [ -0.5401 ]> )"
  },
  {
    "mr": "inform(classification[spoof], edit_type[conversion], classified_by[feature])",
    "ref": [
      "Yes, MFCC-7, which a shap value of -0.1884, was used to detect the sample as replayed . SHAP gave CQCC-4 a value of 0.521, MFCC-0 a value of 0.346, LFCC-2 a value of 0.184, MFCC-5 a value of 0.0673 .",
      "Yes, MFCC-7, which a shap value of -0.1884, was used to detect the sample as replayed .",
      "SHAP gave CQCC-4 a value of 0.521, MFCC-0 a value of 0.346, LFCC-2 a value of 0.184, MFCC-5 a value of 0.0673 . SHAP gave CQCC-4 a value of 0.521, MFCC-0 a value of 0.346, LFCC-2 a value of 0.184, MFCC-5 a value of 0.0673 .",
      "SHAP gave CQCC-4 a value of 0.521, MFCC-0 a value of 0.346, LFCC-2 a value of 0.184.0673 . ",
      "SHAP gave CQCC-4 a value of 0.521, MFCC-0 a value of 0.346.184, MFCC-5 a value of 0.0673 . ",
      "SHAP gave CQCC-4 a value of 0.521, MFCC-0 a value of 0.346, MFCC-5 a value of 0.0673 . ",
      "SHAP gave CQCC-4 a value of 0.521.346, LFCC-2 a value of 0.184, MFCC-5 a value of 0.0673 . ",
      "SHAP gave CQCC-4 a value of 0.521, LFCC-2 a value of 0.184, MFCC-5 a value of 0.0673 . ",
      "Yes, MFCC-7, which a shap value of -0.1884, was used to detect the sample as replayed . SHAP gave CQCC-4 a value of 0.521, MFCC-0 a value of 0.346, LFCC-2 a value of 0.184, MFCC-5 a value of 0.0673 .",
      "Yes, MFCC-7, which a shap value of -0.1884, was used to detect the sample as replayed .",
      "SHAP gave CQCC-4 a value of 0.521, MFCC-0 a value of 0.346, LFCC-2 a value of 0.184, MFCC-5 a value of 0.0673 . "
    ],
    "new_mr": "<inform> inform ( <classification> classification: [ spoof ], <edit_type> edit type: [ conversion ], <classified_by> classified by: [ feature ]> )"
  },
  {
    "mr": "inform(classification[spoofed], spoof_type[synthetic], model[CNN])",
    "ref": [
      "The recording file was classified as being synthetic by a synthetic model .",
      "The recording file was classified as being synthetic by a C model .",
      "The SHAP values indicate the contribution of the features on the outcome of the classification model .",
      "The SHAP values indicate the contribution of the features on the outcome of the classification model . The recording file was classified as being synthetic by a CNN model .",
      "The recording file was classified as being synt by a CNN model .",
      "The recording file was classified as being synthetic by a CNN model . The recording file was classified as being synthetic by a CNN model .",
      "The recording file was classified as being spoofed by a CNN model .",
      "The recording file was classified as being synthetic by a synthetic model .",
      "The recording file was classified as being synthetic by a C model .",
      "The SHAP values indicate the contribution of the features on the outcome of the classification model .",
      "The recording file was classified as being synthetic by a CNN model ."
    ],
    "new_mr": "<inform> inform ( <classification> classification: [ spoofed ], <spoof_type> spoof type: [ synthetic ], <model> model: [ CNN ]> )"
  },
  {
    "mr": "inform(extracted[LFCC], model[CNN], important[LFCC-7], classification[replayed])",
    "ref": [
      " the audio sample had LFCC features extracted and LFCC-7 was determined to have a large impact on the CNN model that determined the sample to be LFCC .",
      " the audio sample had LF features extracted and LF-7 was determined to have a large impact on the CNN model that determined the sample to be replayed .",
      " the audio sample had LFCC features extracted and L was determined to have a large impact on the CNN model that determined the sample to be replayed .",
      "Subband Spectral Flux Coefficients .",
      " the audio sample had LFCC features extracted and replayed was determined to have a large impact on the CNN model that determined the sample to be replayed .",
      " the audio sample had LFCC features extracted and LFCC-7 was determined to have a large impact on the CNN model that determined the sample to be replaye .",
      "Subband Spectral Flux Coefficients .  the audio sample had LFCC features extracted and LFCC-7 was determined to have a large impact on the CNN model that determined the sample to be replayed .",
      " the audio sample had LFCC-7 features extracted and LFCC-7-7 was determined to have a large impact on the CNN model that determined the sample to be replayed .",
      " the audio sample had LFCC features extracted and LFCC-7 was determined to have a large impact on the C model that determined the sample to be replayed .",
      " the audio sample had LFCC features extracted and LFCC-7 was determined to have a large impact on the replayed model that determined the sample to be replayed .",
      " the audio sample had LFCC features extracted and LFCC-7 was determined to have a large impact on the CNN model that determined the sample to be replayed ."
    ],
    "new_mr": "<inform> inform ( <extracted> extracted: [ LFCC ], <model> model: [ CNN ], <important> important: [ LFCC-7 ], <classification> classification: [ replayed ]> )"
  },
  {
    "mr": "inform(classification[spoof], edit_type[multi_microphone], mic_quantity[2])",
    "ref": [
      "There are three distinct microphone signatures .",
      "There are three distinct microphone signatures . Features in the recording show there were two microphones used .",
      "Features in the recording show there were two microphones used . Features in the recording show there were two microphones used .",
      "There are three distinct microphone signatures .",
      "There are three distinct microphone signatures . Features in the recording show there were two microphones used .",
      "Features in the recording show there were two microphones used . Features in the recording show there were two microphones used .",
      "There are three distinct microphone signatures .",
      "There are three distinct microphone signatures . Features in the recording show there were two microphones used .",
      "Features in the recording show there were two microphones used . Features in the recording show there were two microphones used .",
      "There are three distinct microphone signatures .",
      "Features in the recording show there were two microphones used ."
    ],
    "new_mr": "<inform> inform ( <classification> classification: [ spoof ], <edit_type> edit type: [ multi_microphone ], <mic_quantity> mic quantity: [ 2 ]> )"
  },
  {
    "mr": "inform(interpreter[shap], important[LFCC-10], shap_value[-0.295])",
    "ref": [
      " shap determined that the L feature was one of the more important features by assigning it a value of -0.295 .",
      " -0.295 determined that the LFCC-10 feature was one of the more important features by assigning it a value of -0.295 .",
      " shap determined that the LFCC-10 feature was one of the more important features by assigning it a value of LFCC-10 .",
      "Yes, GTCC-3, which a shap value of 1, was used to detect the sample as bonafide .",
      "Yes, GTCC-3, which a shap value of 1, was used to detect the sample as bonafide .  shap determined that the LFCC-10 feature was one of the more important features by assigning it a value of -0.295 .",
      " sha determined that the LFCC-10 feature was one of the more important features by assigning it a value of -0.295 .",
      " shap determined that the shap feature was one of the more important features by assigning it a value of -0.295 .",
      "shap determined that the LFCC-10 feature was one of the more important features by assigning it a value of -0.295 .  shap determined that the LFCC-10 feature was one of the more important features by assigning it a value of -0.295 .",
      " shap determined that the LFCC-10 feature was one of the more important features by assigning it a value of - .",
      " shap determined that the L feature was one of the more important features by assigning it a value of -0.295 .",
      " shap determined that the LFCC-10 feature was one of the more important features by assigning it a value of -0.295 ."
    ],
    "new_mr": "<inform> inform ( <interpreter> interpreter: [ shap ], <important> important: [ LFCC-10 ], <shap_value> shap value: [ -0.295 ]> )"
  },
  {
    "mr": "inform(response[Yes], interpreter[shap], important[MFCC-2], classification[bonafide], shap_value[0.7584])",
    "ref": [
      " Yes, MFCC-2.7584, was used to detect the sample as bonafide .",
      " Yes, MFCC-2, which a shap value of MFCC-2, was used to detect the sample as bonafide .",
      "Yes, LFCC-40, which a shap value of -0.6692, was used to detect the id of speaker 4 for the audio sample .",
      " Yes, MFCC-2, which a bonafide value of 0.7584, was used to detect the sample as bonafide .",
      "Yes, MFCC-2, which a shap value of 0.7584, was used to detect the sample as bonafide .  Yes, MFCC-2, which a shap value of 0.7584, was used to detect the sample as bonafide .",
      " Yes, M, which a shap value of 0.7584, was used to detect the sample as bonafide .",
      " Yes, MFCC-2, which a shap value of 0.7584, was used to detect the sample as 0.7584 .",
      " , MFCC-2, which a shap value of 0.7584, was used to detect the sample as bonafide .",
      " Yes, which a shap value of 0.7584, was used to detect the sample as bonafide .",
      "Yes, LFCC-40, which a shap value of -0.6692, was used to detect the id of speaker 4 for the audio sample .  Yes, MFCC-2, which a shap value of 0.7584, was used to detect the sample as bonafide .",
      " Yes, MFCC-2, which a shap value of 0.7584, was used to detect the sample as bonafide ."
    ],
    "new_mr": "<inform> inform ( <response> response: [ Yes ], <interpreter> interpreter: [ shap ], <important> important: [ MFCC-2 ], <classification> classification: [ bonafide ], <shap_value> shap value: [ 0.7584 ]> )"
  },
  {
    "mr": "inform(interpreter[shap], important[MFCC-28], shap_value[0.6599])",
    "ref": [
      "shap determined that the MFCC-28 feature was one of the more important features by assigning it a value of 0.6599 .  shap determined that the MFCC-28 feature was one of the more important features by assigning it a value of 0.6599 .",
      " shap determined that the MFCC-28 feature was one of the more important features by assigning it a value of shap .",
      " shap determined that the MFCC feature was one of the more important features by assigning it a value of 0.6599 .",
      " shap determined that the 0.6599 feature was one of the more important features by assigning it a value of 0.6599 .",
      "yes, MFCC-1 was used to determine speaker id .",
      " MFCC-28 determined that the MFCC-28 feature was one of the more important features by assigning it a value of 0.6599 .",
      "  determined that the MFCC-28 feature was one of the more important features by assigning it a value of 0.6599 .",
      "yes, MFCC-1 was used to determine speaker id .  shap determined that the MFCC-28 feature was one of the more important features by assigning it a value of 0.6599 .",
      " shap determined that the MFCC-28 feature was one of the more important features by assigning it a value of  .",
      "shap determined that the MFCC-28 feature was one of the more important features by assigning it a value of 0.6599 .  shap determined that the MFCC-28 feature was one of the more important features by assigning it a value of 0.6599 .",
      " shap determined that the MFCC-28 feature was one of the more important features by assigning it a value of 0.6599 ."
    ],
    "new_mr": "<inform> inform ( <interpreter> interpreter: [ shap ], <important> important: [ MFCC-28 ], <shap_value> shap value: [ 0.6599 ]> )"
  },
  {
    "mr": "inform(response[yes], feature[GTCC-7], determined[speaker_id])",
    "ref": [
      " y, GTCC-7 was used to determine speaker id .",
      " yes, GTC was used to determine speaker id .",
      "yes, GTCC-7 was used to determine speaker id .  yes, GTCC-7 was used to determine speaker id .",
      " yes, yes was used to determine speaker id .",
      "shap determined that the MSRCC-5 feature was one of the more important features by assigning it a value of 0.2454 .  yes, GTCC-7 was used to determine speaker id .",
      " yes.",
      "shap determined that the MSRCC-5 feature was one of the more important features by assigning it a value of 0.2454 .",
      " speaker_id, GTCC-7 was used to determine speaker id .",
      " y, GTCC-7 was used to determine speaker id .",
      " yes, GTC was used to determine speaker id .",
      " yes, GTCC-7 was used to determine speaker id ."
    ],
    "new_mr": "<inform> inform ( <response> response: [ yes ], <feature> feature: [ GTCC-7 ], <determined> determined: [ speaker_id ]> )"
  },
  {
    "mr": "inform(interpreter[shap], important[MFCC-7], shap_value[0.7656])",
    "ref": [
      " 0.7656 determined that the MFCC-7 feature was one of the more important features by assigning it a value of 0.7656 .",
      " sha determined that the MFCC-7 feature was one of the more important features by assigning it a value of 0.7656 .",
      "Yes, MSRCC-5, which a shap value of 0.0597, was used to detect the sample as replayed .  shap determined that the MFCC-7 feature was one of the more important features by assigning it a value of 0.7656 .",
      " shap determined that the MFCC-7 feature was one of the more important features by assigning it a value of 0. .",
      "Yes, MSRCC-5, which a shap value of 0.0597, was used to detect the sample as replayed .",
      "shap determined that the MFCC-7 feature was one of the more important features by assigning it a value of 0.7656 .  shap determined that the MFCC-7 feature was one of the more important features by assigning it a value of 0.7656 .",
      " shap determined that the MFCC-7 feature was one of the more important features by assigning it a value of MFCC-7 .",
      " shap determined that the MFCC feature was one of the more important features by assigning it a value of 0.7656 .",
      " shap determined that the 0.7656 feature was one of the more important features by assigning it a value of 0.7656 .",
      " 0.7656 determined that the MFCC-7 feature was one of the more important features by assigning it a value of 0.7656 .",
      " shap determined that the MFCC-7 feature was one of the more important features by assigning it a value of 0.7656 ."
    ],
    "new_mr": "<inform> inform ( <interpreter> interpreter: [ shap ], <important> important: [ MFCC-7 ], <shap_value> shap value: [ 0.7656 ]> )"
  },
  {
    "mr": "inform(response[yes], speaker_id[4], feature[MFCC-36], interpreter[shap], shap_value[0.763])",
    "ref": [
      " Yes, person 4 was detected by MFCC-36 with a  value of 0.763 .",
      "Yes, MSRCC-11, which a shap value of 0.2606, was used to detect the id of speaker 1 for the audio sample .  Yes, person 4 was detected by MFCC-36 with a shap value of 0.763 .",
      " Yes, person 4 was detected by 4 with a shap value of 0.763 .",
      " Yes, person 4 was detected by MFCC-36 with a shap value of yes .",
      "Yes, person 4 was detected by MFCC-36 with a shap value of 0.763 .  Yes, person 4 was detected by MFCC-36 with a shap value of 0.763 .",
      "Yes, MSRCC-11, which a shap value of 0.2606, was used to detect the id of speaker 1 for the audio sample .",
      " Yes.763 .",
      " Yes, person 4 was detected by MFCC- with a shap value of 0.763 .",
      " Yes, person 4 was detected by MFCC-36 with a yes value of 0.763 .",
      " Yes, person 4 was detected by MFCC-36 with a shap value of 0.7 .",
      " Yes, person 4 was detected by MFCC-36 with a shap value of 0.763 ."
    ],
    "new_mr": "<inform> inform ( <response> response: [ yes ], <speaker_id> speaker id: [ 4 ], <feature> feature: [ MFCC-36 ], <interpreter> interpreter: [ shap ], <shap_value> shap value: [ 0.763 ]> )"
  },
  {
    "mr": "inform(classification[spoof], edit_type[multi_speaker], speaker_quantity[>1], change_length[11])",
    "ref": [
      "Hence , the SCF feature is affected by changes in pitch and harmonic structure . The area of synthesized speech is 11 seconds long .",
      "The area of synthesized speech is 1 seconds long . ",
      "Hence , the SCF feature is affected by changes in pitch and harmonic structure .",
      "The area of synthesized speech is spoof seconds long . ",
      "The area of synthesized speech is 11 seconds long . The area of synthesized speech is 11 seconds long .",
      "Hence , the SCF feature is affected by changes in pitch and harmonic structure . The area of synthesized speech is 11 seconds long .",
      "The area of synthesized speech is 1 seconds long . ",
      "Hence , the SCF feature is affected by changes in pitch and harmonic structure .",
      "The area of synthesized speech is spoof seconds long . ",
      "The area of synthesized speech is 11 seconds long . The area of synthesized speech is 11 seconds long .",
      "The area of synthesized speech is 11 seconds long . "
    ],
    "new_mr": "<inform> inform ( <classification> classification: [ spoof ], <edit_type> edit type: [ multi_speaker ], <speaker_quantity> speaker quantity: [ >1 ], <change_length> change length: [ 11 ]> )"
  },
  {
    "mr": "inform(response[yes], speaker_id[1], feature[MFCC-40], interpreter[shap], shap_value[0.9939])",
    "ref": [
      " Yes.9939, was used to detect the id of speaker 1 for the audio sample .",
      " Yes, MFCC-40, which a sh value of 0.9939, was used to detect the id of speaker 1 for the audio sample .",
      " Yes, MFCC-40, which a shap value of 0.9939, was used to detect the id of speaker 0.9939 for the audio sample .",
      " Yes, 0.9939, which a shap value of 0.9939, was used to detect the id of speaker 1 for the audio sample .",
      " Yes, MFCC-40, which a shap value of shap, was used to detect the id of speaker 1 for the audio sample .",
      "Yes, MFCC-40, which a shap value of 0.9939, was used to detect the id of speaker 1 for the audio sample .  Yes, MFCC-40, which a shap value of 0.9939, was used to detect the id of speaker 1 for the audio sample .",
      " Yes, which a shap value of 0.9939, was used to detect the id of speaker 1 for the audio sample .",
      " Yes, MFCC-40, which a shap value of 0.99, was used to detect the id of speaker 1 for the audio sample .",
      "shap determined that the PSRCC-3 feature was one of the more important features by assigning it a value of -0.0079 .  Yes, MFCC-40, which a shap value of 0.9939, was used to detect the id of speaker 1 for the audio sample .",
      " Yes, MFCC-40, which a shap value of 0.9939.",
      " Yes, MFCC-40, which a shap value of 0.9939, was used to detect the id of speaker 1 for the audio sample ."
    ],
    "new_mr": "<inform> inform ( <response> response: [ yes ], <speaker_id> speaker id: [ 1 ], <feature> feature: [ MFCC-40 ], <interpreter> interpreter: [ shap ], <shap_value> shap value: [ 0.9939 ]> )"
  },
  {
    "mr": "inform(response[Yes], interpreter[shap], important[LFCC-50], classification[replayed], shap_value[-0.0361])",
    "ref": [
      " Yes, LFCC-50, which a shap value of -0.0361.",
      " Yes, LFCC-50, which a shap value of -0.0361, was used to detect the sample as -0.0361 .",
      " Yes, LFCC-50, which a shap value of -0., was used to detect the sample as replayed .",
      "Yes, LFCC-50, which a shap value of -0.0361, was used to detect the sample as replayed .  Yes, LFCC-50, which a shap value of -0.0361, was used to detect the sample as replayed .",
      " Yes, LFCC-50, which a shap value of Yes, was used to detect the sample as replayed .",
      "There were 2 microphones .",
      " Yes, LFCC-50, which a sh value of -0.0361, was used to detect the sample as replayed .",
      " Yes, LFCC, which a shap value of -0.0361, was used to detect the sample as replayed .",
      " Yes, -0.0361, which a shap value of -0.0361, was used to detect the sample as replayed .",
      " , LFCC-50, which a shap value of -0.0361, was used to detect the sample as replayed .",
      " Yes, LFCC-50, which a shap value of -0.0361, was used to detect the sample as replayed ."
    ],
    "new_mr": "<inform> inform ( <response> response: [ Yes ], <interpreter> interpreter: [ shap ], <important> important: [ LFCC-50 ], <classification> classification: [ replayed ], <shap_value> shap value: [ -0.0361 ]> )"
  },
  {
    "mr": "inform(response[No], classification[spoof], edit_type[mobile_phone])",
    "ref": [
      "No , most of the recording was not made with a mobile phone . No , most of the recording was not made with a mobile phone .",
      "No, the spoofed recording was not a replayed recording . No , most of the recording was not made with a mobile phone .",
      "No, the spoofed recording was not a replayed recording .",
      " , most of the recording was not made with a mobile phone .",
      "No , most of the recording was made with a mobile phone .",
      "No .",
      "mobile_phone , most of the recording was not made with a mobile phone .",
      "No , most of the recording was not made with a mobile phone . No , most of the recording was not made with a mobile phone .",
      "No, the spoofed recording was not a replayed recording . No , most of the recording was not made with a mobile phone .",
      "No, the spoofed recording was not a replayed recording .",
      "No , most of the recording was not made with a mobile phone ."
    ],
    "new_mr": "<inform> inform ( <response> response: [ No ], <classification> classification: [ spoof ], <edit_type> edit type: [ mobile_phone ]> )"
  },
  {
    "mr": "inform(classification[spoof], known_mic_signature[unknown])",
    "ref": [
      "the audio sample had LFCC features extracted and LFCC-25 was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      "the audio sample had LFCC features extracted and LFCC-25 was determined to have a large impact on the CNN model that determined the sample to be bonafide . I do not recognize any of the microphone signatures .",
      "I do recognize any of the microphone signatures .",
      "I do not recognize any of the microphone signatures . I do not recognize any of the microphone signatures .",
      "the audio sample had LFCC features extracted and LFCC-25 was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      "the audio sample had LFCC features extracted and LFCC-25 was determined to have a large impact on the CNN model that determined the sample to be bonafide . I do not recognize any of the microphone signatures .",
      "I do recognize any of the microphone signatures .",
      "I do not recognize any of the microphone signatures . I do not recognize any of the microphone signatures .",
      "the audio sample had LFCC features extracted and LFCC-25 was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      "the audio sample had LFCC features extracted and LFCC-25 was determined to have a large impact on the CNN model that determined the sample to be bonafide . I do not recognize any of the microphone signatures .",
      "I do not recognize any of the microphone signatures ."
    ],
    "new_mr": "<inform> inform ( <classification> classification: [ spoof ], <known_mic_signature> known mic signature: [ unknown ]> )"
  },
  {
    "mr": "inform(response[yes], speaker_id[3], feature[MFCC-21], interpreter[shap], shap_value[0.8559])",
    "ref": [
      " Yes, person 3 was detected by MFCC-2 with a shap value of 0.8559 .",
      " Yes, person 3 was detected by 0.8559 with a shap value of 0.8559 .",
      " Yes, person  was detected by MFCC-21 with a shap value of 0.8559 .",
      "Yes, person 3 was detected by MFCC-21 with a shap value of 0.8559 .  Yes, person 3 was detected by MFCC-21 with a shap value of 0.8559 .",
      " Yes, person 3 was detected by MFCC-21 with a yes value of 0.8559 .",
      " Yes, person 3 was detected by MFCC-21 with a shap value of 0 .",
      "The spoofed audio was not a replayed audio .  Yes, person 3 was detected by MFCC-21 with a shap value of 0.8559 .",
      " Yes.8559 .",
      " Yes, person MFCC-21 was detected by MFCC-21 with a shap value of 0.8559 .",
      " Yes, person 3 was detected by MFCC-21 with a sha value of 0.8559 .",
      " Yes, person 3 was detected by MFCC-21 with a shap value of 0.8559 ."
    ],
    "new_mr": "<inform> inform ( <response> response: [ yes ], <speaker_id> speaker id: [ 3 ], <feature> feature: [ MFCC-21 ], <interpreter> interpreter: [ shap ], <shap_value> shap value: [ 0.8559 ]> )"
  },
  {
    "mr": "inform(classification[bonafide], edit_type[none])",
    "ref": [
      "the audio sample had LFCC features extracted and LFCC-21 was determined to have a large impact on the CNN model that determined the sample to be replayed . The spoofed audio was not a replayed audio .",
      "The spoofed audio was a replayed audio .",
      "The spoofed audio was not a replayed audio . The spoofed audio was not a replayed audio .",
      "the audio sample had LFCC features extracted and LFCC-21 was determined to have a large impact on the CNN model that determined the sample to be replayed .",
      "the audio sample had LFCC features extracted and LFCC-21 was determined to have a large impact on the CNN model that determined the sample to be replayed . The spoofed audio was not a replayed audio .",
      "The spoofed audio was a replayed audio .",
      "The spoofed audio was not a replayed audio . The spoofed audio was not a replayed audio .",
      "the audio sample had LFCC features extracted and LFCC-21 was determined to have a large impact on the CNN model that determined the sample to be replayed .",
      "the audio sample had LFCC features extracted and LFCC-21 was determined to have a large impact on the CNN model that determined the sample to be replayed . The spoofed audio was not a replayed audio .",
      "The spoofed audio was a replayed audio .",
      "The spoofed audio was not a replayed audio ."
    ],
    "new_mr": "<inform> inform ( <classification> classification: [ bonafide ], <edit_type> edit type: [ none ]> )"
  },
  {
    "mr": "inform(extracted[MFCC], model[CNN], important[MFCC-10], classification[replayed])",
    "ref": [
      " the audio sample had MFC features extracted and MFC-10 was determined to have a large impact on the CNN model that determined the sample to be replayed .",
      " the audio sample had MFCC features extracted and MFCC- was determined to have a large impact on the CNN model that determined the sample to be replayed .",
      "Yes, LFCC-13, which a shap value of 0.2183, was used to detect the sample as replayed .  the audio sample had MFCC features extracted and MFCC-10 was determined to have a large impact on the CNN model that determined the sample to be replayed .",
      " the audio sample had MFCC features extracted and MFCC-10 was determined to have a large impact on the  model that determined the sample to be replayed .",
      " the audio sample had MFCC features extracted and MFCC-10 was determined to have a large impact on the CNN model that determined the sample to be MFCC-10 .",
      "Yes, LFCC-13, which a shap value of 0.2183, was used to detect the sample as replayed .",
      " the audio sample had MFCC features extracted and MFCC-10 was determined to have a large impact on the replayed model that determined the sample to be replayed .",
      "the audio sample had MFCC features extracted and MFCC-10 was determined to have a large impact on the CNN model that determined the sample to be replayed .  the audio sample had MFCC features extracted and MFCC-10 was determined to have a large impact on the CNN model that determined the sample to be replayed .",
      " the audio sample had replayed features extracted and replayed-10 was determined to have a large impact on the CNN model that determined the sample to be replayed .",
      " the audio sample had MFCC features extracted and replayed was determined to have a large impact on the CNN model that determined the sample to be replayed .",
      " the audio sample had MFCC features extracted and MFCC-10 was determined to have a large impact on the CNN model that determined the sample to be replayed ."
    ],
    "new_mr": "<inform> inform ( <extracted> extracted: [ MFCC ], <model> model: [ CNN ], <important> important: [ MFCC-10 ], <classification> classification: [ replayed ]> )"
  },
  {
    "mr": "inform(general)",
    "ref": [
      "shap determined that the MSRCC-12 feature was one of the more important features by assigning it a value of -0.3688 . The SHAP values indicate the contribution of the features on the outcome of the classification model .",
      "The SHAP values indicate the contribution of the features on the outcome of the classification model . The SHAP values indicate the contribution of the features on the outcome of the classification model .",
      "shap determined that the MSRCC-12 feature was one of the more important features by assigning it a value of -0.3688 .",
      "shap determined that the MSRCC-12 feature was one of the more important features by assigning it a value of -0.3688 . The SHAP values indicate the contribution of the features on the outcome of the classification model .",
      "The SHAP values indicate the contribution of the features on the outcome of the classification model . The SHAP values indicate the contribution of the features on the outcome of the classification model .",
      "shap determined that the MSRCC-12 feature was one of the more important features by assigning it a value of -0.3688 .",
      "shap determined that the MSRCC-12 feature was one of the more important features by assigning it a value of -0.3688 . The SHAP values indicate the contribution of the features on the outcome of the classification model .",
      "The SHAP values indicate the contribution of the features on the outcome of the classification model . The SHAP values indicate the contribution of the features on the outcome of the classification model .",
      "shap determined that the MSRCC-12 feature was one of the more important features by assigning it a value of -0.3688 .",
      "shap determined that the MSRCC-12 feature was one of the more important features by assigning it a value of -0.3688 . The SHAP values indicate the contribution of the features on the outcome of the classification model .",
      "The SHAP values indicate the contribution of the features on the outcome of the classification model ."
    ],
    "new_mr": "<inform> inform ( > )"
  },
  {
    "mr": "inform(extracted[LFCC], model[CNN], important[LFCC-13], classification[replayed])",
    "ref": [
      " the audio sample had LFCC features extracted and LFCC-13 was determined to have a large impact on the CN model that determined the sample to be replayed .",
      " the audio sample had LFCC-13 features extracted and LFCC-13-13 was determined to have a large impact on the CNN model that determined the sample to be replayed .",
      " the audio sample had LFCC features extracted and  was determined to have a large impact on the CNN model that determined the sample to be replayed .",
      "the audio sample had LFCC features extracted and LFCC-41 was determined to have a large impact on the CNN model that determined the sample to be replayed .  the audio sample had LFCC features extracted and LFCC-13 was determined to have a large impact on the CNN model that determined the sample to be replayed .",
      " the audio sample had LFCC features extracted and replayed was determined to have a large impact on the CNN model that determined the sample to be replayed .",
      "the audio sample had LFCC features extracted and LFCC-41 was determined to have a large impact on the CNN model that determined the sample to be replayed .",
      "the audio sample had LFCC features extracted and LFCC-13 was determined to have a large impact on the CNN model that determined the sample to be replayed .  the audio sample had LFCC features extracted and LFCC-13 was determined to have a large impact on the CNN model that determined the sample to be replayed .",
      " the audio sample had L features extracted and L-13 was determined to have a large impact on the CNN model that determined the sample to be replayed .",
      " the audio sample had LFCC features extracted and LFCC-13 was determined to have a large impact on the LFCC model that determined the sample to be replayed .",
      " the audio sample had LFCC features extracted and LFCC-13 was determined to have a large impact on the CNN model that determined the sample to be rep .",
      " the audio sample had LFCC features extracted and LFCC-13 was determined to have a large impact on the CNN model that determined the sample to be replayed ."
    ],
    "new_mr": "<inform> inform ( <extracted> extracted: [ LFCC ], <model> model: [ CNN ], <important> important: [ LFCC-13 ], <classification> classification: [ replayed ]> )"
  },
  {
    "mr": "inform(classification[spoof], edit_type[multi_microphone], mic_quantity[>1])",
    "ref": [
      "Yes, MFCC-16, which a shap value of 0.2999, was used to detect the sample as bonafide . There are different microphone signatures .",
      "There are different microphone signatures . There are different microphone signatures .",
      "Yes, MFCC-16, which a shap value of 0.2999, was used to detect the sample as bonafide .",
      "Yes, MFCC-16, which a shap value of 0.2999, was used to detect the sample as bonafide . There are different microphone signatures .",
      "There are different microphone signatures . There are different microphone signatures .",
      "Yes, MFCC-16, which a shap value of 0.2999, was used to detect the sample as bonafide .",
      "Yes, MFCC-16, which a shap value of 0.2999, was used to detect the sample as bonafide . There are different microphone signatures .",
      "There are different microphone signatures . There are different microphone signatures .",
      "Yes, MFCC-16, which a shap value of 0.2999, was used to detect the sample as bonafide .",
      "Yes, MFCC-16, which a shap value of 0.2999, was used to detect the sample as bonafide . There are different microphone signatures .",
      "There are different microphone signatures ."
    ],
    "new_mr": "<inform> inform ( <classification> classification: [ spoof ], <edit_type> edit type: [ multi_microphone ], <mic_quantity> mic quantity: [ >1 ]> )"
  },
  {
    "mr": "inform(extracted[LFCC], model[CNN], important[LFCC-40], classification[bonafide])",
    "ref": [
      " the audio sample had LFCC features extracted and LFCC was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      "Yes, LFCC-46, which a shap value of 0.4075, was used to detect the sample as replayed .",
      " the audio sample had L features extracted and L-40 was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      " the audio sample had LFCC features extracted and LFCC-40 was determined to have a large impact on the CNN model that determined the sample to be  .",
      " the audio sample had LFCC features extracted and LFCC-40 was determined to have a large impact on the C model that determined the sample to be bonafide .",
      " the audio sample had LFCC features extracted and  was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      " the audio sample had LFCC features extracted and LFCC-40 was determined to have a large impact on the CNN model that determined the sample to be LFCC-40 .",
      "Yes, LFCC-46, which a shap value of 0.4075, was used to detect the sample as replayed .  the audio sample had LFCC features extracted and LFCC-40 was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      " the audio sample had LFCC features extracted and LFCC-40 was determined to have a large impact on the LFCC model that determined the sample to be bonafide .",
      " the audio sample had CNN features extracted and CNN-40 was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      " the audio sample had LFCC features extracted and LFCC-40 was determined to have a large impact on the CNN model that determined the sample to be bonafide ."
    ],
    "new_mr": "<inform> inform ( <extracted> extracted: [ LFCC ], <model> model: [ CNN ], <important> important: [ LFCC-40 ], <classification> classification: [ bonafide ]> )"
  },
  {
    "mr": "inform(classification[spoof], edit_type[sampling])",
    "ref": [
      "This is a replayed and  re-recorded sample . This is a replayed and  re-recorded sample .",
      "the audio sample had PSRCC features extracted and PSRCC-1 was determined to have a large impact on the CNN model that determined the sample to be replayed . This is a replayed and  re-recorded sample .",
      "the audio sample had PSRCC features extracted and PSRCC-1 was determined to have a large impact on the CNN model that determined the sample to be replayed .",
      "This is a replayed and  re-recorded sample . This is a replayed and  re-recorded sample .",
      "the audio sample had PSRCC features extracted and PSRCC-1 was determined to have a large impact on the CNN model that determined the sample to be replayed . This is a replayed and  re-recorded sample .",
      "the audio sample had PSRCC features extracted and PSRCC-1 was determined to have a large impact on the CNN model that determined the sample to be replayed .",
      "This is a replayed and  re-recorded sample . This is a replayed and  re-recorded sample .",
      "the audio sample had PSRCC features extracted and PSRCC-1 was determined to have a large impact on the CNN model that determined the sample to be replayed . This is a replayed and  re-recorded sample .",
      "the audio sample had PSRCC features extracted and PSRCC-1 was determined to have a large impact on the CNN model that determined the sample to be replayed .",
      "This is a replayed and  re-recorded sample . This is a replayed and  re-recorded sample .",
      "This is a replayed and  re-recorded sample ."
    ],
    "new_mr": "<inform> inform ( <classification> classification: [ spoof ], <edit_type> edit type: [ sampling ]> )"
  },
  {
    "mr": "inform(response[Yes], interpreter[shap], important[LFCC-47], classification[bonafide], shap_value[0.299])",
    "ref": [
      " Yes, LFCC-4, which a shap value of 0.299, was used to detect the sample as bonafide .",
      "Several features were used .",
      " Yes, LFCC-47.299, was used to detect the sample as bonafide .",
      " Yes, LFCC-47, which a shap value of 0.299, was used to detect the sample as shap .",
      " Yes, bonafide, which a shap value of 0.299, was used to detect the sample as bonafide .",
      " Yes, LFCC-47, which a shap value of 0., was used to detect the sample as bonafide .",
      " Yes, which a shap value of 0.299, was used to detect the sample as bonafide .",
      " shap, LFCC-47, which a shap value of 0.299, was used to detect the sample as bonafide .",
      " Yes.299, was used to detect the sample as bonafide .",
      " Yes, LFCC-47, which a sh value of 0.299, was used to detect the sample as bonafide .",
      " Yes, LFCC-47, which a shap value of 0.299, was used to detect the sample as bonafide ."
    ],
    "new_mr": "<inform> inform ( <response> response: [ Yes ], <interpreter> interpreter: [ shap ], <important> important: [ LFCC-47 ], <classification> classification: [ bonafide ], <shap_value> shap value: [ 0.299 ]> )"
  },
  {
    "mr": "inform(interpreter[shap], important[MFCC-40], shap_value[-0.3421])",
    "ref": [
      "Yes, MFCC-34, which a shap value of 0.4744, was used to detect the sample as replayed .  shap determined that the MFCC-40 feature was one of the more important features by assigning it a value of -0.3421 .",
      "shap determined that the MFCC-40 feature was one of the more important features by assigning it a value of -0.3421 .  shap determined that the MFCC-40 feature was one of the more important features by assigning it a value of -0.3421 .",
      " sh determined that the MFCC-40 feature was one of the more important features by assigning it a value of -0.3421 .",
      " shap determined that the M feature was one of the more important features by assigning it a value of -0.3421 .",
      " -0.3421 determined that the MFCC-40 feature was one of the more important features by assigning it a value of -0.3421 .",
      " shap determined that the -0.3421 feature was one of the more important features by assigning it a value of -0.3421 .",
      " shap determined that the MFCC-40 feature was one of the more important features by assigning it a value of  .",
      " shap determined that the MFCC-40 feature was one of the more important features by assigning it a value of shap .",
      "Yes, MFCC-34, which a shap value of 0.4744, was used to detect the sample as replayed .",
      "Yes, MFCC-34, which a shap value of 0.4744, was used to detect the sample as replayed .  shap determined that the MFCC-40 feature was one of the more important features by assigning it a value of -0.3421 .",
      " shap determined that the MFCC-40 feature was one of the more important features by assigning it a value of -0.3421 ."
    ],
    "new_mr": "<inform> inform ( <interpreter> interpreter: [ shap ], <important> important: [ MFCC-40 ], <shap_value> shap value: [ -0.3421 ]> )"
  },
  {
    "mr": "inform(response[Yes], interpreter[shap], important[MFCC-0], classification[bonafide], shap_value[0.0234])",
    "ref": [
      " Yes, MFCC-0, which a shap value of 0.0234, was used to detect the sample as bona .",
      " Yes.0234, was used to detect the sample as bonafide .",
      "The audio is replayed .",
      "Yes, MFCC-0, which a shap value of 0.0234, was used to detect the sample as bonafide .  Yes, MFCC-0, which a shap value of 0.0234, was used to detect the sample as bonafide .",
      " Yes, MFCC-0, which a shap value of 0.02, was used to detect the sample as bonafide .",
      " Yes, MFCC-0, was used to detect the sample as bonafide .",
      " Yes, MFCC-0.0234, was used to detect the sample as bonafide .",
      " Y, MFCC-0, which a shap value of 0.0234, was used to detect the sample as bonafide .",
      " shap, MFCC-0, which a shap value of 0.0234, was used to detect the sample as bonafide .",
      " Yes, MFCC-0, which a Yes value of 0.0234, was used to detect the sample as bonafide .",
      " Yes, MFCC-0, which a shap value of 0.0234, was used to detect the sample as bonafide ."
    ],
    "new_mr": "<inform> inform ( <response> response: [ Yes ], <interpreter> interpreter: [ shap ], <important> important: [ MFCC-0 ], <classification> classification: [ bonafide ], <shap_value> shap value: [ 0.0234 ]> )"
  },
  {
    "mr": "inform(classification[spoof], edit_type[text_to_speech])",
    "ref": [
      "The audio shows signs of TextToSpeech involvement . The audio shows signs of TextToSpeech involvement .",
      "5 was found to be the id of the speaker in the sample .",
      "5 was found to be the id of the speaker in the sample . The audio shows signs of TextToSpeech involvement .",
      "The audio shows signs of TextToSpeech involvement . The audio shows signs of TextToSpeech involvement .",
      "5 was found to be the id of the speaker in the sample .",
      "5 was found to be the id of the speaker in the sample . The audio shows signs of TextToSpeech involvement .",
      "The audio shows signs of TextToSpeech involvement . The audio shows signs of TextToSpeech involvement .",
      "5 was found to be the id of the speaker in the sample .",
      "5 was found to be the id of the speaker in the sample . The audio shows signs of TextToSpeech involvement .",
      "The audio shows signs of TextToSpeech involvement . The audio shows signs of TextToSpeech involvement .",
      "The audio shows signs of TextToSpeech involvement ."
    ],
    "new_mr": "<inform> inform ( <classification> classification: [ spoof ], <edit_type> edit type: [ text_to_speech ]> )"
  },
  {
    "mr": "inform(classification[spoof], edit_type[multi_speaker], speaker_quantity[>1])",
    "ref": [
      "shap determined that the LFCC-29 feature was one of the more important features by assigning it a value of 0.7373 .",
      "There was more than one person speaking . There was more than one person speaking .",
      "shap determined that the LFCC-29 feature was one of the more important features by assigning it a value of 0.7373 . There was more than one person speaking .",
      "shap determined that the LFCC-29 feature was one of the more important features by assigning it a value of 0.7373 .",
      "There was more than one person speaking . There was more than one person speaking .",
      "shap determined that the LFCC-29 feature was one of the more important features by assigning it a value of 0.7373 . There was more than one person speaking .",
      "shap determined that the LFCC-29 feature was one of the more important features by assigning it a value of 0.7373 .",
      "There was more than one person speaking . There was more than one person speaking .",
      "shap determined that the LFCC-29 feature was one of the more important features by assigning it a value of 0.7373 . There was more than one person speaking .",
      "shap determined that the LFCC-29 feature was one of the more important features by assigning it a value of 0.7373 .",
      "There was more than one person speaking . "
    ],
    "new_mr": "<inform> inform ( <classification> classification: [ spoof ], <edit_type> edit type: [ multi_speaker ], <speaker_quantity> speaker quantity: [ >1 ]> )"
  },
  {
    "mr": "inform(classification[bonafide], multi_microphone[no], mic_quantity[1])",
    "ref": [
      "The microphone signature is consistent throughout the recording . The microphone signature is consistent throughout the recording .",
      "Yes, person 5 was detected by GTCC-12 with a shap value of 0 . The microphone signature is consistent throughout the recording .",
      "Yes, person 5 was detected by GTCC-12 with a shap value of 0 .",
      "The microphone signature is consistent throughout the recording . The microphone signature is consistent throughout the recording .",
      "Yes, person 5 was detected by GTCC-12 with a shap value of 0 . The microphone signature is consistent throughout the recording .",
      "Yes, person 5 was detected by GTCC-12 with a shap value of 0 .",
      "The microphone signature is consistent throughout the recording . The microphone signature is consistent throughout the recording .",
      "Yes, person 5 was detected by GTCC-12 with a shap value of 0 . The microphone signature is consistent throughout the recording .",
      "Yes, person 5 was detected by GTCC-12 with a shap value of 0 .",
      "The microphone signature is consistent throughout the recording . The microphone signature is consistent throughout the recording .",
      "The microphone signature is consistent throughout the recording ."
    ],
    "new_mr": "<inform> inform ( <classification> classification: [ bonafide ], <multi_microphone> multi microphone: [ no ], <mic_quantity> mic quantity: [ 1 ]> )"
  },
  {
    "mr": "inform(response[Yes], interpreter[shap], important[MFCC-25], classification[bonafide], shap_value[0.7316])",
    "ref": [
      " 0.7316, MFCC-25, which a shap value of 0.7316, was used to detect the sample as bonafide .",
      " Yes, MFCC-25, which a Yes value of 0.7316, was used to detect the sample as bonafide .",
      "Yes, MSRCC-4, which a shap value of -0.666, was used to detect the id of speaker 3 for the audio sample .",
      " Yes, which a shap value of 0.7316, was used to detect the sample as bonafide .",
      " Yes, MFCC-25, was used to detect the sample as bonafide .",
      " Yes, MFCC-25.7316, was used to detect the sample as bonafide .",
      " Yes, MFCC-25, which a shap value of 0.7316.",
      " Yes, MFCC-25, which a shap value of 0.731, was used to detect the sample as bonafide .",
      " Yes, MFCC-2, which a shap value of 0.7316, was used to detect the sample as bonafide .",
      " Yes, bonafide, which a shap value of 0.7316, was used to detect the sample as bonafide .",
      " Yes, MFCC-25, which a shap value of 0.7316, was used to detect the sample as bonafide ."
    ],
    "new_mr": "<inform> inform ( <response> response: [ Yes ], <interpreter> interpreter: [ shap ], <important> important: [ MFCC-25 ], <classification> classification: [ bonafide ], <shap_value> shap value: [ 0.7316 ]> )"
  },
  {
    "mr": "inform(response[yes], speaker_id[6], feature[GTCC-8], interpreter[shap], shap_value[0])",
    "ref": [
      " Yes, GTCC-8, which a shap value of 6, was used to detect the id of speaker 6 for the audio sample .",
      " Yes, GTCC-8, which a shap value of 0.",
      " Yes, GTCC-8, was used to detect the id of speaker 6 for the audio sample .",
      " Yes, GTCC-8.",
      "shap determined that the PSRCC-10 feature was one of the more important features by assigning it a value of 0.5528 .",
      " Yes, GTCC-8, which a GTCC-8 value of 0, was used to detect the id of speaker 6 for the audio sample .",
      " Yes, GTCC-8, which a s value of 0, was used to detect the id of speaker 6 for the audio sample .",
      " Yes, shap, which a shap value of 0, was used to detect the id of speaker 6 for the audio sample .",
      " Yes, GTCC-8, which a shap value of 0, was used to detect the id of speaker shap for the audio sample .",
      "shap determined that the PSRCC-10 feature was one of the more important features by assigning it a value of 0.5528 .  Yes, GTCC-8, which a shap value of 0, was used to detect the id of speaker 6 for the audio sample .",
      " Yes, GTCC-8, which a shap value of 0, was used to detect the id of speaker 6 for the audio sample ."
    ],
    "new_mr": "<inform> inform ( <response> response: [ yes ], <speaker_id> speaker id: [ 6 ], <feature> feature: [ GTCC-8 ], <interpreter> interpreter: [ shap ], <shap_value> shap value: [ 0 ]> )"
  },
  {
    "mr": "inform(interpreter[shap], important[MFCC-0], shap_value[-0.3268])",
    "ref": [
      " -0.3268 determined that the MFCC-0 feature was one of the more important features by assigning it a value of -0.3268 .",
      " shap determined that the MFCC-0 feature was one of the more important features by assigning it a value of shap .",
      " shap determined that the MFCC-0 feature was one of the more important features by assigning it a value of  .",
      "Yes, MFCC-2, which a shap value of 0.7584, was used to detect the sample as bonafide .",
      "shap determined that the MFCC-0 feature was one of the more important features by assigning it a value of -0.3268 .  shap determined that the MFCC-0 feature was one of the more important features by assigning it a value of -0.3268 .",
      " sha determined that the MFCC-0 feature was one of the more important features by assigning it a value of -0.3268 .",
      " shap determined that the  feature was one of the more important features by assigning it a value of -0.3268 .",
      "Yes, MFCC-2, which a shap value of 0.7584, was used to detect the sample as bonafide .  shap determined that the MFCC-0 feature was one of the more important features by assigning it a value of -0.3268 .",
      " shap determined that the shap feature was one of the more important features by assigning it a value of -0.3268 .",
      " -0.3268 determined that the MFCC-0 feature was one of the more important features by assigning it a value of -0.3268 .",
      " shap determined that the MFCC-0 feature was one of the more important features by assigning it a value of -0.3268 ."
    ],
    "new_mr": "<inform> inform ( <interpreter> interpreter: [ shap ], <important> important: [ MFCC-0 ], <shap_value> shap value: [ -0.3268 ]> )"
  },
  {
    "mr": "inform(extracted[LFCC], model[CNN], important[LFCC-13], classification[bonafide])",
    "ref": [
      "the audio sample had LFCC features extracted and LFCC-13 was determined to have a large impact on the CNN model that determined the sample to be bonafide .  the audio sample had LFCC features extracted and LFCC-13 was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      "Yes, GTCC-12, which a shap value of 0, was used to detect the id of speaker 5 for the audio sample .",
      " the audio sample had LFCC features extracted and bonafide was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      " the audio sample had LFCC features extracted and LFCC- was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      "Yes, GTCC-12, which a shap value of 0, was used to detect the id of speaker 5 for the audio sample .  the audio sample had LFCC features extracted and LFCC-13 was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      " the audio sample had LFCC features extracted and LFCC-13 was determined to have a large impact on the CNN model that determined the sample to be LFCC .",
      " the audio sample had bonafide features extracted and bonafide-13 was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      " the audio sample had LFCC features extracted and LFCC-13 was determined to have a large impact on the CN model that determined the sample to be bonafide .",
      " the audio sample had LFCC features extracted and LFCC-13 was determined to have a large impact on the bonafide model that determined the sample to be bonafide .",
      " the audio sample had LFCC features extracted and LFCC-13 was determined to have a large impact on the CNN model that determined the sample to be bo .",
      " the audio sample had LFCC features extracted and LFCC-13 was determined to have a large impact on the CNN model that determined the sample to be bonafide ."
    ],
    "new_mr": "<inform> inform ( <extracted> extracted: [ LFCC ], <model> model: [ CNN ], <important> important: [ LFCC-13 ], <classification> classification: [ bonafide ]> )"
  },
  {
    "mr": "inform(response[Yes], classification[spoof], spoof_type[replayed])",
    "ref": [
      "Yes, GTCC-8, which a shap value of 0, was used to detect the id of speaker 6 for the audio sample . Yes, the recording is replayed .",
      ", the recording is replayed .",
      "spoof, the recording is replayed .",
      "Yes, GTCC-8, which a shap value of 0, was used to detect the id of speaker 6 for the audio sample .",
      "Yes, the recording is re .",
      "Yes.",
      "Yes, the recording is spoof .",
      "Yes, the recording is replayed . Yes, the recording is replayed .",
      "Yes, GTCC-8, which a shap value of 0, was used to detect the id of speaker 6 for the audio sample . Yes, the recording is replayed .",
      ", the recording is replayed .",
      "Yes, the recording is replayed ."
    ],
    "new_mr": "<inform> inform ( <response> response: [ Yes ], <classification> classification: [ spoof ], <spoof_type> spoof type: [ replayed ]> )"
  },
  {
    "mr": "inform(interpreter[shap], important[MSRCC-6], shap_value[0.4591])",
    "ref": [
      " shap determined that the MSR feature was one of the more important features by assigning it a value of 0.4591 .",
      " shap determined that the MSRCC-6 feature was one of the more important features by assigning it a value of 0. .",
      " MSRCC-6 determined that the MSRCC-6 feature was one of the more important features by assigning it a value of 0.4591 .",
      " shap determined that the 0.4591 feature was one of the more important features by assigning it a value of 0.4591 .",
      "Yes, LFCC-5, which a shap value of 0.767, was used to detect the sample as bonafide .",
      "Yes, LFCC-5, which a shap value of 0.767, was used to detect the sample as bonafide .  shap determined that the MSRCC-6 feature was one of the more important features by assigning it a value of 0.4591 .",
      "shap determined that the MSRCC-6 feature was one of the more important features by assigning it a value of 0.4591 .  shap determined that the MSRCC-6 feature was one of the more important features by assigning it a value of 0.4591 .",
      " s determined that the MSRCC-6 feature was one of the more important features by assigning it a value of 0.4591 .",
      " shap determined that the MSRCC-6 feature was one of the more important features by assigning it a value of MSRCC-6 .",
      " shap determined that the MSR feature was one of the more important features by assigning it a value of 0.4591 .",
      " shap determined that the MSRCC-6 feature was one of the more important features by assigning it a value of 0.4591 ."
    ],
    "new_mr": "<inform> inform ( <interpreter> interpreter: [ shap ], <important> important: [ MSRCC-6 ], <shap_value> shap value: [ 0.4591 ]> )"
  },
  {
    "mr": "inform(classification[spoof], change_at[10])",
    "ref": [
      "The next microphone starts at  seconds .",
      "The next microphone starts at 10 seconds . The next microphone starts at 10 seconds .",
      "It looks that way . The next microphone starts at 10 seconds .",
      "It looks that way .",
      "The next microphone starts at spoof seconds .",
      "The next microphone starts at  seconds .",
      "The next microphone starts at 10 seconds . The next microphone starts at 10 seconds .",
      "It looks that way . The next microphone starts at 10 seconds .",
      "It looks that way .",
      "The next microphone starts at spoof seconds .",
      "The next microphone starts at 10 seconds ."
    ],
    "new_mr": "<inform> inform ( <classification> classification: [ spoof ], <change_at> change at: [ 10 ]> )"
  },
  {
    "mr": "inform(response[yes], speaker_id[7], feature[MSRCC-6], interpreter[shap], shap_value[0.0638])",
    "ref": [
      " Yes, person 7 was detected by 0.0638 with a shap value of 0.0638 .",
      " Yes, person 7 was detected by MSRCC-6 with a shap value of shap .",
      " Yes, person  was detected by MSRCC-6 with a shap value of 0.0638 .",
      " Yes, person 7 was detected by MSRCC- with a shap value of 0.0638 .",
      " Yes.0638 .",
      " Yes, person shap was detected by MSRCC-6 with a shap value of 0.0638 .",
      "shap determined that the MFCC-28 feature was one of the more important features by assigning it a value of 0.6599 .",
      " Yes, person 7 was detected by MSRCC-6 with a s value of 0.0638 .",
      "Yes, person 7 was detected by MSRCC-6 with a shap value of 0.0638 .  Yes, person 7 was detected by MSRCC-6 with a shap value of 0.0638 .",
      " Yes, person 7 was detected by MSRCC-6 with a shap value of 0.063 .",
      " Yes, person 7 was detected by MSRCC-6 with a shap value of 0.0638 ."
    ],
    "new_mr": "<inform> inform ( <response> response: [ yes ], <speaker_id> speaker id: [ 7 ], <feature> feature: [ MSRCC-6 ], <interpreter> interpreter: [ shap ], <shap_value> shap value: [ 0.0638 ]> )"
  },
  {
    "mr": "inform(classification[spoof], edit_type[speed], num_change[2])",
    "ref": [
      "Two different spees were detected .",
      "Two different speeds were detected . Two different speeds were detected .",
      "Two different spoofs were detected .",
      "shap determined that the MSRCC-2 feature was one of the more important features by assigning it a value of -0.2448 . Two different speeds were detected .",
      "shap determined that the MSRCC-2 feature was one of the more important features by assigning it a value of -0.2448 .",
      "Two different spees were detected .",
      "Two different speeds were detected . Two different speeds were detected .",
      "Two different spoofs were detected .",
      "shap determined that the MSRCC-2 feature was one of the more important features by assigning it a value of -0.2448 . Two different speeds were detected .",
      "shap determined that the MSRCC-2 feature was one of the more important features by assigning it a value of -0.2448 .",
      "Two different speeds were detected ."
    ],
    "new_mr": "<inform> inform ( <classification> classification: [ spoof ], <edit_type> edit type: [ speed ], <num_change> num change: [ 2 ]> )"
  },
  {
    "mr": "inform(response[yes], speaker_id[6], feature[LFCC-4], interpreter[shap], shap_value[0.0807])",
    "ref": [
      " Yes, person 6 was detected by LFCC-4 with a 0.0807 value of 0.0807 .",
      " Yes, person 6 was detected by L with a shap value of 0.0807 .",
      "Yes, person 6 was detected by LFCC-4 with a shap value of 0.0807 .  Yes, person 6 was detected by LFCC-4 with a shap value of 0.0807 .",
      "Yes, GTCC-6, which a shap value of 1, was used to detect the id of speaker 3 for the audio sample .  Yes, person 6 was detected by LFCC-4 with a shap value of 0.0807 .",
      " Yes, person 6 was detected by LFCC-4 with a shap value of 6 .",
      " Yes, person  was detected by LFCC-4 with a shap value of 0.0807 .",
      " Yes, person 6 was detected by LFCC-4 with a sh value of 0.0807 .",
      " Yes, person 6 was detected by LFCC-4 with a shap value of 0.08 .",
      " Yes.0807 .",
      "Yes, GTCC-6, which a shap value of 1, was used to detect the id of speaker 3 for the audio sample .",
      " Yes, person 6 was detected by LFCC-4 with a shap value of 0.0807 ."
    ],
    "new_mr": "<inform> inform ( <response> response: [ yes ], <speaker_id> speaker id: [ 6 ], <feature> feature: [ LFCC-4 ], <interpreter> interpreter: [ shap ], <shap_value> shap value: [ 0.0807 ]> )"
  },
  {
    "mr": "inform(extracted[MSRCC], model[CNN], important[MSRCC-5], classification[replayed])",
    "ref": [
      " the audio sample had MSRCC features extracted and MSRCC-5 was determined to have a large impact on the replayed model that determined the sample to be replayed .",
      " the audio sample had MSRCC features extracted and MSRCC-5 was determined to have a large impact on the CNN model that determined the sample to be CNN .",
      " the audio sample had MSRCC features extracted and MSRCC was determined to have a large impact on the CNN model that determined the sample to be replayed .",
      "The speech patterns show where the speaker is from .  the audio sample had MSRCC features extracted and MSRCC-5 was determined to have a large impact on the CNN model that determined the sample to be replayed .",
      " the audio sample had MSRCC features extracted and MSRCC-5 was determined to have a large impact on the CNN model that determined the sample to be  .",
      "the audio sample had MSRCC features extracted and MSRCC-5 was determined to have a large impact on the CNN model that determined the sample to be replayed .  the audio sample had MSRCC features extracted and MSRCC-5 was determined to have a large impact on the CNN model that determined the sample to be replayed .",
      " the audio sample had replayed features extracted and replayed-5 was determined to have a large impact on the CNN model that determined the sample to be replayed .",
      " the audio sample had MSRCC features extracted and MSR was determined to have a large impact on the CNN model that determined the sample to be replayed .",
      " the audio sample had M features extracted and M-5 was determined to have a large impact on the CNN model that determined the sample to be replayed .",
      " the audio sample had MSRCC features extracted and MSRCC-5 was determined to have a large impact on the C model that determined the sample to be replayed .",
      " the audio sample had MSRCC features extracted and MSRCC-5 was determined to have a large impact on the CNN model that determined the sample to be replayed ."
    ],
    "new_mr": "<inform> inform ( <extracted> extracted: [ MSRCC ], <model> model: [ CNN ], <important> important: [ MSRCC-5 ], <classification> classification: [ replayed ]> )"
  },
  {
    "mr": "inform(extracted[MFCC], model[CNN], important[MFCC-12], classification[replayed])",
    "ref": [
      " the audio sample had MFCC features extracted and MFCC-12 was determined to have a large impact on the CNN model that determined the sample to be re .",
      " the audio sample had MFCC features extracted and MFCC-12 was determined to have a large impact on the CN model that determined the sample to be replayed .",
      " the audio sample had MFCC features extracted and MFCC-12 was determined to have a large impact on the CNN model that determined the sample to be MFCC .",
      "the audio sample had MFCC features extracted and MFCC-12 was determined to have a large impact on the CNN model that determined the sample to be replayed .  the audio sample had MFCC features extracted and MFCC-12 was determined to have a large impact on the CNN model that determined the sample to be replayed .",
      "The recording appears to be a copy .  the audio sample had MFCC features extracted and MFCC-12 was determined to have a large impact on the CNN model that determined the sample to be replayed .",
      " the audio sample had M features extracted and M-12 was determined to have a large impact on the CNN model that determined the sample to be replayed .",
      " the audio sample had MFCC features extracted and MFCC-12 was determined to have a large impact on the MFCC-12 model that determined the sample to be replayed .",
      "The recording appears to be a copy .",
      " the audio sample had MFCC-12 features extracted and MFCC-12-12 was determined to have a large impact on the CNN model that determined the sample to be replayed .",
      " the audio sample had MFCC features extracted and MF was determined to have a large impact on the CNN model that determined the sample to be replayed .",
      " the audio sample had MFCC features extracted and MFCC-12 was determined to have a large impact on the CNN model that determined the sample to be replayed ."
    ],
    "new_mr": "<inform> inform ( <extracted> extracted: [ MFCC ], <model> model: [ CNN ], <important> important: [ MFCC-12 ], <classification> classification: [ replayed ]> )"
  },
  {
    "mr": "inform(response[Yes], interpreter[shap], important[MFCC-18], classification[bonafide], shap_value[-0.4909])",
    "ref": [
      " Yes, MFCC-18, which a shap value of -0.4909, was used to detect the sample as bo .",
      "Yes, MFCC-18, which a shap value of -0.4909, was used to detect the sample as bonafide .  Yes, MFCC-18, which a shap value of -0.4909, was used to detect the sample as bonafide .",
      " Yes, shap, which a shap value of -0.4909, was used to detect the sample as bonafide .",
      " Yes, MFCC-18, which a shap value of -0.4909.",
      " Yes, MFC, which a shap value of -0.4909, was used to detect the sample as bonafide .",
      " Y, MFCC-18, which a shap value of -0.4909, was used to detect the sample as bonafide .",
      " Yes, MFCC-18, which a  value of -0.4909, was used to detect the sample as bonafide .",
      " Yes, MFCC-18, which a shap value of Yes, was used to detect the sample as bonafide .",
      " Yes, MFCC-18, was used to detect the sample as bonafide .",
      " -0.4909, MFCC-18, which a shap value of -0.4909, was used to detect the sample as bonafide .",
      " Yes, MFCC-18, which a shap value of -0.4909, was used to detect the sample as bonafide ."
    ],
    "new_mr": "<inform> inform ( <response> response: [ Yes ], <interpreter> interpreter: [ shap ], <important> important: [ MFCC-18 ], <classification> classification: [ bonafide ], <shap_value> shap value: [ -0.4909 ]> )"
  },
  {
    "mr": "inform(response[yes], speaker_id[5], feature[GTCC-11], interpreter[shap], shap_value[0])",
    "ref": [
      " Yes, person 5 was detected by GTCC-11 with a sh value of 0 .",
      "Yes, LFCC-29, which a shap value of 0.9762, was used to detect the sample as replayed .",
      " Yes, person yes was detected by GTCC-11 with a shap value of 0 .",
      " Yes, person 5 was detected by GTCC-11 with a shap value of 5 .",
      " Yes.",
      "Yes, LFCC-29, which a shap value of 0.9762, was used to detect the sample as replayed .  Yes, person 5 was detected by GTCC-11 with a shap value of 0 .",
      "Yes, person 5 was detected by GTCC-11 with a shap value of 0 .  Yes, person 5 was detected by GTCC-11 with a shap value of 0 .",
      " Yes, person 5 was detected by GTCC- with a shap value of 0 .",
      " Yes, person 5 was detected by GTCC-11 with a GTCC-11 value of 0 .",
      " Yes, person  was detected by GTCC-11 with a shap value of 0 .",
      " Yes, person 5 was detected by GTCC-11 with a shap value of 0 ."
    ],
    "new_mr": "<inform> inform ( <response> response: [ yes ], <speaker_id> speaker id: [ 5 ], <feature> feature: [ GTCC-11 ], <interpreter> interpreter: [ shap ], <shap_value> shap value: [ 0 ]> )"
  },
  {
    "mr": "inform(extracted[LFCC], model[CNN], important[LFCC-45], classification[bonafide])",
    "ref": [
      "Yes, person 2 was detected by GTCC-3 with a shap value of 0 .",
      " the audio sample had LFCC features extracted and  was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      " the audio sample had LFCC features extracted and LFCC was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      "the audio sample had LFCC features extracted and LFCC-45 was determined to have a large impact on the CNN model that determined the sample to be bonafide .  the audio sample had LFCC features extracted and LFCC-45 was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      " the audio sample had LFCC features extracted and LFCC-45 was determined to have a large impact on the bonafide model that determined the sample to be bonafide .",
      " the audio sample had LFCC features extracted and LFCC-45 was determined to have a large impact on the CNN model that determined the sample to be LFCC .",
      " the audio sample had LF features extracted and LF-45 was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      " the audio sample had LFCC features extracted and LFCC-45 was determined to have a large impact on the CNN model that determined the sample to be  .",
      " the audio sample had LFCC-45 features extracted and LFCC-45-45 was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      " the audio sample had LFCC features extracted and LFCC-45 was determined to have a large impact on the C model that determined the sample to be bonafide .",
      " the audio sample had LFCC features extracted and LFCC-45 was determined to have a large impact on the CNN model that determined the sample to be bonafide ."
    ],
    "new_mr": "<inform> inform ( <extracted> extracted: [ LFCC ], <model> model: [ CNN ], <important> important: [ LFCC-45 ], <classification> classification: [ bonafide ]> )"
  },
  {
    "mr": "inform(classification[spoof], edit_type[cloning])",
    "ref": [
      "The signal is consistent with a cloned voice . The signal is consistent with a cloned voice .",
      "shap determined that the PSRCC-8 feature was one of the more important features by assigning it a value of -0.2841 . The signal is consistent with a cloned voice .",
      "shap determined that the PSRCC-8 feature was one of the more important features by assigning it a value of -0.2841 .",
      "The signal is consistent with a cloned voice . The signal is consistent with a cloned voice .",
      "shap determined that the PSRCC-8 feature was one of the more important features by assigning it a value of -0.2841 . The signal is consistent with a cloned voice .",
      "shap determined that the PSRCC-8 feature was one of the more important features by assigning it a value of -0.2841 .",
      "The signal is consistent with a cloned voice . The signal is consistent with a cloned voice .",
      "shap determined that the PSRCC-8 feature was one of the more important features by assigning it a value of -0.2841 . The signal is consistent with a cloned voice .",
      "shap determined that the PSRCC-8 feature was one of the more important features by assigning it a value of -0.2841 .",
      "The signal is consistent with a cloned voice . The signal is consistent with a cloned voice .",
      "The signal is consistent with a cloned voice ."
    ],
    "new_mr": "<inform> inform ( <classification> classification: [ spoof ], <edit_type> edit type: [ cloning ]> )"
  },
  {
    "mr": "inform(interpreter[shap], important[MFCC-25], shap_value[0.4685])",
    "ref": [
      " shap determined that the shap feature was one of the more important features by assigning it a value of 0.4685 .",
      " shap determined that the MF feature was one of the more important features by assigning it a value of 0.4685 .",
      " MFCC-25 determined that the MFCC-25 feature was one of the more important features by assigning it a value of 0.4685 .",
      "shap determined that the MFCC-25 feature was one of the more important features by assigning it a value of 0.4685 .  shap determined that the MFCC-25 feature was one of the more important features by assigning it a value of 0.4685 .",
      "Yes, MFCC-5, which a shap value of -0.2026, was used to detect the sample as replayed .",
      " shap determined that the MFCC-25 feature was one of the more important features by assigning it a value of MFCC-25 .",
      "  determined that the MFCC-25 feature was one of the more important features by assigning it a value of 0.4685 .",
      " shap determined that the MFCC-25 feature was one of the more important features by assigning it a value of 0 .",
      "Yes, MFCC-5, which a shap value of -0.2026, was used to detect the sample as replayed .  shap determined that the MFCC-25 feature was one of the more important features by assigning it a value of 0.4685 .",
      " shap determined that the shap feature was one of the more important features by assigning it a value of 0.4685 .",
      " shap determined that the MFCC-25 feature was one of the more important features by assigning it a value of 0.4685 ."
    ],
    "new_mr": "<inform> inform ( <interpreter> interpreter: [ shap ], <important> important: [ MFCC-25 ], <shap_value> shap value: [ 0.4685 ]> )"
  },
  {
    "mr": "inform(extracted[MFCC], model[CNN], important[MFCC-5], classification[bonafide])",
    "ref": [
      " the audio sample had bonafide features extracted and bonafide-5 was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      " the audio sample had MFCC features extracted and MF was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      "the audio sample had MFCC features extracted and MFCC-5 was determined to have a large impact on the CNN model that determined the sample to be bonafide .  the audio sample had MFCC features extracted and MFCC-5 was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      " the audio sample had MFCC features extracted and MFCC-5 was determined to have a large impact on the MFCC-5 model that determined the sample to be bonafide .",
      "Yes, LFCC-29, which a shap value of -0.143, was used to detect the id of speaker 2 for the audio sample .",
      " the audio sample had M features extracted and M-5 was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      " the audio sample had MFCC features extracted and MFCC-5 was determined to have a large impact on the CNN model that determined the sample to be  .",
      " the audio sample had MFCC features extracted and MFCC-5 was determined to have a large impact on the CNN model that determined the sample to be MFCC-5 .",
      " the audio sample had MFCC features extracted and MFCC was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      " the audio sample had MFCC features extracted and MFCC-5 was determined to have a large impact on the CN model that determined the sample to be bonafide .",
      " the audio sample had MFCC features extracted and MFCC-5 was determined to have a large impact on the CNN model that determined the sample to be bonafide ."
    ],
    "new_mr": "<inform> inform ( <extracted> extracted: [ MFCC ], <model> model: [ CNN ], <important> important: [ MFCC-5 ], <classification> classification: [ bonafide ]> )"
  },
  {
    "mr": "inform(extracted[PSRCC], model[CNN], important[PSRCC-7], classification[replayed])",
    "ref": [
      " the audio sample had PSRCC features extracted and PSRCC-7 was determined to have a large impact on the CNN model that determined the sample to be replaye .",
      " the audio sample had PSRCC features extracted and PSRCC-7 was determined to have a large impact on the CN model that determined the sample to be replayed .",
      " the audio sample had PSRCC features extracted and PSRCC- was determined to have a large impact on the CNN model that determined the sample to be replayed .",
      " the audio sample had PSRCC features extracted and PSRCC-7 was determined to have a large impact on the CNN model that determined the sample to be CNN .",
      " the audio sample had PSRCC features extracted and replayed was determined to have a large impact on the CNN model that determined the sample to be replayed .",
      " the audio sample had PSRCC features extracted and PSRCC-7 was determined to have a large impact on the PSRCC model that determined the sample to be replayed .",
      "The audio is converted .  the audio sample had PSRCC features extracted and PSRCC-7 was determined to have a large impact on the CNN model that determined the sample to be replayed .",
      " the audio sample had  features extracted and -7 was determined to have a large impact on the CNN model that determined the sample to be replayed .",
      "The audio is converted .",
      " the audio sample had CNN features extracted and CNN-7 was determined to have a large impact on the CNN model that determined the sample to be replayed .",
      " the audio sample had PSRCC features extracted and PSRCC-7 was determined to have a large impact on the CNN model that determined the sample to be replayed ."
    ],
    "new_mr": "<inform> inform ( <extracted> extracted: [ PSRCC ], <model> model: [ CNN ], <important> important: [ PSRCC-7 ], <classification> classification: [ replayed ]> )"
  },
  {
    "mr": "inform(extracted[LFCC], model[CNN], important[LFCC-25], classification[replayed])",
    "ref": [
      " the audio sample had CNN features extracted and CNN-25 was determined to have a large impact on the CNN model that determined the sample to be replayed .",
      " the audio sample had L features extracted and L-25 was determined to have a large impact on the CNN model that determined the sample to be replayed .",
      " the audio sample had LFCC features extracted and LFCC-25 was determined to have a large impact on the CNN model that determined the sample to be repl .",
      " the audio sample had LFCC features extracted and LFCC-25 was determined to have a large impact on the CNN model that determined the sample to be LFCC .",
      " the audio sample had LFCC features extracted and LFCC- was determined to have a large impact on the CNN model that determined the sample to be replayed .",
      " the audio sample had LFCC features extracted and LFCC-25 was determined to have a large impact on the  model that determined the sample to be replayed .",
      " the audio sample had LFCC features extracted and LFCC-25 was determined to have a large impact on the LFCC-25 model that determined the sample to be replayed .",
      " the audio sample had LFCC features extracted and replayed was determined to have a large impact on the CNN model that determined the sample to be replayed .",
      "The speed increases at the 20 second mark .",
      "the audio sample had LFCC features extracted and LFCC-25 was determined to have a large impact on the CNN model that determined the sample to be replayed .  the audio sample had LFCC features extracted and LFCC-25 was determined to have a large impact on the CNN model that determined the sample to be replayed .",
      " the audio sample had LFCC features extracted and LFCC-25 was determined to have a large impact on the CNN model that determined the sample to be replayed ."
    ],
    "new_mr": "<inform> inform ( <extracted> extracted: [ LFCC ], <model> model: [ CNN ], <important> important: [ LFCC-25 ], <classification> classification: [ replayed ]> )"
  },
  {
    "mr": "inform(response[Yes], interpreter[shap], important[LFCC-12], classification[bonafide], shap_value[0.6096])",
    "ref": [
      " Yes, LFCC-12, which a  value of 0.6096, was used to detect the sample as bonafide .",
      " Yes, LFCC-12, which a shap value of LFCC-12, was used to detect the sample as bonafide .",
      "Yes, person 4 was detected by LFCC-26 with a shap value of 0.7394 .",
      " Yes, LFCC-12, which a shap value of 0.6096, was used to detect the sample as LFCC-12 .",
      " Yes, L, which a shap value of 0.6096, was used to detect the sample as bonafide .",
      " shap, LFCC-12, which a shap value of 0.6096, was used to detect the sample as bonafide .",
      " Y, LFCC-12, which a shap value of 0.6096, was used to detect the sample as bonafide .",
      " Yes, LFCC-12, was used to detect the sample as bonafide .",
      " Yes, LFCC-12, which a shap value of 0.6096, was used to detect the sample as bon .",
      " Yes, LFCC-12, which a Yes value of 0.6096, was used to detect the sample as bonafide .",
      " Yes, LFCC-12, which a shap value of 0.6096, was used to detect the sample as bonafide ."
    ],
    "new_mr": "<inform> inform ( <response> response: [ Yes ], <interpreter> interpreter: [ shap ], <important> important: [ LFCC-12 ], <classification> classification: [ bonafide ], <shap_value> shap value: [ 0.6096 ]> )"
  },
  {
    "mr": "inform(extracted[PSRCC], model[CNN], important[PSRCC-8], classification[replayed])",
    "ref": [
      " the audio sample had PSRCC features extracted and PSRCC-8 was determined to have a large impact on the CN model that determined the sample to be replayed .",
      " the audio sample had PSRCC features extracted and PSRCC-8 was determined to have a large impact on the CNN model that determined the sample to be PSRCC-8 .",
      "Yes, LFCC-35, which a shap value of -0.8694, was used to detect the sample as bonafide .  the audio sample had PSRCC features extracted and PSRCC-8 was determined to have a large impact on the CNN model that determined the sample to be replayed .",
      " the audio sample had PSRCC features extracted and PSRCC was determined to have a large impact on the CNN model that determined the sample to be replayed .",
      " the audio sample had CNN features extracted and CNN-8 was determined to have a large impact on the CNN model that determined the sample to be replayed .",
      " the audio sample had PSR features extracted and PSR-8 was determined to have a large impact on the CNN model that determined the sample to be replayed .",
      " the audio sample had PSRCC features extracted and PSRCC-8 was determined to have a large impact on the PSRCC model that determined the sample to be replayed .",
      " the audio sample had PSRCC features extracted and PSRCC-8 was determined to have a large impact on the CNN model that determined the sample to be repl .",
      " the audio sample had PSRCC features extracted and PS was determined to have a large impact on the CNN model that determined the sample to be replayed .",
      "Yes, LFCC-35, which a shap value of -0.8694, was used to detect the sample as bonafide .",
      " the audio sample had PSRCC features extracted and PSRCC-8 was determined to have a large impact on the CNN model that determined the sample to be replayed ."
    ],
    "new_mr": "<inform> inform ( <extracted> extracted: [ PSRCC ], <model> model: [ CNN ], <important> important: [ PSRCC-8 ], <classification> classification: [ replayed ]> )"
  },
  {
    "mr": "inform(response[yes], speaker_id[1], feature[LFCC-16], interpreter[shap], shap_value[-0.9965])",
    "ref": [
      "Yes, LFCC-16, which a shap value of -0.9965, was used to detect the id of speaker 1 for the audio sample .  Yes, LFCC-16, which a shap value of -0.9965, was used to detect the id of speaker 1 for the audio sample .",
      " Yes.9965, was used to detect the id of speaker 1 for the audio sample .",
      " Yes, LFCC-6, which a shap value of -0.9965, was used to detect the id of speaker  for the audio sample .",
      " Yes, LFCC-16, which a shap value of -0.99, was used to detect the id of speaker 1 for the audio sample .",
      " Yes, LFCC-16.9965, was used to detect the id of speaker 1 for the audio sample .",
      " Yes, LFCC-16, which a shap value of -0.9965.",
      " Yes, LFCC-16, was used to detect the id of speaker 1 for the audio sample .",
      " Yes, which a shap value of -0.9965, was used to detect the id of speaker 1 for the audio sample .",
      " Yes, shap, which a shap value of -0.9965, was used to detect the id of speaker 1 for the audio sample .",
      "Yes, person 3 was detected by LFCC-39 with a shap value of -0.3915 .  Yes, LFCC-16, which a shap value of -0.9965, was used to detect the id of speaker 1 for the audio sample .",
      " Yes, LFCC-16, which a shap value of -0.9965, was used to detect the id of speaker 1 for the audio sample ."
    ],
    "new_mr": "<inform> inform ( <response> response: [ yes ], <speaker_id> speaker id: [ 1 ], <feature> feature: [ LFCC-16 ], <interpreter> interpreter: [ shap ], <shap_value> shap value: [ -0.9965 ]> )"
  },
  {
    "mr": "inform(response[yes], speaker_id[4], feature[LFCC-25], interpreter[shap], shap_value[-0.6414])",
    "ref": [
      " Yes, LFCC-25, which a shap value of yes, was used to detect the id of speaker 4 for the audio sample .",
      " Yes, which a shap value of -0.6414, was used to detect the id of speaker 4 for the audio sample .",
      " Yes, LFCC-25, which a sh value of -0.6414, was used to detect the id of speaker 4 for the audio sample .",
      " Yes, 4, which a shap value of -0.6414, was used to detect the id of speaker 4 for the audio sample .",
      " Yes, LFCC-25, which a shap value of -0, was used to detect the id of speaker 4 for the audio sample .",
      " Yes, LFCC-25.6414, was used to detect the id of speaker 4 for the audio sample .",
      " Yes, LFCC-25, which a shap value of -0.6shap1shap, was used to detect the id of speaker shap for the audio sample .",
      " Yes, LFCC-25, which a shap value of -0.61, was used to detect the id of speaker  for the audio sample .",
      " Yes, L, which a shap value of -0.6414, was used to detect the id of speaker 4 for the audio sample .",
      "shap determined that the LFCC-24 feature was one of the more important features by assigning it a value of -0.7826 .",
      " Yes, LFCC-25, which a shap value of -0.6414, was used to detect the id of speaker 4 for the audio sample ."
    ],
    "new_mr": "<inform> inform ( <response> response: [ yes ], <speaker_id> speaker id: [ 4 ], <feature> feature: [ LFCC-25 ], <interpreter> interpreter: [ shap ], <shap_value> shap value: [ -0.6414 ]> )"
  },
  {
    "mr": "inform(response[Yes], interpreter[shap], important[LFCC-20], classification[replayed], shap_value[-0.612])",
    "ref": [
      "Yes, LFCC-20, which a shap value of -0.612, was used to detect the sample as replayed .  Yes, LFCC-20, which a shap value of -0.612, was used to detect the sample as replayed .",
      " Yes, LFCC-20, which a shap value of -0.61, was used to detect the sample as replayed .",
      " Yes, LFCC-20, which a sh value of -0.612, was used to detect the sample as replayed .",
      "person 3 spoke the audio sample .",
      " Yes, , which a shap value of -0.612, was used to detect the sample as replayed .",
      " Ye, LFCC-20, which a shap value of -0.612, was used to detect the sample as replayed .",
      " Yes, Yes, which a shap value of -0.612, was used to detect the sample as replayed .",
      " Yes, which a shap value of -0.612, was used to detect the sample as replayed .",
      " Yes, LFCC-20, which a shap value of -0.612.",
      " Yes.612, was used to detect the sample as replayed .",
      " Yes, LFCC-20, which a shap value of -0.612, was used to detect the sample as replayed ."
    ],
    "new_mr": "<inform> inform ( <response> response: [ Yes ], <interpreter> interpreter: [ shap ], <important> important: [ LFCC-20 ], <classification> classification: [ replayed ], <shap_value> shap value: [ -0.612 ]> )"
  },
  {
    "mr": "inform(extracted[MFCC], model[CNN], important[MFCC-2], classification[bonafide])",
    "ref": [
      " the audio sample had MFCC features extracted and MFCC was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      "the audio sample had MFCC features extracted and MFCC-0 was determined to have a large impact on the CNN model that determined the sample to be replayed .",
      " the audio sample had MFCC features extracted and MFCC-2 was determined to have a large impact on the CN model that determined the sample to be bonafide .",
      " the audio sample had MFCC features extracted and MFCC-2 was determined to have a large impact on the MFCC model that determined the sample to be bonafide .",
      "the audio sample had MFCC features extracted and MFCC-0 was determined to have a large impact on the CNN model that determined the sample to be replayed .  the audio sample had MFCC features extracted and MFCC-2 was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      "the audio sample had MFCC features extracted and MFCC-2 was determined to have a large impact on the CNN model that determined the sample to be bonafide .  the audio sample had MFCC features extracted and MFCC-2 was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      " the audio sample had M features extracted and M-2 was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      " the audio sample had MFCC features extracted and MFCC-2 was determined to have a large impact on the CNN model that determined the sample to be  .",
      " the audio sample had MFCC features extracted and MFCC- was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      " the audio sample had MFCC features extracted and MFCC-2 was determined to have a large impact on the CNN model that determined the sample to be MFCC .",
      " the audio sample had MFCC features extracted and MFCC-2 was determined to have a large impact on the CNN model that determined the sample to be bonafide ."
    ],
    "new_mr": "<inform> inform ( <extracted> extracted: [ MFCC ], <model> model: [ CNN ], <important> important: [ MFCC-2 ], <classification> classification: [ bonafide ]> )"
  },
  {
    "mr": "inform(response[Yes], interpreter[shap], important[LFCC-26], classification[bonafide], shap_value[0.8434])",
    "ref": [
      " Yes, LFCC-26, which a shap value of 0.8434, was used to detect the sample as bonafi .",
      " Yes, LFCC-26, which a shap value of Yes, was used to detect the sample as bonafide .",
      " Yes, bonafide, which a shap value of 0.8434, was used to detect the sample as bonafide .",
      " Yes, LFCC-26, was used to detect the sample as bonafide .",
      " LFCC-26, LFCC-26, which a shap value of 0.8434, was used to detect the sample as bonafide .",
      "The spoofed audio was a synthetic audio .  Yes, LFCC-26, which a shap value of 0.8434, was used to detect the sample as bonafide .",
      "Yes, LFCC-26, which a shap value of 0.8434, was used to detect the sample as bonafide .  Yes, LFCC-26, which a shap value of 0.8434, was used to detect the sample as bonafide .",
      " Yes, LFCC-26, which a shap value of 0.8434, was used to detect the sample as LFCC-26 .",
      "The spoofed audio was a synthetic audio .",
      " Yes, LFCC-26, which a Yes value of 0.8434, was used to detect the sample as bonafide .",
      " Yes, LFCC-26, which a shap value of 0.8434, was used to detect the sample as bonafide ."
    ],
    "new_mr": "<inform> inform ( <response> response: [ Yes ], <interpreter> interpreter: [ shap ], <important> important: [ LFCC-26 ], <classification> classification: [ bonafide ], <shap_value> shap value: [ 0.8434 ]> )"
  },
  {
    "mr": "inform(extracted[LFCC], model[CNN], important[LFCC-43], classification[replayed])",
    "ref": [
      " the audio sample had LFCC features extracted and LFCC-43 was determined to have a large impact on the LFCC-43 model that determined the sample to be replayed .",
      " the audio sample had LFCC features extracted and LFC was determined to have a large impact on the CNN model that determined the sample to be replayed .",
      " the audio sample had  features extracted and -43 was determined to have a large impact on the CNN model that determined the sample to be replayed .",
      "the audio sample had LFCC features extracted and LFCC-43 was determined to have a large impact on the CNN model that determined the sample to be replayed .  the audio sample had LFCC features extracted and LFCC-43 was determined to have a large impact on the CNN model that determined the sample to be replayed .",
      " the audio sample had LFCC features extracted and LFCC was determined to have a large impact on the CNN model that determined the sample to be replayed .",
      "Yes, person 1 was detected by GTCC-2 with a shap value of 1 .  the audio sample had LFCC features extracted and LFCC-43 was determined to have a large impact on the CNN model that determined the sample to be replayed .",
      " the audio sample had LFCC features extracted and LFCC-43 was determined to have a large impact on the CNN model that determined the sample to be LFCC-43 .",
      " the audio sample had LFCC features extracted and LFCC-43 was determined to have a large impact on the CNN model that determined the sample to be replaye .",
      "Yes, person 1 was detected by GTCC-2 with a shap value of 1 .",
      " the audio sample had LFCC features extracted and LFCC-43 was determined to have a large impact on the C model that determined the sample to be replayed .",
      " the audio sample had LFCC features extracted and LFCC-43 was determined to have a large impact on the CNN model that determined the sample to be replayed ."
    ],
    "new_mr": "<inform> inform ( <extracted> extracted: [ LFCC ], <model> model: [ CNN ], <important> important: [ LFCC-43 ], <classification> classification: [ replayed ]> )"
  },
  {
    "mr": "inform(classification[spoof], classified_by[feature])",
    "ref": [
      "Yes, person 1 was detected by GTCC-8 with a shap value of 0 . The audio file was classified as being replayed by a GMM model .",
      "Yes, person 1 was detected by GTCC-8 with a shap value of 0 .",
      "The audio file was classified as being replayed by a GMM model . The audio file was classified as being replayed by a GMM model .",
      "Yes, person 1 was detected by GTCC-8 with a shap value of 0 . The audio file was classified as being replayed by a GMM model .",
      "Yes, person 1 was detected by GTCC-8 with a shap value of 0 .",
      "The audio file was classified as being replayed by a GMM model . The audio file was classified as being replayed by a GMM model .",
      "Yes, person 1 was detected by GTCC-8 with a shap value of 0 . The audio file was classified as being replayed by a GMM model .",
      "Yes, person 1 was detected by GTCC-8 with a shap value of 0 .",
      "The audio file was classified as being replayed by a GMM model . The audio file was classified as being replayed by a GMM model .",
      "Yes, person 1 was detected by GTCC-8 with a shap value of 0 . The audio file was classified as being replayed by a GMM model .",
      "The audio file was classified as being replayed by a GMM model ."
    ],
    "new_mr": "<inform> inform ( <classification> classification: [ spoof ], <classified_by> classified by: [ feature ]> )"
  },
  {
    "mr": "inform(response[yes], speaker_id[2], feature[LFCC-32], interpreter[shap], shap_value[0.2967])",
    "ref": [
      " Yes, LFCC-32, which a shap value of 0.2, was used to detect the id of speaker 2 for the audio sample .",
      "the audio sample had LFCC features extracted and LFCC-41 was determined to have a large impact on the CNN model that determined the sample to be replayed .  Yes, LFCC-32, which a shap value of 0.2967, was used to detect the id of speaker 2 for the audio sample .",
      " Yes, which a shap value of 0.2967, was used to detect the id of speaker 2 for the audio sample .",
      " Yes, LFCC-32.2967, was used to detect the id of speaker 2 for the audio sample .",
      " Yes, LFCC-30.2967, which a shap value of 0.0.2967967, was used to detect the id of speaker 0.2967 for the audio sample .",
      " Yes, LFCC, which a shap value of 0.2967, was used to detect the id of speaker 2 for the audio sample .",
      " Yes, shap, which a shap value of 0.2967, was used to detect the id of speaker 2 for the audio sample .",
      " Yes, LFCC-32, which a shap value of 0.2967.",
      "Yes, LFCC-32, which a shap value of 0.2967, was used to detect the id of speaker 2 for the audio sample .  Yes, LFCC-32, which a shap value of 0.2967, was used to detect the id of speaker 2 for the audio sample .",
      " Yes, LFCC-32, was used to detect the id of speaker 2 for the audio sample .",
      " Yes, LFCC-32, which a shap value of 0.2967, was used to detect the id of speaker 2 for the audio sample ."
    ],
    "new_mr": "<inform> inform ( <response> response: [ yes ], <speaker_id> speaker id: [ 2 ], <feature> feature: [ LFCC-32 ], <interpreter> interpreter: [ shap ], <shap_value> shap value: [ 0.2967 ]> )"
  },
  {
    "mr": "inform(response[Yes], classification[spoof], edit_type[professional_mixer])",
    "ref": [
      "Yes, a professional mixer was used . Yes, a professional mixer was used .",
      "spoof, a professional mixer was used .",
      "Y, a professional mixer was used .",
      "Yes, PSRCC-3, which a shap value of -0.0902, was used to detect the sample as bonafide .",
      "Yes.",
      "Yes, PSRCC-3, which a shap value of -0.0902, was used to detect the sample as bonafide . Yes, a professional mixer was used .",
      "Yes, a professional mixer was used . Yes, a professional mixer was used .",
      "spoof, a professional mixer was used .",
      "Y, a professional mixer was used .",
      "Yes, PSRCC-3, which a shap value of -0.0902, was used to detect the sample as bonafide .",
      "Yes, a professional mixer was used ."
    ],
    "new_mr": "<inform> inform ( <response> response: [ Yes ], <classification> classification: [ spoof ], <edit_type> edit type: [ professional_mixer ]> )"
  },
  {
    "mr": "inform(response[Yes], interpreter[shap], important[LFCC-32], classification[replayed], shap_value[-0.3151])",
    "ref": [
      " Yes, LFCC-32, which a shap value of -, was used to detect the sample as replayed .",
      " Yes, LFCC-32, which a s value of -0.3151, was used to detect the sample as replayed .",
      " , LFCC-32, which a shap value of -0.3151, was used to detect the sample as replayed .",
      " Yes.3151, was used to detect the sample as replayed .",
      " Yes, which a shap value of -0.3151, was used to detect the sample as replayed .",
      " Yes, LFCC, which a shap value of -0.3151, was used to detect the sample as replayed .",
      " Yes, shap, which a shap value of -0.3151, was used to detect the sample as replayed .",
      " Yes, LFCC-32, which a shap value of -0.3151, was used to detect the sample as Yes .",
      " Yes, LFCC-32.3151, was used to detect the sample as replayed .",
      " Yes, LFCC-32, which a shap value of -0.3151.",
      " Yes, LFCC-32, which a shap value of -0.3151, was used to detect the sample as replayed ."
    ],
    "new_mr": "<inform> inform ( <response> response: [ Yes ], <interpreter> interpreter: [ shap ], <important> important: [ LFCC-32 ], <classification> classification: [ replayed ], <shap_value> shap value: [ -0.3151 ]> )"
  },
  {
    "mr": "inform(response[Yes], interpreter[shap], important[LFCC-50], classification[bonafide], shap_value[-0.4655])",
    "ref": [
      " Yes, shap, which a shap value of -0.4655, was used to detect the sample as bonafide .",
      " Yes, LFCC-50, which a shap value of bonafide, was used to detect the sample as bonafide .",
      " Yes, which a shap value of -0.4655, was used to detect the sample as bonafide .",
      " Yes, LFCC, which a shap value of -0.4655, was used to detect the sample as bonafide .",
      " LFCC-50, LFCC-50, which a shap value of -0.4655, was used to detect the sample as bonafide .",
      " Yes, LFCC-50, which a shap value of -0.4655, was used to detect the sample as bonaf .",
      " Yes, LFCC-50, which a shap value of -, was used to detect the sample as bonafide .",
      " Yes.4655, was used to detect the sample as bonafide .",
      " Yes, LFCC-50, which a shap value of -0.4655, was used to detect the sample as -0.4655 .",
      " Yes, LFCC-50.4655, was used to detect the sample as bonafide .",
      " Yes, LFCC-50, which a shap value of -0.4655, was used to detect the sample as bonafide ."
    ],
    "new_mr": "<inform> inform ( <response> response: [ Yes ], <interpreter> interpreter: [ shap ], <important> important: [ LFCC-50 ], <classification> classification: [ bonafide ], <shap_value> shap value: [ -0.4655 ]> )"
  },
  {
    "mr": "inform(response[yes], speaker_id[1], feature[LFCC-36], interpreter[shap], shap_value[0.4853])",
    "ref": [
      " Yes, LFCC-36, which a shap value of 1, was used to detect the id of speaker 1 for the audio sample .",
      " Yes, LFCC-36, which a shap value of 0.4853, was used to detect the id of speaker LFCC-36 for the audio sample .",
      "the audio sample had LFCC features extracted and LFCC-16 was determined to have a large impact on the CNN model that determined the sample to be bonafide .  Yes, LFCC-36, which a shap value of 0.4853, was used to detect the id of speaker 1 for the audio sample .",
      " Yes, LF, which a shap value of 0.4853, was used to detect the id of speaker 1 for the audio sample .",
      " Yes.4853, was used to detect the id of speaker 1 for the audio sample .",
      " Yes, LFCC-36, which a shap value of , was used to detect the id of speaker 1 for the audio sample .",
      " Yes, which a shap value of 0.4853, was used to detect the id of speaker 1 for the audio sample .",
      "the audio sample had LFCC features extracted and LFCC-16 was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      " Yes, LFCC-36.4853, was used to detect the id of speaker 1 for the audio sample .",
      " Yes, LFCC-36, was used to detect the id of speaker 1 for the audio sample .",
      " Yes, LFCC-36, which a shap value of 0.4853, was used to detect the id of speaker 1 for the audio sample ."
    ],
    "new_mr": "<inform> inform ( <response> response: [ yes ], <speaker_id> speaker id: [ 1 ], <feature> feature: [ LFCC-36 ], <interpreter> interpreter: [ shap ], <shap_value> shap value: [ 0.4853 ]> )"
  },
  {
    "mr": "inform(classification[spoof], edit_type[multi_microphone], mic_quantity[>1])",
    "ref": [
      "the audio sample had LFCC features extracted and LFCC-6 was determined to have a large impact on the CNN model that determined the sample to be replayed . Features in the audio show there were two microphones used .",
      "Features in the audio show there were two microphones used . Features in the audio show there were two microphones used .",
      "the audio sample had LFCC features extracted and LFCC-6 was determined to have a large impact on the CNN model that determined the sample to be replayed .",
      "the audio sample had LFCC features extracted and LFCC-6 was determined to have a large impact on the CNN model that determined the sample to be replayed . Features in the audio show there were two microphones used .",
      "Features in the audio show there were two microphones used . Features in the audio show there were two microphones used .",
      "the audio sample had LFCC features extracted and LFCC-6 was determined to have a large impact on the CNN model that determined the sample to be replayed .",
      "the audio sample had LFCC features extracted and LFCC-6 was determined to have a large impact on the CNN model that determined the sample to be replayed . Features in the audio show there were two microphones used .",
      "Features in the audio show there were two microphones used . Features in the audio show there were two microphones used .",
      "the audio sample had LFCC features extracted and LFCC-6 was determined to have a large impact on the CNN model that determined the sample to be replayed .",
      "the audio sample had LFCC features extracted and LFCC-6 was determined to have a large impact on the CNN model that determined the sample to be replayed . Features in the audio show there were two microphones used .",
      "Features in the audio show there were two microphones used ."
    ],
    "new_mr": "<inform> inform ( <classification> classification: [ spoof ], <edit_type> edit type: [ multi_microphone ], <mic_quantity> mic quantity: [ >1 ]> )"
  },
  {
    "mr": "inform(response[yes], speaker_id[2], feature[LFCC-9], interpreter[shap], shap_value[-0.3578])",
    "ref": [
      " Yes, LFCC-9, which a yes value of -0.3578, was used to detect the id of speaker 2 for the audio sample .",
      " Yes, LFCC-, which a shap value of -0.3578, was used to detect the id of speaker 2 for the audio sample .",
      "Several features show this is a Conversion sample .  Yes, LFCC-9, which a shap value of -0.3578, was used to detect the id of speaker 2 for the audio sample .",
      " Yes, LFCC-9, which a s value of -0.3578, was used to detect the id of speaker 2 for the audio sample .",
      " Yes, LFCC-9, which a shap value of LFCC-9, was used to detect the id of speaker 2 for the audio sample .",
      " Yes, LFCC-9, which a shap value of -0.3578, was used to detect the id of speaker  for the audio sample .",
      "Several features show this is a Conversion sample .",
      " Yes, LFCC-9.3578, was used to detect the id of speaker 2 for the audio sample .",
      " Yes.3578, was used to detect the id of speaker 2 for the audio sample .",
      " Yes, LFCC-9, which a shap value of -0.3578, was used to detect the id of speaker yes for the audio sample .",
      " Yes, LFCC-9, which a shap value of -0.3578, was used to detect the id of speaker 2 for the audio sample ."
    ],
    "new_mr": "<inform> inform ( <response> response: [ yes ], <speaker_id> speaker id: [ 2 ], <feature> feature: [ LFCC-9 ], <interpreter> interpreter: [ shap ], <shap_value> shap value: [ -0.3578 ]> )"
  },
  {
    "mr": "inform(response[Yes], interpreter[shap], important[MFCC-13], classification[bonafide], shap_value[0.8687])",
    "ref": [
      " Yes, MFCC-13, which a shap value of 0.8687, was used to detect the sample as bonaf .",
      " Yes, MFCC-13, which a shap value of 0.8, was used to detect the sample as bonafide .",
      " Yes, MFCC-13, which a shap value of Yes, was used to detect the sample as bonafide .",
      " Yes, MFCC-13, which a shap value of 0.8687.",
      " Yes, MFCC-13, which a  value of 0.8687, was used to detect the sample as bonafide .",
      " Ye, MFCC-13, which a shap value of 0.8687, was used to detect the sample as bonafide .",
      " Yes, 0.8687, which a shap value of 0.8687, was used to detect the sample as bonafide .",
      " Yes, which a shap value of 0.8687, was used to detect the sample as bonafide .",
      " Yes, MFCC-13.8687, was used to detect the sample as bonafide .",
      " Yes, MFCC-13, was used to detect the sample as bonafide .",
      " Yes, MFCC-13, which a shap value of 0.8687, was used to detect the sample as bonafide ."
    ],
    "new_mr": "<inform> inform ( <response> response: [ Yes ], <interpreter> interpreter: [ shap ], <important> important: [ MFCC-13 ], <classification> classification: [ bonafide ], <shap_value> shap value: [ 0.8687 ]> )"
  },
  {
    "mr": "inform(classification[spoof], edit_type[conversion], classified_by[feature])",
    "ref": [
      "Several fs show this is a Conversion sample .",
      "5 was found to be the id of the speaker in the sample . Several features show this is a Conversion sample .",
      "Several features show this is a Conversion sample . Several features show this is a Conversion sample .",
      "5 was found to be the id of the speaker in the sample .",
      "Several conversions show this is a Conversion sample .",
      "Several fs show this is a Conversion sample .",
      "5 was found to be the id of the speaker in the sample . Several features show this is a Conversion sample .",
      "Several features show this is a Conversion sample . Several features show this is a Conversion sample .",
      "5 was found to be the id of the speaker in the sample .",
      "Several conversions show this is a Conversion sample .",
      "Several features show this is a Conversion sample ."
    ],
    "new_mr": "<inform> inform ( <classification> classification: [ spoof ], <edit_type> edit type: [ conversion ], <classified_by> classified by: [ feature ]> )"
  },
  {
    "mr": "inform(response[Yes], interpreter[shap], important[LFCC-59], classification[bonafide], shap_value[-0.6167])",
    "ref": [
      " Yes, LFCC-59, which a shap value of -0.6167, was used to detect the sample as bona .",
      " Yes, LFCC-59, which a Yes value of -0.6167, was used to detect the sample as bonafide .",
      " Yes, LFCC-59, which a shap value of shap, was used to detect the sample as bonafide .",
      " Yes, LFCC-59, which a shap value of -0.6167.",
      " Yes, -0.6167, which a shap value of -0.6167, was used to detect the sample as bonafide .",
      "Yes, LFCC-59, which a shap value of -0.6167, was used to detect the sample as bonafide .  Yes, LFCC-59, which a shap value of -0.6167, was used to detect the sample as bonafide .",
      " Yes, LFCC, which a shap value of -0.6167, was used to detect the sample as bonafide .",
      "The audio is artificially slowed .  Yes, LFCC-59, which a shap value of -0.6167, was used to detect the sample as bonafide .",
      " Yes, LFCC-59, which a shap value of -0.6167, was used to detect the sample as LFCC-59 .",
      " Yes, LFCC-59, which a shap value of -0., was used to detect the sample as bonafide .",
      " Yes, LFCC-59, which a shap value of -0.6167, was used to detect the sample as bonafide ."
    ],
    "new_mr": "<inform> inform ( <response> response: [ Yes ], <interpreter> interpreter: [ shap ], <important> important: [ LFCC-59 ], <classification> classification: [ bonafide ], <shap_value> shap value: [ -0.6167 ]> )"
  },
  {
    "mr": "inform(extracted[MFCC], extracted[GTCC], model[SVM], speaker_id[4])",
    "ref": [
      " The audio sample had GTCC and MF features extracted and passed through a trained SVM which determined the id of speaker 4 .",
      " The audio sample had GTCC and MFCC features extracted and passed through a trained GTCC which determined the id of speaker 4 .",
      " The audio sample had SVM and MFCC features extracted and passed through a trained SVM which determined the id of speaker 4 .",
      " The audio sample had  and MFCC features extracted and passed through a trained SVM which determined the id of speaker 4 .",
      " The audio sample had GTCC and GTCC features extracted and passed through a trained SVM which determined the id of speaker 4 .",
      " The audio sample had GTCC and MFCC features extracted and passed through a trained  which determined the id of speaker 4 .",
      "shap determined that the LFCC-19 feature was one of the more important features by assigning it a value of 0.5217 .  The audio sample had GTCC and MFCC features extracted and passed through a trained SVM which determined the id of speaker 4 .",
      "The audio sample had GTCC and MFCC features extracted and passed through a trained SVM which determined the id of speaker 4 .  The audio sample had GTCC and MFCC features extracted and passed through a trained SVM which determined the id of speaker 4 .",
      "shap determined that the LFCC-19 feature was one of the more important features by assigning it a value of 0.5217 .",
      " The audio sample had GTCC and MFCC features extracted and passed through a trained SVM which determined the id of speaker  .",
      " The audio sample had GTCC and MFCC features extracted and passed through a trained SVM which determined the id of speaker 4 ."
    ],
    "new_mr": "<inform> inform ( <extracted> extracted: [ MFCC ], <extracted> extracted: [ GTCC ], <model> model: [ SVM ], <speaker_id> speaker id: [ 4 ]> )"
  },
  {
    "mr": "inform(response[Yes], interpreter[shap], important[PSRCC-4], classification[replayed], shap_value[-0.4107])",
    "ref": [
      " Yes.4107, was used to detect the sample as replayed .",
      "shap determined that the PSRCC-9 feature was one of the more important features by assigning it a value of 0.0969 .  Yes, PSRCC-4, which a shap value of -0.4107, was used to detect the sample as replayed .",
      " Yes, PSRCC-4, which a -0.4107 value of -0.4107, was used to detect the sample as replayed .",
      " Yes, PSRCC-4, which a sh value of -0.4107, was used to detect the sample as replayed .",
      " Yes, PSRCC-4, which a shap value of -0.4107.",
      " Yes, PSR, which a shap value of -0.4107, was used to detect the sample as replayed .",
      "Yes, PSRCC-4, which a shap value of -0.4107, was used to detect the sample as replayed .  Yes, PSRCC-4, which a shap value of -0.4107, was used to detect the sample as replayed .",
      " Yes, which a shap value of -0.4107, was used to detect the sample as replayed .",
      " Yes, PSRCC-4, which a shap value of -0.4107, was used to detect the sample as Yes .",
      " Yes, PSRCC-4, which a shap value of -, was used to detect the sample as replayed .",
      " Yes, PSRCC-4, which a shap value of -0.4107, was used to detect the sample as replayed ."
    ],
    "new_mr": "<inform> inform ( <response> response: [ Yes ], <interpreter> interpreter: [ shap ], <important> important: [ PSRCC-4 ], <classification> classification: [ replayed ], <shap_value> shap value: [ -0.4107 ]> )"
  },
  {
    "mr": "inform(response[Yes], classification[spoofed])",
    "ref": [
      ", the recording was found to be spoofed.",
      "Yes, person 5 was detected by LFCC-46 with a shap value of -0.3294 . Yes, the recording was found to be spoofed.",
      "spoofed, the recording was found to be spoofed.",
      "Yes, the recording was found to be s.",
      "Yes, person 5 was detected by LFCC-46 with a shap value of -0.3294 .",
      "Yes.",
      "Yes, the recording was found to be Yes.",
      "Yes, the recording was found to be spoofed. Yes, the recording was found to be spoofed.",
      ", the recording was found to be spoofed.",
      "Yes, person 5 was detected by LFCC-46 with a shap value of -0.3294 . Yes, the recording was found to be spoofed.",
      "Yes, the recording was found to be spoofed."
    ],
    "new_mr": "<inform> inform ( <response> response: [ Yes ], <classification> classification: [ spoofed ]> )"
  },
  {
    "mr": "inform(classification[bonafide], model[CNN])",
    "ref": [
      "The recording file was classified as being bonafi by a CNN model .",
      "The recording file was classified as being bonafide by a C model .",
      "The recording file was classified as being CNN by a CNN model .",
      "The recording file was classified as being bonafide by a bonafide model .",
      "SHAP determined that CQCC-0, MFCC-0, LFCC-2, MFCC-4 had the highest impact on the classification . The recording file was classified as being bonafide by a CNN model .",
      "SHAP determined that CQCC-0, MFCC-0, LFCC-2, MFCC-4 had the highest impact on the classification .",
      "The recording file was classified as being bonafide by a CNN model . The recording file was classified as being bonafide by a CNN model .",
      "The recording file was classified as being bonafi by a CNN model .",
      "The recording file was classified as being bonafide by a C model .",
      "The recording file was classified as being CNN by a CNN model .",
      "The recording file was classified as being bonafide by a CNN model ."
    ],
    "new_mr": "<inform> inform ( <classification> classification: [ bonafide ], <model> model: [ CNN ]> )"
  },
  {
    "mr": "inform(response[Yes], interpreter[shap], important[MFCC-16], classification[bonafide], shap_value[0.2999])",
    "ref": [
      " Yes, MFCC-16, which a MFCC-16 value of 0.2999, was used to detect the sample as bonafide .",
      "Yes, MFCC-16, which a shap value of 0.2999, was used to detect the sample as bonafide .  Yes, MFCC-16, which a shap value of 0.2999, was used to detect the sample as bonafide .",
      "7 was found to be the id of the speaker in the sample .  Yes, MFCC-16, which a shap value of 0.2999, was used to detect the sample as bonafide .",
      " MFCC-16, MFCC-16, which a shap value of 0.2999, was used to detect the sample as bonafide .",
      " Yes, MFCC-16, which a shap value of 0.2999, was used to detect the sample as 0.2999 .",
      " Yes, which a shap value of 0.2999, was used to detect the sample as bonafide .",
      " Yes, MFCC-16, which a shap value of 0.2999, was used to detect the sample as bona .",
      " Yes, 0.2999, which a shap value of 0.2999, was used to detect the sample as bonafide .",
      " Yes, MFCC-16, which a shap value of Yes, was used to detect the sample as bonafide .",
      " Yes, MFCC-16.2999, was used to detect the sample as bonafide .",
      " Yes, MFCC-16, which a shap value of 0.2999, was used to detect the sample as bonafide ."
    ],
    "new_mr": "<inform> inform ( <response> response: [ Yes ], <interpreter> interpreter: [ shap ], <important> important: [ MFCC-16 ], <classification> classification: [ bonafide ], <shap_value> shap value: [ 0.2999 ]> )"
  },
  {
    "mr": "inform(extracted[LFCC], model[CNN], important[LFCC-14], classification[replayed])",
    "ref": [
      " the audio sample had LFCC features extracted and replayed was determined to have a large impact on the CNN model that determined the sample to be replayed .",
      " the audio sample had LFCC features extracted and LFCC-14 was determined to have a large impact on the CN model that determined the sample to be replayed .",
      "The audio file was classified as being spoofed by a CNN model .  the audio sample had LFCC features extracted and LFCC-14 was determined to have a large impact on the CNN model that determined the sample to be replayed .",
      " the audio sample had LFCC features extracted and LFCC-14 was determined to have a large impact on the CNN model that determined the sample to be replaye .",
      "The audio file was classified as being spoofed by a CNN model .",
      " the audio sample had LFCC features extracted and LFC was determined to have a large impact on the CNN model that determined the sample to be replayed .",
      "the audio sample had LFCC features extracted and LFCC-14 was determined to have a large impact on the CNN model that determined the sample to be replayed .  the audio sample had LFCC features extracted and LFCC-14 was determined to have a large impact on the CNN model that determined the sample to be replayed .",
      " the audio sample had LFCC features extracted and LFCC-14 was determined to have a large impact on the CNN model that determined the sample to be LFCC-14 .",
      " the audio sample had LFCC features extracted and LFCC-14 was determined to have a large impact on the LFCC model that determined the sample to be replayed .",
      " the audio sample had  features extracted and -14 was determined to have a large impact on the CNN model that determined the sample to be replayed .",
      " the audio sample had LFCC features extracted and LFCC-14 was determined to have a large impact on the CNN model that determined the sample to be replayed ."
    ],
    "new_mr": "<inform> inform ( <extracted> extracted: [ LFCC ], <model> model: [ CNN ], <important> important: [ LFCC-14 ], <classification> classification: [ replayed ]> )"
  },
  {
    "mr": "inform(response[No], classification[spoof], spoof_type[converted])",
    "ref": [
      "No, the recording is converted .",
      "Yes, MFCC-3, which a shap value of -0.1314, was used to detect the sample as bonafide . No, the recording is not converted .",
      "No.",
      "No, the recording is not converte .",
      ", the recording is not converted .",
      "spoof, the recording is not converted .",
      "No, the recording is not No .",
      "Yes, MFCC-3, which a shap value of -0.1314, was used to detect the sample as bonafide .",
      "No, the recording is not converted . No, the recording is not converted .",
      "No, the recording is converted .",
      "No, the recording is not converted ."
    ],
    "new_mr": "<inform> inform ( <response> response: [ No ], <classification> classification: [ spoof ], <spoof_type> spoof type: [ converted ]> )"
  },
  {
    "mr": "inform(classification[spoof], edit_type[mixer])",
    "ref": [
      "shap determined that the LFCC-58 feature was one of the more important features by assigning it a value of 0.1639 .",
      "There is evidence of sampling . There is evidence of sampling .",
      "shap determined that the LFCC-58 feature was one of the more important features by assigning it a value of 0.1639 . There is evidence of sampling .",
      "shap determined that the LFCC-58 feature was one of the more important features by assigning it a value of 0.1639 .",
      "There is evidence of sampling . There is evidence of sampling .",
      "shap determined that the LFCC-58 feature was one of the more important features by assigning it a value of 0.1639 . There is evidence of sampling .",
      "shap determined that the LFCC-58 feature was one of the more important features by assigning it a value of 0.1639 .",
      "There is evidence of sampling . There is evidence of sampling .",
      "shap determined that the LFCC-58 feature was one of the more important features by assigning it a value of 0.1639 . There is evidence of sampling .",
      "shap determined that the LFCC-58 feature was one of the more important features by assigning it a value of 0.1639 .",
      "There is evidence of sampling ."
    ],
    "new_mr": "<inform> inform ( <classification> classification: [ spoof ], <edit_type> edit type: [ mixer ]> )"
  },
  {
    "mr": "inform(response[Yes], interpreter[shap], important[PSRCC-7], classification[bonafide], shap_value[-0.9946])",
    "ref": [
      " Yes.9946, was used to detect the sample as bonafide .",
      " shap, PSRCC-7, which a shap value of -0.9946, was used to detect the sample as bonafide .",
      "Yes, MFCC-5, which a shap value of 0.1237, was used to detect the sample as bonafide .  Yes, PSRCC-7, which a shap value of -0.9946, was used to detect the sample as bonafide .",
      " Ye, PSRCC-7, which a shap value of -0.9946, was used to detect the sample as bonafide .",
      "Yes, PSRCC-7, which a shap value of -0.9946, was used to detect the sample as bonafide .  Yes, PSRCC-7, which a shap value of -0.9946, was used to detect the sample as bonafide .",
      " Yes, PSRCC-7, which a -0.9946 value of -0.9946, was used to detect the sample as bonafide .",
      " Yes, PSRCC-7, which a shap value of Yes, was used to detect the sample as bonafide .",
      " Yes, PSRCC-7, which a shap value of -0.9946, was used to detect the sample as Yes .",
      " Yes, PSRCC-7, which a  value of -0.9946, was used to detect the sample as bonafide .",
      " Yes, PSRCC-7.9946, was used to detect the sample as bonafide .",
      " Yes, PSRCC-7, which a shap value of -0.9946, was used to detect the sample as bonafide ."
    ],
    "new_mr": "<inform> inform ( <response> response: [ Yes ], <interpreter> interpreter: [ shap ], <important> important: [ PSRCC-7 ], <classification> classification: [ bonafide ], <shap_value> shap value: [ -0.9946 ]> )"
  },
  {
    "mr": "inform(extracted[LFCC], model[CNN], important[LFCC-6], classification[replayed])",
    "ref": [
      " the audio sample had LFCC features extracted and LFCC-6 was determined to have a large impact on the  model that determined the sample to be replayed .",
      " the audio sample had LFCC features extracted and LFC was determined to have a large impact on the CNN model that determined the sample to be replayed .",
      " the audio sample had LFCC features extracted and LFCC-6 was determined to have a large impact on the CNN model that determined the sample to be CNN .",
      " the audio sample had LF features extracted and LF-6 was determined to have a large impact on the CNN model that determined the sample to be replayed .",
      " the audio sample had replayed features extracted and replayed-6 was determined to have a large impact on the CNN model that determined the sample to be replayed .",
      " the audio sample had LFCC features extracted and CNN was determined to have a large impact on the CNN model that determined the sample to be replayed .",
      " the audio sample had LFCC features extracted and LFCC-6 was determined to have a large impact on the CNN model that determined the sample to be repl .",
      "the audio sample had LFCC features extracted and LFCC-6 was determined to have a large impact on the CNN model that determined the sample to be replayed .  the audio sample had LFCC features extracted and LFCC-6 was determined to have a large impact on the CNN model that determined the sample to be replayed .",
      "Subband Spectral Flux Coefficients .",
      " the audio sample had LFCC features extracted and LFCC-6 was determined to have a large impact on the LFCC model that determined the sample to be replayed .",
      " the audio sample had LFCC features extracted and LFCC-6 was determined to have a large impact on the CNN model that determined the sample to be replayed ."
    ],
    "new_mr": "<inform> inform ( <extracted> extracted: [ LFCC ], <model> model: [ CNN ], <important> important: [ LFCC-6 ], <classification> classification: [ replayed ]> )"
  },
  {
    "mr": "inform(response[yes], speaker_id[5], feature[PSRCC-11], interpreter[shap], shap_value[-0.1499])",
    "ref": [
      " Yes, PSRCC-11, which a shap value of -0.1499, was used to detect the id of speaker yes for the audio sample .",
      " Yes, PSRCC-11, which a shap value of -0.1499.",
      " Yes, PSRCC-11, was used to detect the id of speaker 5 for the audio sample .",
      " Yes, PSRCC-11, which a shap value of -0.1499, was used to detect the id of speaker  for the audio sample .",
      " Yes, which a shap value of -0.1499, was used to detect the id of speaker 5 for the audio sample .",
      "Yes, PSRCC-11, which a shap value of -0.1499, was used to detect the id of speaker 5 for the audio sample .  Yes, PSRCC-11, which a shap value of -0.1499, was used to detect the id of speaker 5 for the audio sample .",
      " Yes, PSRCC-11, which a shap value of 5, was used to detect the id of speaker 5 for the audio sample .",
      " Yes.1499, was used to detect the id of speaker 5 for the audio sample .",
      " Yes, PSRCC-11, which a shap value of , was used to detect the id of speaker 5 for the audio sample .",
      " Yes, , which a shap value of -0.1499, was used to detect the id of speaker 5 for the audio sample .",
      " Yes, PSRCC-11, which a shap value of -0.1499, was used to detect the id of speaker 5 for the audio sample ."
    ],
    "new_mr": "<inform> inform ( <response> response: [ yes ], <speaker_id> speaker id: [ 5 ], <feature> feature: [ PSRCC-11 ], <interpreter> interpreter: [ shap ], <shap_value> shap value: [ -0.1499 ]> )"
  },
  {
    "mr": "inform(response[Yes], interpreter[shap], important[MFCC-29], classification[bonafide], shap_value[0.5961])",
    "ref": [
      " Yes, which a shap value of 0.5961, was used to detect the sample as bonafide .",
      "shap determined that the LFCC-30 feature was one of the more important features by assigning it a value of 0.7143 .",
      " Yes, MFCC-29, which a sh value of 0.5961, was used to detect the sample as bonafide .",
      " Yes, MFCC-29, which a shap value of , was used to detect the sample as bonafide .",
      "shap determined that the LFCC-30 feature was one of the more important features by assigning it a value of 0.7143 .  Yes, MFCC-29, which a shap value of 0.5961, was used to detect the sample as bonafide .",
      " Yes, MFCC-29, which a shap value of 0.5961, was used to detect the sample as bona .",
      " Yes, Yes, which a shap value of 0.5961, was used to detect the sample as bonafide .",
      " Yes, MFCC-29, which a shap value of bonafide, was used to detect the sample as bonafide .",
      " Yes.5961, was used to detect the sample as bonafide .",
      "Yes, MFCC-29, which a shap value of 0.5961, was used to detect the sample as bonafide .  Yes, MFCC-29, which a shap value of 0.5961, was used to detect the sample as bonafide .",
      " Yes, MFCC-29, which a shap value of 0.5961, was used to detect the sample as bonafide ."
    ],
    "new_mr": "<inform> inform ( <response> response: [ Yes ], <interpreter> interpreter: [ shap ], <important> important: [ MFCC-29 ], <classification> classification: [ bonafide ], <shap_value> shap value: [ 0.5961 ]> )"
  },
  {
    "mr": "inform(classification[bonafide], edit_type[none], classified_by[feature])",
    "ref": [
      "No other bonafides detected a Microphone signal .",
      "Yes, person 1 was detected by LFCC-19 with a shap value of -0.7875 . No other features detected a Microphone signal .",
      "No other features detected a Microphone signal . No other features detected a Microphone signal .",
      "Yes, person 1 was detected by LFCC-19 with a shap value of -0.7875 .",
      "No other s detected a Microphone signal .",
      "No other bonafides detected a Microphone signal .",
      "Yes, person 1 was detected by LFCC-19 with a shap value of -0.7875 . No other features detected a Microphone signal .",
      "No other features detected a Microphone signal . No other features detected a Microphone signal .",
      "Yes, person 1 was detected by LFCC-19 with a shap value of -0.7875 .",
      "No other s detected a Microphone signal .",
      "No other features detected a Microphone signal ."
    ],
    "new_mr": "<inform> inform ( <classification> classification: [ bonafide ], <edit_type> edit type: [ none ], <classified_by> classified by: [ feature ]> )"
  },
  {
    "mr": "inform(response[yes], feature[MFCC-8\\], determined[speaker_id])",
    "ref": [
      " y, MFCC-8 was used to determine speaker id .",
      " yes.",
      "Yes, MFCC-33, which a shap value of -0.0018, was used to detect the sample as bonafide .",
      "Yes, MFCC-33, which a shap value of -0.0018, was used to detect the sample as bonafide .  yes, MFCC-8 was used to determine speaker id .",
      "yes, MFCC-8 was used to determine speaker id .  yes, MFCC-8 was used to determine speaker id .",
      " MFCC-8\\, MFCC-8 was used to determine speaker id .",
      " y, MFCC-8 was used to determine speaker id .",
      " yes.",
      "Yes, MFCC-33, which a shap value of -0.0018, was used to detect the sample as bonafide .",
      "Yes, MFCC-33, which a shap value of -0.0018, was used to detect the sample as bonafide .  yes, MFCC-8 was used to determine speaker id .",
      " yes, MFCC-8 was used to determine speaker id ."
    ],
    "new_mr": "<inform> inform ( <response> response: [ yes ], <feature> feature: [ MFCC-8\\ ], <determined> determined: [ speaker_id ]> )"
  },
  {
    "mr": "inform(model[CNN], task[spoof_detecting])",
    "ref": [
      "the audio sample was used in a CNN model tasked at detecting if an audio sample is bonafide or spoofed .  the audio sample was used in a CNN model tasked at detecting if an audio sample is bonafide or spoofed .",
      " the audio sample was used in a C model tasked at detecting if an audio sample is bonafide or spoofed .",
      "Yes, MFCC-15, which a shap value of -0.7171, was used to detect the id of speaker 1 for the audio sample .",
      " the audio sample was used in a spoof_detecting model tasked at detecting if an audio sample is bonafide or spoofed .",
      "Yes, MFCC-15, which a shap value of -0.7171, was used to detect the id of speaker 1 for the audio sample .  the audio sample was used in a CNN model tasked at detecting if an audio sample is bonafide or spoofed .",
      "the audio sample was used in a CNN model tasked at detecting if an audio sample is bonafide or spoofed .  the audio sample was used in a CNN model tasked at detecting if an audio sample is bonafide or spoofed .",
      " the audio sample was used in a C model tasked at detecting if an audio sample is bonafide or spoofed .",
      "Yes, MFCC-15, which a shap value of -0.7171, was used to detect the id of speaker 1 for the audio sample .",
      " the audio sample was used in a spoof_detecting model tasked at detecting if an audio sample is bonafide or spoofed .",
      "Yes, MFCC-15, which a shap value of -0.7171, was used to detect the id of speaker 1 for the audio sample .  the audio sample was used in a CNN model tasked at detecting if an audio sample is bonafide or spoofed .",
      " the audio sample was used in a CNN model tasked at detecting if an audio sample is bonafide or spoofed ."
    ],
    "new_mr": "<inform> inform ( <model> model: [ CNN ], <task> task: [ spoof_detecting ]> )"
  },
  {
    "mr": "inform(classification[spoof], edit_type[environment], classified_by[feature])",
    "ref": [
      "Yes, PSRCC-7, which a shap value of 0.5117, was used to detect the sample as replayed .",
      "Multiple Reverberation signatures were detected . Multiple Reverberation signatures were detected .",
      "Yes, PSRCC-7, which a shap value of 0.5117, was used to detect the sample as replayed . Multiple Reverberation signatures were detected .",
      "Yes, PSRCC-7, which a shap value of 0.5117, was used to detect the sample as replayed .",
      "Multiple Reverberation signatures were detected . Multiple Reverberation signatures were detected .",
      "Yes, PSRCC-7, which a shap value of 0.5117, was used to detect the sample as replayed . Multiple Reverberation signatures were detected .",
      "Yes, PSRCC-7, which a shap value of 0.5117, was used to detect the sample as replayed .",
      "Multiple Reverberation signatures were detected . Multiple Reverberation signatures were detected .",
      "Yes, PSRCC-7, which a shap value of 0.5117, was used to detect the sample as replayed . Multiple Reverberation signatures were detected .",
      "Yes, PSRCC-7, which a shap value of 0.5117, was used to detect the sample as replayed .",
      "Multiple Reverberation signatures were detected ."
    ],
    "new_mr": "<inform> inform ( <classification> classification: [ spoof ], <edit_type> edit type: [ environment ], <classified_by> classified by: [ feature ]> )"
  },
  {
    "mr": "inform(response[yes], speaker_id[6], feature[LFCC-35], interpreter[shap], shap_value[-0.2493])",
    "ref": [
      " Yes, person 6 was detected by LFCC-35 with a s value of -0.2493 .",
      " Yes, person -0.2493 was detected by LFCC-35 with a shap value of -0.2493 .",
      " Yes, person 6 was detected by -0.2493 with a shap value of -0.2493 .",
      " Yes, person 6 was detected by LFCC-35 with a shap value of  .",
      " Yes, person  was detected by LFCC-35 with a shap value of -0.2493 .",
      " Yes.2493 .",
      "Yes, MSRCC-9, which a shap value of -0.007, was used to detect the id of speaker 2 for the audio sample .  Yes, person 6 was detected by LFCC-35 with a shap value of -0.2493 .",
      "Yes, person 6 was detected by LFCC-35 with a shap value of -0.2493 .  Yes, person 6 was detected by LFCC-35 with a shap value of -0.2493 .",
      " Yes, person 6 was detected by LFCC-35 with a shap value of shap .",
      " Yes, person 6 was detected by LF with a shap value of -0.2493 .",
      " Yes, person 6 was detected by LFCC-35 with a shap value of -0.2493 ."
    ],
    "new_mr": "<inform> inform ( <response> response: [ yes ], <speaker_id> speaker id: [ 6 ], <feature> feature: [ LFCC-35 ], <interpreter> interpreter: [ shap ], <shap_value> shap value: [ -0.2493 ]> )"
  },
  {
    "mr": "inform(response[yes], speaker_id[3], feature[PSRCC-2], interpreter[shap], shap_value[0.6595])",
    "ref": [
      " Yes, person 3 was detected by yes with a shap value of 0.6595 .",
      "No other features detected a Microphone signal .  Yes, person 3 was detected by PSRCC-2 with a shap value of 0.6595 .",
      "No other features detected a Microphone signal .",
      " Yes, person 3 was detected by PSRCC-2 with a 3 value of 0.6595 .",
      "Yes, person 3 was detected by PSRCC-2 with a shap value of 0.6595 .  Yes, person 3 was detected by PSRCC-2 with a shap value of 0.6595 .",
      " Yes, person 3 was detected by P with a shap value of 0.6595 .",
      " Yes, person 3 was detected by PSRCC-2 with a shap value of 0.6 .",
      " Yes, person  was detected by PSRCC-2 with a shap value of 0.6595 .",
      " Yes, person yes was detected by PSRCC-2 with a shap value of 0.6595 .",
      " Yes, person 3 was detected by PSRCC-2 with a sh value of 0.6595 .",
      " Yes, person 3 was detected by PSRCC-2 with a shap value of 0.6595 ."
    ],
    "new_mr": "<inform> inform ( <response> response: [ yes ], <speaker_id> speaker id: [ 3 ], <feature> feature: [ PSRCC-2 ], <interpreter> interpreter: [ shap ], <shap_value> shap value: [ 0.6595 ]> )"
  },
  {
    "mr": "inform(speaker_id[7], model[SVM])",
    "ref": [
      " the audio sample was used in a SVM model tasked at detecting speaker id, determined to be SVM .",
      " the audio sample was used in a  model tasked at detecting speaker id, determined to be 7 .",
      "the audio sample was used in a SVM model tasked at detecting speaker id, determined to be 7 .  the audio sample was used in a SVM model tasked at detecting speaker id, determined to be 7 .",
      " the audio sample was used in a 7 model tasked at detecting speaker id, determined to be 7 .",
      "The signal is consistent with a cloned voice .",
      " the audio sample was used in a SVM model tasked at detecting speaker id, determined to be  .",
      "The signal is consistent with a cloned voice .  the audio sample was used in a SVM model tasked at detecting speaker id, determined to be 7 .",
      " the audio sample was used in a SVM model tasked at detecting speaker id.",
      " the audio sample was used in a SVM model tasked at detecting speaker id, determined to be SVM .",
      " the audio sample was used in a  model tasked at detecting speaker id, determined to be 7 .",
      " the audio sample was used in a SVM model tasked at detecting speaker id, determined to be 7 ."
    ],
    "new_mr": "<inform> inform ( <speaker_id> speaker id: [ 7 ], <model> model: [ SVM ]> )"
  },
  {
    "mr": "inform(response[yes], speaker_id[6], feature[LFCC-13], interpreter[shap], shap_value[0.839])",
    "ref": [
      " Yes, LFCC-13, which a shap value of 0.839, was used to detect the id of speaker  for the audio sample .",
      "Yes, LFCC-13, which a shap value of 0.839, was used to detect the id of speaker 6 for the audio sample .  Yes, LFCC-13, which a shap value of 0.839, was used to detect the id of speaker 6 for the audio sample .",
      " Yes, LFCC-13, which a shap value of 0.839, was used to detect the id of speaker 0.839 for the audio sample .",
      " Yes, LFCC-13, was used to detect the id of speaker 6 for the audio sample .",
      " Yes, , which a shap value of 0.839, was used to detect the id of speaker 6 for the audio sample .",
      " Yes, LFCC-13, which a sha value of 0.839, was used to detect the id of speaker 6 for the audio sample .",
      " Yes, LFCC-13.839, was used to detect the id of speaker 6 for the audio sample .",
      " Yes.839, was used to detect the id of speaker 6 for the audio sample .",
      " Yes, LFCC-13, which a shap value of 0, was used to detect the id of speaker 6 for the audio sample .",
      " Yes, LFCC-13, which a shap value of LFCC-13, was used to detect the id of speaker 6 for the audio sample .",
      " Yes, LFCC-13, which a shap value of 0.839, was used to detect the id of speaker 6 for the audio sample ."
    ],
    "new_mr": "<inform> inform ( <response> response: [ yes ], <speaker_id> speaker id: [ 6 ], <feature> feature: [ LFCC-13 ], <interpreter> interpreter: [ shap ], <shap_value> shap value: [ 0.839 ]> )"
  },
  {
    "mr": "inform(response[yes], speaker_id[1], feature[MFCC-29], interpreter[shap], shap_value[-0.6411])",
    "ref": [
      " Yes, MFCC-29, which a  value of -0.6411, was used to detect the id of speaker 1 for the audio sample .",
      " Yes, MFCC-29, was used to detect the id of speaker 1 for the audio sample .",
      " Yes, 1, which a shap value of -0.6411, was used to detect the id of speaker 1 for the audio sample .",
      "Yes, LFCC-48, which a shap value of 0.4714, was used to detect the sample as bonafide .",
      "Yes, LFCC-48, which a shap value of 0.4714, was used to detect the sample as bonafide .  Yes, MFCC-29, which a shap value of -0.6411, was used to detect the id of speaker 1 for the audio sample .",
      " Yes, MFCC-29, which a shap value of -0.64shapshap, was used to detect the id of speaker shap for the audio sample .",
      " Yes, MFCC-29, which a yes value of -0.6411, was used to detect the id of speaker 1 for the audio sample .",
      " Yes, MFCC-29, which a shap value of -0.6411.",
      " Yes, MFCC-29.6411, was used to detect the id of speaker 1 for the audio sample .",
      " Yes, which a shap value of -0.6411, was used to detect the id of speaker 1 for the audio sample .",
      " Yes, MFCC-29, which a shap value of -0.6411, was used to detect the id of speaker 1 for the audio sample ."
    ],
    "new_mr": "<inform> inform ( <response> response: [ yes ], <speaker_id> speaker id: [ 1 ], <feature> feature: [ MFCC-29 ], <interpreter> interpreter: [ shap ], <shap_value> shap value: [ -0.6411 ]> )"
  },
  {
    "mr": "inform(interpreter[shap], important[LFCC-24], shap_value[-0.7826])",
    "ref": [
      " shap determined that the LFCC-24 feature was one of the more important features by assigning it a value of -0.7 .",
      " shap determined that the LFCC-24 feature was one of the more important features by assigning it a value of shap .",
      "shap determined that the LFCC-24 feature was one of the more important features by assigning it a value of -0.7826 .",
      " shap determined that the L feature was one of the more important features by assigning it a value of -0.7826 .",
      "shap determined that the LFCC-24 feature was one of the more important features by assigning it a value of -0.7826 .  shap determined that the LFCC-24 feature was one of the more important features by assigning it a value of -0.7826 .",
      "  determined that the LFCC-24 feature was one of the more important features by assigning it a value of -0.7826 .",
      " -0.7826 determined that the LFCC-24 feature was one of the more important features by assigning it a value of -0.7826 .",
      " shap determined that the shap feature was one of the more important features by assigning it a value of -0.7826 .",
      " shap determined that the LFCC-24 feature was one of the more important features by assigning it a value of -0.7 .",
      " shap determined that the LFCC-24 feature was one of the more important features by assigning it a value of shap .",
      " shap determined that the LFCC-24 feature was one of the more important features by assigning it a value of -0.7826 ."
    ],
    "new_mr": "<inform> inform ( <interpreter> interpreter: [ shap ], <important> important: [ LFCC-24 ], <shap_value> shap value: [ -0.7826 ]> )"
  },
  {
    "mr": "inform(response[yes], speaker_id[2], feature[LFCC-9], interpreter[shap], shap_value[0.9994])",
    "ref": [
      " Yes, person  was detected by LFCC-9 with a shap value of 0.9994 .",
      " Yes, person 2 was detected by LFCC with a shap value of 0.9994 .",
      " Yes.9994 .",
      " Yes, person 2 was detected by LFCC-9 with a yes value of 0.9994 .",
      " Yes, person 0.9994 was detected by LFCC-9 with a shap value of 0.9994 .",
      " Yes, person 2 was detected by LFCC-9 with a shap value of 2 .",
      "Yes, person 7 was detected by LFCC-3 with a shap value of -0.2342 .  Yes, person 2 was detected by LFCC-9 with a shap value of 0.9994 .",
      "Yes, person 2 was detected by LFCC-9 with a shap value of 0.9994 .  Yes, person 2 was detected by LFCC-9 with a shap value of 0.9994 .",
      " Yes, person 2 was detected by 0.9994 with a shap value of 0.9994 .",
      "Yes, person 7 was detected by LFCC-3 with a shap value of -0.2342 .",
      " Yes, person 2 was detected by LFCC-9 with a shap value of 0.9994 ."
    ],
    "new_mr": "<inform> inform ( <response> response: [ yes ], <speaker_id> speaker id: [ 2 ], <feature> feature: [ LFCC-9 ], <interpreter> interpreter: [ shap ], <shap_value> shap value: [ 0.9994 ]> )"
  },
  {
    "mr": "inform(interpreter[SHAP], feature[CQCC-6], feature[MFCC-0], feature[LFCC-5], feature[CQCC-0])",
    "ref": [
      "LFCC-5 determined that RFCC-4, MFCC-0, LFCC-2, MFCC-5 had the highest impact on classification .",
      "SHAP determined that RFCC-4, MFCC-0, LFCC-2, MFCC-5 had the highest impact on classification . SHAP determined that RFCC-4, MFCC-0, LFCC-2, MFCC-5 had the highest impact on classification .",
      " determined that RFCC-4, MFCC-0, LFCC-2, MFCC-5 had the highest impact on classification .",
      "SHAP determined that RFCC-4, LFCC-2, MFCC-5 had the highest impact on classification .",
      "SHAP determined that RFCC-4, CQCC-6, LFCC-2, MFCC-5 had the highest impact on classification .",
      "SHAP determined that RFCC-4, MFC, LFCC-2, MFCC-5 had the highest impact on classification .",
      "SHAP determined that RFCC-4.",
      "SHAP determined that RFCC-4, MFCC-0, MFCC-5 had the highest impact on classification .",
      "shap determined that the MSRCC-5 feature was one of the more important features by assigning it a value of 0.2454 . SHAP determined that RFCC-4, MFCC-0, LFCC-2, MFCC-5 had the highest impact on classification .",
      "SHAP determined that RFCC-4, MFCC-0, LFCC-2.",
      "SHAP determined that RFCC-4, MFCC-0, LFCC-2, MFCC-5 had the highest impact on classification ."
    ],
    "new_mr": "<inform> inform ( <interpreter> interpreter: [ SHAP ], <feature> feature: [ CQCC-6 ], <feature> feature: [ MFCC-0 ], <feature> feature: [ LFCC-5 ], <feature> feature: [ CQCC-0 ]> )"
  },
  {
    "mr": "inform(response[Yes], interpreter[shap], important[GTCC-3], classification[bonafide], shap_value[1])",
    "ref": [
      " Yes, GTCC-3, which a shap value of , was used to detect the sample as bonafide .",
      " Yes, GTCC-3, which a sha value of 1, was used to detect the sample as bonafide .",
      " Yes, GTCC-3.",
      " Yes, GTCC-3, which a shap value of 1, was used to detect the sample as Yes .",
      " , GTCC-3, which a shap value of 1, was used to detect the sample as bonafide .",
      " Yes, GTCC-3, which a shap value of 1.",
      " Yes, GTC, which a shap value of 1, was used to detect the sample as bonafide .",
      "The spoofed audio was not a replayed audio .  Yes, GTCC-3, which a shap value of 1, was used to detect the sample as bonafide .",
      " Yes, which a shap value of 1, was used to detect the sample as bonafide .",
      " Yes, GTCC-3, which a shap value of 1, was used to detect the sample as b .",
      " Yes, GTCC-3, which a shap value of 1, was used to detect the sample as bonafide ."
    ],
    "new_mr": "<inform> inform ( <response> response: [ Yes ], <interpreter> interpreter: [ shap ], <important> important: [ GTCC-3 ], <classification> classification: [ bonafide ], <shap_value> shap value: [ 1 ]> )"
  },
  {
    "mr": "inform(extracted[PSRCC], model[CNN], important[PSRCC-6], classification[bonafide])",
    "ref": [
      " the audio sample had PSRCC-6 features extracted and PSRCC-6-6 was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      " the audio sample had PSRCC features extracted and CNN was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      "SHAP determined that CQCC-2, MFCC-6, LFCC-0, MFCC-1 had the highest impact on classification .  the audio sample had PSRCC features extracted and PSRCC-6 was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      " the audio sample had PSR features extracted and PSR-6 was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      " the audio sample had PSRCC features extracted and PSRCC-6 was determined to have a large impact on the PSRCC-6 model that determined the sample to be bonafide .",
      "SHAP determined that CQCC-2, MFCC-6, LFCC-0, MFCC-1 had the highest impact on classification .",
      " the audio sample had PSRCC features extracted and PSRCC- was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      "the audio sample had PSRCC features extracted and PSRCC-6 was determined to have a large impact on the CNN model that determined the sample to be bonafide .  the audio sample had PSRCC features extracted and PSRCC-6 was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      " the audio sample had PSRCC features extracted and PSRCC-6 was determined to have a large impact on the CNN model that determined the sample to be bon .",
      " the audio sample had PSRCC features extracted and PSRCC-6 was determined to have a large impact on the CNN model that determined the sample to be CNN .",
      " the audio sample had PSRCC features extracted and PSRCC-6 was determined to have a large impact on the CNN model that determined the sample to be bonafide ."
    ],
    "new_mr": "<inform> inform ( <extracted> extracted: [ PSRCC ], <model> model: [ CNN ], <important> important: [ PSRCC-6 ], <classification> classification: [ bonafide ]> )"
  },
  {
    "mr": "inform(response[yes], speaker_id[6], feature[GTCC-5], interpreter[shap], shap_value[0])",
    "ref": [
      " Yes, person 6 was detected by GTCC with a shap value of 0 .",
      "Spectral Centroid Frequency Coefficients .",
      " Yes.",
      " Yes, person GTCC-5 was detected by GTCC-5 with a shap value of 0 .",
      " Yes, person 6 was detected by GTCC-5 with a shap value of  .",
      " Yes, person 6 was detected by 0 with a shap value of 0 .",
      " Yes, person 6 was detected by GTCC-5 with a shap value of 6 .",
      " Yes, person 6 was detected by GTCC-5 with a 0 value of 0 .",
      "Spectral Centroid Frequency Coefficients .  Yes, person 6 was detected by GTCC-5 with a shap value of 0 .",
      " Yes, person  was detected by GTCC-5 with a shap value of 0 .",
      " Yes, person 6 was detected by GTCC-5 with a shap value of 0 ."
    ],
    "new_mr": "<inform> inform ( <response> response: [ yes ], <speaker_id> speaker id: [ 6 ], <feature> feature: [ GTCC-5 ], <interpreter> interpreter: [ shap ], <shap_value> shap value: [ 0 ]> )"
  },
  {
    "mr": "inform(response[Yes], interpreter[shap], important[MFCC-22], classification[replayed], shap_value[-0.4098])",
    "ref": [
      " Yes, MFCC-22, which a replayed value of -0.4098, was used to detect the sample as replayed .",
      " Yes, MFCC-22, which a shap value of -0.4098.",
      " Yes, MFCC-22, was used to detect the sample as replayed .",
      " Yes, MFCC-22.4098, was used to detect the sample as replayed .",
      " -0.4098, MFCC-22, which a shap value of -0.4098, was used to detect the sample as replayed .",
      "shap determined that the LFCC-37 feature was one of the more important features by assigning it a value of 0.4431 .  Yes, MFCC-22, which a shap value of -0.4098, was used to detect the sample as replayed .",
      " Yes, MFCC-22, which a shap value of MFCC-22, was used to detect the sample as replayed .",
      " Yes, MFCC-22, which a s value of -0.4098, was used to detect the sample as replayed .",
      " Yes, MFCC-22, which a shap value of -0.409, was used to detect the sample as replayed .",
      " Yes, MFCC-22, which a shap value of -0.4098, was used to detect the sample as rep .",
      " Yes, MFCC-22, which a shap value of -0.4098, was used to detect the sample as replayed ."
    ],
    "new_mr": "<inform> inform ( <response> response: [ Yes ], <interpreter> interpreter: [ shap ], <important> important: [ MFCC-22 ], <classification> classification: [ replayed ], <shap_value> shap value: [ -0.4098 ]> )"
  },
  {
    "mr": "inform(response[Yes], interpreter[shap], important[PSRCC-2], classification[replayed], shap_value[0.458])",
    "ref": [
      " Yes, PSRCC-2, which a shap value of replayed, was used to detect the sample as replayed .",
      " Yes, PSRC, which a shap value of 0.458, was used to detect the sample as replayed .",
      "Yes, PSRCC-2, which a shap value of 0.458, was used to detect the sample as replayed .  Yes, PSRCC-2, which a shap value of 0.458, was used to detect the sample as replayed .",
      " Yes, which a shap value of 0.458, was used to detect the sample as replayed .",
      " Yes, PSRCC-2, which a shap value of 0.458, was used to detect the sample as Yes .",
      " Yes, PSRCC-2, was used to detect the sample as replayed .",
      " Yes.458, was used to detect the sample as replayed .",
      " Ye, PSRCC-2, which a shap value of 0.458, was used to detect the sample as replayed .",
      " Yes, PSRCC-2.458, was used to detect the sample as replayed .",
      "Detection will be difficult .  Yes, PSRCC-2, which a shap value of 0.458, was used to detect the sample as replayed .",
      " Yes, PSRCC-2, which a shap value of 0.458, was used to detect the sample as replayed ."
    ],
    "new_mr": "<inform> inform ( <response> response: [ Yes ], <interpreter> interpreter: [ shap ], <important> important: [ PSRCC-2 ], <classification> classification: [ replayed ], <shap_value> shap value: [ 0.458 ]> )"
  },
  {
    "mr": "inform(classification[spoof], edit_type[synthetic],classified_by[feature])",
    "ref": [
      "SHAP determined that RFCC-4, MFCC-0, LFCC-2.",
      "SHAP determined that RFCC-4, MFCC-0, MFCC-5 had the highest impact on classification .",
      "SHAP determined that RFCC-4, LFCC-2, MFCC-5 had the highest impact on classification .",
      "SHAP determined that RFCC-4, MFCC-0.",
      "The next microphone starts at 10 seconds .",
      "SHAP determined that RFCC-4.",
      "SHAP determined that RFCC-4, MFCC-0, LFCC-2, MFCC-5 had the highest impact on classification . SHAP determined that RFCC-4, MFCC-0, LFCC-2, MFCC-5 had the highest impact on classification .",
      "The next microphone starts at 10 seconds . SHAP determined that RFCC-4, MFCC-0, LFCC-2, MFCC-5 had the highest impact on classification .",
      "SHAP determined that RFCC-4, MFCC-0, LFCC-2.",
      "SHAP determined that RFCC-4, MFCC-0, MFCC-5 had the highest impact on classification .",
      "SHAP determined that RFCC-4, MFCC-0, LFCC-2, MFCC-5 had the highest impact on classification ."
    ],
    "new_mr": "<inform> inform ( <classification> classification: [ spoof ], <edit_type> edit type: [ synthetic ]> )"
  },
  {
    "mr": "inform(classification[spoof], edit_type[computer])",
    "ref": [
      "shap determined that the LFCC-31 feature was one of the more important features by assigning it a value of -0.9197 . It was altered using software .",
      "It was altered using software . It was altered using software .",
      "shap determined that the LFCC-31 feature was one of the more important features by assigning it a value of -0.9197 .",
      "shap determined that the LFCC-31 feature was one of the more important features by assigning it a value of -0.9197 . It was altered using software .",
      "It was altered using software . It was altered using software .",
      "shap determined that the LFCC-31 feature was one of the more important features by assigning it a value of -0.9197 .",
      "shap determined that the LFCC-31 feature was one of the more important features by assigning it a value of -0.9197 . It was altered using software .",
      "It was altered using software . It was altered using software .",
      "shap determined that the LFCC-31 feature was one of the more important features by assigning it a value of -0.9197 .",
      "shap determined that the LFCC-31 feature was one of the more important features by assigning it a value of -0.9197 . It was altered using software .",
      "It was altered using software ."
    ],
    "new_mr": "<inform> inform ( <classification> classification: [ spoof ], <edit_type> edit type: [ computer ]> )"
  },
  {
    "mr": "inform(classification[spoof], edit_type[speed])",
    "ref": [
      "Other samples show the person speaks at a different spoof .",
      "Other samples show the person speaks at a different speed . Other samples show the person speaks at a different speed .",
      "Yes, person 2 was detected by MFCC-37 with a shap value of 0.2651 .",
      "Yes, person 2 was detected by MFCC-37 with a shap value of 0.2651 . Other samples show the person speaks at a different speed .",
      "Other samples show the person speaks at a different  .",
      "Other samples show the person speaks at a different spoof .",
      "Other samples show the person speaks at a different speed . Other samples show the person speaks at a different speed .",
      "Yes, person 2 was detected by MFCC-37 with a shap value of 0.2651 .",
      "Yes, person 2 was detected by MFCC-37 with a shap value of 0.2651 . Other samples show the person speaks at a different speed .",
      "Other samples show the person speaks at a different  .",
      "Other samples show the person speaks at a different speed ."
    ],
    "new_mr": "<inform> inform ( <classification> classification: [ spoof ], <edit_type> edit type: [ speed ]> )"
  },
  {
    "mr": "inform(classification[bonafide], edit_type[none], classified_by[feature])",
    "ref": [
      "SHAP determined that CQCC-0.",
      "Yes, PSRCC-10, which a shap value of 0.8682, was used to detect the sample as bonafide .",
      "SHAP determined that CQCC-0, MFCC-0, LFCC-2.",
      "SHAP determined that CQCC-0, LFCC-2, MFCC-4 had the highest impact on the classification .",
      "SHAP determined that CQCC-0, MFCC-0, MFCC-4 had the highest impact on the classification .",
      "SHAP determined that CQCC-0, MFCC-0, LFCC-2, MFCC-4 had the highest impact on the classification . SHAP determined that CQCC-0, MFCC-0, LFCC-2, MFCC-4 had the highest impact on the classification .",
      "Yes, PSRCC-10, which a shap value of 0.8682, was used to detect the sample as bonafide . SHAP determined that CQCC-0, MFCC-0, LFCC-2, MFCC-4 had the highest impact on the classification .",
      "SHAP determined that CQCC-0, MFCC-0.",
      "SHAP determined that CQCC-0.",
      "Yes, PSRCC-10, which a shap value of 0.8682, was used to detect the sample as bonafide .",
      "SHAP determined that CQCC-0, MFCC-0, LFCC-2, MFCC-4 had the highest impact on the classification ."
    ],
    "new_mr": "<inform> inform ( <classification> classification: [ bonafide ], <edit_type> edit type: [ none ], <classified_by> classified by: [ feature ]> )"
  },
  {
    "mr": "inform(response[yes], speaker_id[1], feature[GTCC-1], interpreter[shap], shap_value[-1])",
    "ref": [
      " Yes, GTCC-1, which a sha value of -1, was used to detect the id of speaker 1 for the audio sample .",
      " Yes.",
      " Yes, 1, which a shap value of -1, was used to detect the id of speaker 1 for the audio sample .",
      " Yes, GTCC-1, was used to detect the id of speaker 1 for the audio sample .",
      " Yes, GTCC-1, which a shap value of -1.",
      " Yes, GTCC-, which a shap value of -, was used to detect the id of speaker  for the audio sample .",
      " Yes, GTCC-1, which a 1 value of -1, was used to detect the id of speaker 1 for the audio sample .",
      " Yes, GTCC, which a shap value of -1, was used to detect the id of speaker 1 for the audio sample .",
      " Yes, GTCC-, which a shap value of -, was used to detect the id of speaker 1 for the audio sample .",
      " Yes, GTCCshap, which a shap value of shap, was used to detect the id of speaker 1 for the audio sample .",
      " Yes, GTCC-1, which a shap value of -1, was used to detect the id of speaker 1 for the audio sample ."
    ],
    "new_mr": "<inform> inform ( <response> response: [ yes ], <speaker_id> speaker id: [ 1 ], <feature> feature: [ GTCC-1 ], <interpreter> interpreter: [ shap ], <shap_value> shap value: [ -1 ]> )"
  },
  {
    "mr": "inform(response[Yes], interpreter[shap], important[LFCC-44], classification[replayed], shap_value[-0.1075])",
    "ref": [
      " Yes, LFCC-44, which a s value of -0.1075, was used to detect the sample as replayed .",
      " Yes, LFCC-44, which a shap value of -0.1075.",
      " Yes, LF, which a shap value of -0.1075, was used to detect the sample as replayed .",
      " Yes, LFCC-44, which a shap value of -0.1075, was used to detect the sample as -0.1075 .",
      " Y, LFCC-44, which a shap value of -0.1075, was used to detect the sample as replayed .",
      "Yes, LFCC-15, which a shap value of -0.1785, was used to detect the sample as bonafide .  Yes, LFCC-44, which a shap value of -0.1075, was used to detect the sample as replayed .",
      " Yes, LFCC-44, was used to detect the sample as replayed .",
      " Yes, LFCC-44, which a shap value of shap, was used to detect the sample as replayed .",
      " Yes, LFCC-44, which a shap value of -0.1075, was used to detect the sample as replaye .",
      " Yes.1075, was used to detect the sample as replayed .",
      " Yes, LFCC-44, which a shap value of -0.1075, was used to detect the sample as replayed ."
    ],
    "new_mr": "<inform> inform ( <response> response: [ Yes ], <interpreter> interpreter: [ shap ], <important> important: [ LFCC-44 ], <classification> classification: [ replayed ], <shap_value> shap value: [ -0.1075 ]> )"
  },
  {
    "mr": "inform(extracted[PSRCC], model[CNN], important[PSRCC-3], classification[bonafide])",
    "ref": [
      " the audio sample had PS features extracted and PS-3 was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      " the audio sample had PSRCC features extracted and PSRCC-3 was determined to have a large impact on the  model that determined the sample to be bonafide .",
      "the audio sample had PSRCC features extracted and PSRCC-3 was determined to have a large impact on the CNN model that determined the sample to be bonafide .  the audio sample had PSRCC features extracted and PSRCC-3 was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      " the audio sample had PSRCC features extracted and PSRCC-3 was determined to have a large impact on the CNN model that determined the sample to be PSRCC-3 .",
      " the audio sample had bonafide features extracted and bonafide-3 was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      "The recording file was classified as being synthetic by a CNN model .",
      " the audio sample had PSRCC features extracted and P was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      " the audio sample had PSRCC features extracted and PSRCC was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      "The recording file was classified as being synthetic by a CNN model .  the audio sample had PSRCC features extracted and PSRCC-3 was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      " the audio sample had PSRCC features extracted and PSRCC-3 was determined to have a large impact on the CNN model that determined the sample to be bonaf .",
      " the audio sample had PSRCC features extracted and PSRCC-3 was determined to have a large impact on the CNN model that determined the sample to be bonafide ."
    ],
    "new_mr": "<inform> inform ( <extracted> extracted: [ PSRCC ], <model> model: [ CNN ], <important> important: [ PSRCC-3 ], <classification> classification: [ bonafide ]> )"
  },
  {
    "mr": "inform(response[yes], speaker_id[5], feature[LFCC-58], interpreter[shap], shap_value[0.2487])",
    "ref": [
      "the audio sample had LFCC features extracted and LFCC-53 was determined to have a large impact on the CNN model that determined the sample to be replayed .  Yes, person 5 was detected by LFCC-58 with a shap value of 0.2487 .",
      " Yes, person 5 was detected by LFCC-58 with a s value of 0.2487 .",
      " Yes, person 5 was detected by L with a shap value of 0.2487 .",
      " Yes, person 5 was detected by LFCC-58 with a yes value of 0.2487 .",
      "the audio sample had LFCC features extracted and LFCC-53 was determined to have a large impact on the CNN model that determined the sample to be replayed .",
      " Yes, person 5 was detected by LFCC-58 with a shap value of yes .",
      "Yes, person 5 was detected by LFCC-58 with a shap value of 0.2487 .  Yes, person 5 was detected by LFCC-58 with a shap value of 0.2487 .",
      " Yes, person  was detected by LFCC-8 with a shap value of 0.2487 .",
      " Yes, person 5 was detected by LFCC-58 with a shap value of 0 .",
      " Yes.2487 .",
      " Yes, person 5 was detected by LFCC-58 with a shap value of 0.2487 ."
    ],
    "new_mr": "<inform> inform ( <response> response: [ yes ], <speaker_id> speaker id: [ 5 ], <feature> feature: [ LFCC-58 ], <interpreter> interpreter: [ shap ], <shap_value> shap value: [ 0.2487 ]> )"
  },
  {
    "mr": "inform(extracted[MFCC], model[CNN], important[MFCC-2], classification[replayed])",
    "ref": [
      " the audio sample had MFCC features extracted and MFCC- was determined to have a large impact on the CNN model that determined the sample to be replayed .",
      " the audio sample had MFCC features extracted and MFCC-2 was determined to have a large impact on the CNN model that determined the sample to be MFCC-2 .",
      " the audio sample had MFCC features extracted and MFCC-2 was determined to have a large impact on the CNN model that determined the sample to be replay .",
      "Yes, the recording was found to be spoofed.  the audio sample had MFCC features extracted and MFCC-2 was determined to have a large impact on the CNN model that determined the sample to be replayed .",
      " the audio sample had MFCC features extracted and MFCC-2 was determined to have a large impact on the CN model that determined the sample to be replayed .",
      " the audio sample had MFCC features extracted and CNN was determined to have a large impact on the CNN model that determined the sample to be replayed .",
      " the audio sample had  features extracted and -2 was determined to have a large impact on the CNN model that determined the sample to be replayed .",
      " the audio sample had MFCC-2 features extracted and MFCC-2-2 was determined to have a large impact on the CNN model that determined the sample to be replayed .",
      "Yes, the recording was found to be spoofed.",
      " the audio sample had MFCC features extracted and MFCC-2 was determined to have a large impact on the replayed model that determined the sample to be replayed .",
      " the audio sample had MFCC features extracted and MFCC-2 was determined to have a large impact on the CNN model that determined the sample to be replayed ."
    ],
    "new_mr": "<inform> inform ( <extracted> extracted: [ MFCC ], <model> model: [ CNN ], <important> important: [ MFCC-2 ], <classification> classification: [ replayed ]> )"
  },
  {
    "mr": "inform(classification[spoof], edit_type[software])",
    "ref": [
      "shap determined that the MFCC-0 feature was one of the more important features by assigning it a value of -0.3268 . It was altered using software .",
      "shap determined that the MFCC-0 feature was one of the more important features by assigning it a value of -0.3268 .",
      "It was altered using spoof .",
      "It was altered using software . It was altered using software .",
      "It was altered using softw .",
      "shap determined that the MFCC-0 feature was one of the more important features by assigning it a value of -0.3268 . It was altered using software .",
      "shap determined that the MFCC-0 feature was one of the more important features by assigning it a value of -0.3268 .",
      "It was altered using spoof .",
      "It was altered using software . It was altered using software .",
      "It was altered using softw .",
      "It was altered using software ."
    ],
    "new_mr": "<inform> inform ( <classification> classification: [ spoof ], <edit_type> edit type: [ software ]> )"
  },
  {
    "mr": "inform(general)",
    "ref": [
      "Subband Spectral Flux Coefficients . Subband Spectral Flux Coefficients .",
      "Yes, LFCC-38, which a shap value of 0.5482, was used to detect the id of speaker 2 for the audio sample . Subband Spectral Flux Coefficients .",
      "Yes, LFCC-38, which a shap value of 0.5482, was used to detect the id of speaker 2 for the audio sample .",
      "Subband Spectral Flux Coefficients . Subband Spectral Flux Coefficients .",
      "Yes, LFCC-38, which a shap value of 0.5482, was used to detect the id of speaker 2 for the audio sample . Subband Spectral Flux Coefficients .",
      "Yes, LFCC-38, which a shap value of 0.5482, was used to detect the id of speaker 2 for the audio sample .",
      "Subband Spectral Flux Coefficients . Subband Spectral Flux Coefficients .",
      "Yes, LFCC-38, which a shap value of 0.5482, was used to detect the id of speaker 2 for the audio sample . Subband Spectral Flux Coefficients .",
      "Yes, LFCC-38, which a shap value of 0.5482, was used to detect the id of speaker 2 for the audio sample .",
      "Subband Spectral Flux Coefficients . Subband Spectral Flux Coefficients .",
      "Subband Spectral Flux Coefficients ."
    ],
    "new_mr": "<inform> inform ( > )"
  },
  {
    "mr": "inform(response[Yes], interpreter[shap], important[PSRCC-10], classification[replayed], shap_value[-0.1905])",
    "ref": [
      " Yes, PSRCC-10, which a shap value of replayed, was used to detect the sample as replayed .",
      " Yes, PSRCC-10, which a shap value of -0.1905, was used to detect the sample as repla .",
      "No other features detected a Microphone signal .",
      " Yes, PSRCC-10.1905, was used to detect the sample as replayed .",
      " Ye, PSRCC-10, which a shap value of -0.1905, was used to detect the sample as replayed .",
      " Yes, PSRCC-10, which a shap value of -0.1905.",
      " shap, PSRCC-10, which a shap value of -0.1905, was used to detect the sample as replayed .",
      "Yes, PSRCC-10, which a shap value of -0.1905, was used to detect the sample as replayed .  Yes, PSRCC-10, which a shap value of -0.1905, was used to detect the sample as replayed .",
      " Yes, PSRCC-10, which a shap value of -0.1905, was used to detect the sample as shap .",
      " Yes, PSRCC-10, which a shap value of -0.190, was used to detect the sample as replayed .",
      " Yes, PSRCC-10, which a shap value of -0.1905, was used to detect the sample as replayed ."
    ],
    "new_mr": "<inform> inform ( <response> response: [ Yes ], <interpreter> interpreter: [ shap ], <important> important: [ PSRCC-10 ], <classification> classification: [ replayed ], <shap_value> shap value: [ -0.1905 ]> )"
  },
  {
    "mr": "inform(classification[spoof], edit_type[synthetic])",
    "ref": [
      "The spoofed audio was a synth audio .",
      "The ed audio was a synthetic audio .",
      "The spoofed audio was a synthetic audio . The spoofed audio was a synthetic audio .",
      "The signal indicates voice cloning . The spoofed audio was a synthetic audio .",
      "The spoofed audio was a spoof audio .",
      "The signal indicates voice cloning .",
      "The syntheticed audio was a synthetic audio .",
      "The spoofed audio was a synth audio .",
      "The ed audio was a synthetic audio .",
      "The spoofed audio was a synthetic audio . The spoofed audio was a synthetic audio .",
      "The spoofed audio was a synthetic audio ."
    ],
    "new_mr": "<inform> inform ( <classification> classification: [ spoof ], <edit_type> edit type: [ synthetic ]> )"
  },
  {
    "mr": "inform(general)",
    "ref": [
      "The spoofed audio was not a replayed audio .",
      "Linear Prediction Cepstral Coefficients . Linear Prediction Cepstral Coefficients .",
      "The spoofed audio was not a replayed audio . Linear Prediction Cepstral Coefficients .",
      "The spoofed audio was not a replayed audio .",
      "Linear Prediction Cepstral Coefficients . Linear Prediction Cepstral Coefficients .",
      "The spoofed audio was not a replayed audio . Linear Prediction Cepstral Coefficients .",
      "The spoofed audio was not a replayed audio .",
      "Linear Prediction Cepstral Coefficients . Linear Prediction Cepstral Coefficients .",
      "The spoofed audio was not a replayed audio . Linear Prediction Cepstral Coefficients .",
      "The spoofed audio was not a replayed audio .",
      "Linear Prediction Cepstral Coefficients . "
    ],
    "new_mr": "<inform> inform ( > )"
  },
  {
    "mr": "inform(classification[spoof], edit_type[computer])",
    "ref": [
      "No, the spoofed recording was not a replayed recording .",
      "No, the spoofed recording was not a replayed recording . The audio shows signs of 3 different editors .",
      "The audio shows signs of 3 different editors . The audio shows signs of 3 different editors .",
      "No, the spoofed recording was not a replayed recording .",
      "No, the spoofed recording was not a replayed recording . The audio shows signs of 3 different editors .",
      "The audio shows signs of 3 different editors . The audio shows signs of 3 different editors .",
      "No, the spoofed recording was not a replayed recording .",
      "No, the spoofed recording was not a replayed recording . The audio shows signs of 3 different editors .",
      "The audio shows signs of 3 different editors . The audio shows signs of 3 different editors .",
      "No, the spoofed recording was not a replayed recording .",
      "The audio shows signs of 3 different editors ."
    ],
    "new_mr": "<inform> inform ( <classification> classification: [ spoof ], <edit_type> edit type: [ computer ]> )"
  },
  {
    "mr": "inform(response[Yes], interpreter[shap], important[MSRCC-7], classification[replayed], shap_value[0.7602])",
    "ref": [
      " Yes, MSRCC-7, which a shap value of 0.7602.",
      " Yes, M, which a shap value of 0.7602, was used to detect the sample as replayed .",
      " Yes, MSRCC-7.7602, was used to detect the sample as replayed .",
      " Yes, which a shap value of 0.7602, was used to detect the sample as replayed .",
      " Yes, MSRCC-7, which a shap value of 0.7602, was used to detect the sample as Yes .",
      " Yes, MSRCC-7, which a shap value of 0., was used to detect the sample as replayed .",
      " MSRCC-7, MSRCC-7, which a shap value of 0.7602, was used to detect the sample as replayed .",
      "Yes, MFCC-13, which a shap value of 0.1362, was used to detect the id of speaker 7 for the audio sample .",
      " Yes.7602, was used to detect the sample as replayed .",
      " Yes, replayed, which a shap value of 0.7602, was used to detect the sample as replayed .",
      " Yes, MSRCC-7, which a shap value of 0.7602, was used to detect the sample as replayed ."
    ],
    "new_mr": "<inform> inform ( <response> response: [ Yes ], <interpreter> interpreter: [ shap ], <important> important: [ MSRCC-7 ], <classification> classification: [ replayed ], <shap_value> shap value: [ 0.7602 ]> )"
  },
  {
    "mr": "inform(classification[bonafide], edit_type[none])",
    "ref": [
      "The spoofed audio was not a replayed audio . The spoofed audio was not a replayed audio .",
      "Yes, LFCC-18, which a shap value of -0.8228, was used to detect the sample as bonafide .",
      "The spoofed audio was a replayed audio .",
      "Yes, LFCC-18, which a shap value of -0.8228, was used to detect the sample as bonafide . The spoofed audio was not a replayed audio .",
      "The spoofed audio was not a replayed audio . The spoofed audio was not a replayed audio .",
      "Yes, LFCC-18, which a shap value of -0.8228, was used to detect the sample as bonafide .",
      "The spoofed audio was a replayed audio .",
      "Yes, LFCC-18, which a shap value of -0.8228, was used to detect the sample as bonafide . The spoofed audio was not a replayed audio .",
      "The spoofed audio was not a replayed audio . The spoofed audio was not a replayed audio .",
      "Yes, LFCC-18, which a shap value of -0.8228, was used to detect the sample as bonafide .",
      "The spoofed audio was not a replayed audio ."
    ],
    "new_mr": "<inform> inform ( <classification> classification: [ bonafide ], <edit_type> edit type: [ none ]> )"
  },
  {
    "mr": "inform(extracted[LFCC], model[CNN], important[LFCC-2], classification[replayed])",
    "ref": [
      " the audio sample had LFCC features extracted and LFCC-2 was determined to have a large impact on the CNN model that determined the sample to be rep .",
      " the audio sample had LFCC features extracted and LFC was determined to have a large impact on the CNN model that determined the sample to be replayed .",
      "Yes, person 3 was detected by MFCC-24 with a shap value of 0.5756 .  the audio sample had LFCC features extracted and LFCC-2 was determined to have a large impact on the CNN model that determined the sample to be replayed .",
      " the audio sample had LFCC features extracted and LFCC-2 was determined to have a large impact on the CNN model that determined the sample to be CNN .",
      " the audio sample had LF features extracted and LF-2 was determined to have a large impact on the CNN model that determined the sample to be replayed .",
      " the audio sample had LFCC features extracted and LFCC-2 was determined to have a large impact on the C model that determined the sample to be replayed .",
      "the audio sample had LFCC features extracted and LFCC-2 was determined to have a large impact on the CNN model that determined the sample to be replayed .  the audio sample had LFCC features extracted and LFCC-2 was determined to have a large impact on the CNN model that determined the sample to be replayed .",
      " the audio sample had LFCC features extracted and LFCC-2 was determined to have a large impact on the LFCC-2 model that determined the sample to be replayed .",
      " the audio sample had LFCC-2 features extracted and LFCC-2-2 was determined to have a large impact on the CNN model that determined the sample to be replayed .",
      "Yes, person 3 was detected by MFCC-24 with a shap value of 0.5756 .",
      " the audio sample had LFCC features extracted and LFCC-2 was determined to have a large impact on the CNN model that determined the sample to be replayed ."
    ],
    "new_mr": "<inform> inform ( <extracted> extracted: [ LFCC ], <model> model: [ CNN ], <important> important: [ LFCC-2 ], <classification> classification: [ replayed ]> )"
  },
  {
    "mr": "inform(interpreter[shap], important[LFCC-41], shap_value[-0.5918])",
    "ref": [
      " -0.5918 determined that the LFCC-41 feature was one of the more important features by assigning it a value of -0.5918 .",
      "  determined that the LFCC-41 feature was one of the more important features by assigning it a value of -0.5918 .",
      " shap determined that the -0.5918 feature was one of the more important features by assigning it a value of -0.5918 .",
      "shap determined that the LFCC-41 feature was one of the more important features by assigning it a value of -0.5918 .  shap determined that the LFCC-41 feature was one of the more important features by assigning it a value of -0.5918 .",
      " shap determined that the LFCC-41 feature was one of the more important features by assigning it a value of -0.5 .",
      "person 8 was detected as the primary speaker of the audio sample .  shap determined that the LFCC-41 feature was one of the more important features by assigning it a value of -0.5918 .",
      " shap determined that the LFCC-41 feature was one of the more important features by assigning it a value of shap .",
      "person 8 was detected as the primary speaker of the audio sample .",
      " shap determined that the LFCC feature was one of the more important features by assigning it a value of -0.5918 .",
      " -0.5918 determined that the LFCC-41 feature was one of the more important features by assigning it a value of -0.5918 .",
      " shap determined that the LFCC-41 feature was one of the more important features by assigning it a value of -0.5918 ."
    ],
    "new_mr": "<inform> inform ( <interpreter> interpreter: [ shap ], <important> important: [ LFCC-41 ], <shap_value> shap value: [ -0.5918 ]> )"
  },
  {
    "mr": "inform(classification[spoofed])",
    "ref": [
      "Yes, LFCC-4, which a shap value of -0.069, was used to detect the sample as replayed . Yes , the recording shows signs of being edited .",
      "Yes , the recording shows signs of being edited . Yes , the recording shows signs of being edited .",
      "Yes, LFCC-4, which a shap value of -0.069, was used to detect the sample as replayed .",
      "Yes .",
      "Yes, LFCC-4, which a shap value of -0.069, was used to detect the sample as replayed . Yes , the recording shows signs of being edited .",
      "Yes , the recording shows signs of being edited . Yes , the recording shows signs of being edited .",
      "Yes, LFCC-4, which a shap value of -0.069, was used to detect the sample as replayed .",
      "Yes .",
      "Yes, LFCC-4, which a shap value of -0.069, was used to detect the sample as replayed . Yes , the recording shows signs of being edited .",
      "Yes , the recording shows signs of being edited . Yes , the recording shows signs of being edited .",
      "Yes , the recording shows signs of being edited ."
    ],
    "new_mr": "<inform> inform ( <classification> classification: [ spoofed ]> )"
  },
  {
    "mr": "inform(classification[spoof], edit_type[computer])",
    "ref": [
      "Yes, person 4 was detected by MFCC-36 with a shap value of 0.763 .",
      "It looks that way . It looks that way .",
      "Yes, person 4 was detected by MFCC-36 with a shap value of 0.763 . It looks that way .",
      "Yes, person 4 was detected by MFCC-36 with a shap value of 0.763 .",
      "It looks that way . It looks that way .",
      "Yes, person 4 was detected by MFCC-36 with a shap value of 0.763 . It looks that way .",
      "Yes, person 4 was detected by MFCC-36 with a shap value of 0.763 .",
      "It looks that way . It looks that way .",
      "Yes, person 4 was detected by MFCC-36 with a shap value of 0.763 . It looks that way .",
      "Yes, person 4 was detected by MFCC-36 with a shap value of 0.763 .",
      "It looks that way ."
    ],
    "new_mr": "<inform> inform ( <classification> classification: [ spoof ], <edit_type> edit type: [ computer ]> )"
  },
  {
    "mr": "inform(response[Yes], interpreter[shap], important[MFCC-21], classification[bonafide], shap_value[0.5107])",
    "ref": [
      " Yes, M, which a shap value of 0.5107, was used to detect the sample as bonafide .",
      "Yes, MFCC-21, which a shap value of 0.5107, was used to detect the sample as bonafide .  Yes, MFCC-21, which a shap value of 0.5107, was used to detect the sample as bonafide .",
      " Yes.5107, was used to detect the sample as bonafide .",
      " Yes, MFCC-21, was used to detect the sample as bonafide .",
      " Yes, MFCC-21, which a Yes value of 0.5107, was used to detect the sample as bonafide .",
      "Yes, MFCC-37, which a shap value of -0.5104, was used to detect the sample as replayed .  Yes, MFCC-21, which a shap value of 0.5107, was used to detect the sample as bonafide .",
      " Yes, MFCC-21, which a shap value of 0.5107, was used to detect the sample as bonaf .",
      " , MFCC-21, which a shap value of 0.5107, was used to detect the sample as bonafide .",
      " Yes, Yes, which a shap value of 0.5107, was used to detect the sample as bonafide .",
      " Yes, which a shap value of 0.5107, was used to detect the sample as bonafide .",
      " Yes, MFCC-21, which a shap value of 0.5107, was used to detect the sample as bonafide ."
    ],
    "new_mr": "<inform> inform ( <response> response: [ Yes ], <interpreter> interpreter: [ shap ], <important> important: [ MFCC-21 ], <classification> classification: [ bonafide ], <shap_value> shap value: [ 0.5107 ]> )"
  },
  {
    "mr": "inform(classification[bonafide], edit_type[none], classified_by[feature])",
    "ref": [
      "The spoofed audio was a replayed audio .",
      "The spoofed audio was not a replayed audio . The spoofed audio was not a replayed audio .",
      "Most of the recording was not made with a mobile phone . The spoofed audio was not a replayed audio .",
      "Most of the recording was not made with a mobile phone .",
      "The spoofed audio was a replayed audio .",
      "The spoofed audio was not a replayed audio . The spoofed audio was not a replayed audio .",
      "Most of the recording was not made with a mobile phone . The spoofed audio was not a replayed audio .",
      "Most of the recording was not made with a mobile phone .",
      "The spoofed audio was a replayed audio .",
      "The spoofed audio was not a replayed audio . The spoofed audio was not a replayed audio .",
      "The spoofed audio was not a replayed audio ."
    ],
    "new_mr": "<inform> inform ( <classification> classification: [ bonafide ], <edit_type> edit type: [ none ], <classified_by> classified by: [ feature ]> )"
  },
  {
    "mr": "inform(response[yes], speaker_id[2], feature[GTCC-4], interpreter[shap], shap_value[1])",
    "ref": [
      " Yes, person 2 was detected by GTCC-4 with a sh value of 1 .",
      " Yes, person  was detected by GTCC-4 with a shap value of 1 .",
      " Yes, person 2 was detected by 1 with a shap value of 1 .",
      "the audio sample had LFCC features extracted and LFCC-10 was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      "the audio sample had LFCC features extracted and LFCC-10 was determined to have a large impact on the CNN model that determined the sample to be bonafide .  Yes, person 2 was detected by GTCC-4 with a shap value of 1 .",
      " Yes, person 2 was detected by GTCC-4 with a shap value of yes .",
      " Yes, person shap was detected by GTCC-4 with a shap value of 1 .",
      " Yes, person 2 was detected by GTCC-4 with a yes value of 1 .",
      " Yes.",
      " Yes, person 2 was detected by GT with a shap value of 1 .",
      " Yes, person 2 was detected by GTCC-4 with a shap value of 1 ."
    ],
    "new_mr": "<inform> inform ( <response> response: [ yes ], <speaker_id> speaker id: [ 2 ], <feature> feature: [ GTCC-4 ], <interpreter> interpreter: [ shap ], <shap_value> shap value: [ 1 ]> )"
  },
  {
    "mr": "inform(response[yes], speaker_id[5], feature[PSRCC-11], interpreter[shap], shap_value[0.1731])",
    "ref": [
      "Yes, MFCC-32, which a shap value of -0.2438, was used to detect the sample as bonafide .  Yes, person 3 was detected by PSRCC-11 with a shap value of 0.1731 .",
      " Yes, person 3 was detected by PSRCC-11 with a shap value of 0.173 .",
      " Yes, person 3 was detected by PSRCC-11 with a s value of 0.1731 .",
      " Yes, person 3 was detected by PSRCC-11 with a yes value of 0.1731 .",
      " Yes, person 3 was detected by 0.1731 with a shap value of 0.1731 .",
      "Yes, person 3 was detected by PSRCC-11 with a shap value of 0.1731 .  Yes, person 3 was detected by PSRCC-11 with a shap value of 0.1731 .",
      "Yes, MFCC-32, which a shap value of -0.2438, was used to detect the sample as bonafide .",
      " Yes, person 3 was detected by PS with a shap value of 0.1731 .",
      " Yes.1731 .",
      " Yes, person 3 was detected by PSRCC-11 with a shap value of PSRCC-11 .",
      " Yes, person 3 was detected by PSRCC-11 with a shap value of 0.1731 ."
    ],
    "new_mr": "<inform> inform ( <response> response: [ yes ], <speaker_id> speaker id: [ 5 ], <feature> feature: [ PSRCC-11 ], <interpreter> interpreter: [ shap ], <shap_value> shap value: [ 0.1731 ]> )"
  },
  {
    "mr": "inform(response[yes], speaker_id[2], feature[LFCC-41], interpreter[shap], shap_value[-0.4171])",
    "ref": [
      " Yes, person 2 was detected by LFCC-41 with a s value of -0.4171 .",
      " Yes, person 2 was detected by LFCC-41 with a 2 value of -0.4171 .",
      " Yes, person  was detected by LFCC-41 with a shap value of -0.4171 .",
      " Yes, person 2 was detected by LFCC-41 with a shap value of 2 .",
      "Most of the recording was not made with a mobile phone .  Yes, person 2 was detected by LFCC-41 with a shap value of -0.4171 .",
      " Yes, person 2 was detected by 2 with a shap value of -0.4171 .",
      "Yes, person 2 was detected by LFCC-41 with a shap value of -0.4171 .  Yes, person 2 was detected by LFCC-41 with a shap value of -0.4171 .",
      "Most of the recording was not made with a mobile phone .",
      " Yes.4171 .",
      " Yes, person 2 was detected by LFCC-41 with a shap value of -0.41 .",
      " Yes, person 2 was detected by LFCC-41 with a shap value of -0.4171 ."
    ],
    "new_mr": "<inform> inform ( <response> response: [ yes ], <speaker_id> speaker id: [ 2 ], <feature> feature: [ LFCC-41 ], <interpreter> interpreter: [ shap ], <shap_value> shap value: [ -0.4171 ]> )"
  },
  {
    "mr": "inform(response[Yes], interpreter[shap], important[LFCC-44], classification[bonafide], shap_value[0.707])",
    "ref": [
      " Yes, which a shap value of 0.707, was used to detect the sample as bonafide .",
      " Yes, LFCC-44, which a shap value of 0, was used to detect the sample as bonafide .",
      " Yes, LFCC-44, which a LFCC-44 value of 0.707, was used to detect the sample as bonafide .",
      " Yes.707, was used to detect the sample as bonafide .",
      " Yes, LFCC-4, which a shap value of 0.707, was used to detect the sample as bonafide .",
      " Yes, LFCC-44.707, was used to detect the sample as bonafide .",
      " Yes, shap, which a shap value of 0.707, was used to detect the sample as bonafide .",
      "the audio sample had PSRCC features extracted and PSRCC-7 was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      " Yes, LFCC-44, which a shap value of 0.707, was used to detect the sample as LFCC-44 .",
      " shap, LFCC-44, which a shap value of 0.707, was used to detect the sample as bonafide .",
      " Yes, LFCC-44, which a shap value of 0.707, was used to detect the sample as bonafide ."
    ],
    "new_mr": "<inform> inform ( <response> response: [ Yes ], <interpreter> interpreter: [ shap ], <important> important: [ LFCC-44 ], <classification> classification: [ bonafide ], <shap_value> shap value: [ 0.707 ]> )"
  },
  {
    "mr": "inform(classification[spoof])",
    "ref": [
      "It is a bona fide audio .",
      "It is not a bona fide audio . It is not a bona fide audio .",
      "the audio sample had MSRCC features extracted and MSRCC-8 was determined to have a large impact on the CNN model that determined the sample to be bonafide . It is not a bona fide audio .",
      "the audio sample had MSRCC features extracted and MSRCC-8 was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      "It is a bona fide audio .",
      "It is not a bona fide audio . It is not a bona fide audio .",
      "the audio sample had MSRCC features extracted and MSRCC-8 was determined to have a large impact on the CNN model that determined the sample to be bonafide . It is not a bona fide audio .",
      "the audio sample had MSRCC features extracted and MSRCC-8 was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      "It is a bona fide audio .",
      "It is not a bona fide audio . It is not a bona fide audio .",
      "It is not a bona fide audio ."
    ],
    "new_mr": "<inform> inform ( <classification> classification: [ spoof ]> )"
  },
  {
    "mr": "inform(response[Yes], interpreter[shap], important[LFCC-14], classification[replayed], shap_value[0.4354])",
    "ref": [
      "shap determined that the GTCC-4 feature was one of the more important features by assigning it a value of 1 .",
      " Y, LFCC-14, which a shap value of 0.4354, was used to detect the sample as replayed .",
      " Yes, LFCC-14, which a shap value of 0.4354.",
      " Yes, which a shap value of 0.4354, was used to detect the sample as replayed .",
      " Yes, LFCC-14, which a Yes value of 0.4354, was used to detect the sample as replayed .",
      " Yes, LFCC-14, which a shap value of 0.4354, was used to detect the sample as shap .",
      " Yes, LFCC-14, which a shap value of LFCC-14, was used to detect the sample as replayed .",
      " Yes, LFCC-14, which a sha value of 0.4354, was used to detect the sample as replayed .",
      " Yes, LFCC-14.4354, was used to detect the sample as replayed .",
      "Yes, LFCC-14, which a shap value of 0.4354, was used to detect the sample as replayed .  Yes, LFCC-14, which a shap value of 0.4354, was used to detect the sample as replayed .",
      " Yes, LFCC-14, which a shap value of 0.4354, was used to detect the sample as replayed ."
    ],
    "new_mr": "<inform> inform ( <response> response: [ Yes ], <interpreter> interpreter: [ shap ], <important> important: [ LFCC-14 ], <classification> classification: [ replayed ], <shap_value> shap value: [ 0.4354 ]> )"
  },
  {
    "mr": "inform(response[yes], feature[MFCC-10], determined[speaker_id])",
    "ref": [
      "the audio sample had LFCC features extracted and LFCC-10 was determined to have a large impact on the CNN model that determined the sample to be bonafide .  yes, MFCC-10 was used to determine speaker id .",
      " yes, speaker_id was used to determine speaker id .",
      " speaker_id, MFCC-10 was used to determine speaker id .",
      "the audio sample had LFCC features extracted and LFCC-10 was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      " yes.",
      "yes, MFCC-10 was used to determine speaker id .  yes, MFCC-10 was used to determine speaker id .",
      " ye, MFCC-10 was used to determine speaker id .",
      " yes,  was used to determine speaker id .",
      "the audio sample had LFCC features extracted and LFCC-10 was determined to have a large impact on the CNN model that determined the sample to be bonafide .  yes, MFCC-10 was used to determine speaker id .",
      " yes, speaker_id was used to determine speaker id .",
      " yes, MFCC-10 was used to determine speaker id ."
    ],
    "new_mr": "<inform> inform ( <response> response: [ yes ], <feature> feature: [ MFCC-10 ], <determined> determined: [ speaker_id ]> )"
  },
  {
    "mr": "inform(response[Yes], interpreter[shap], important[GTCC-13], classification[bonafide], shap_value[-1])",
    "ref": [
      " Yes, GTCC-13, which a shap value of -1, was used to detect the sample as  .",
      " Yes, GTCC-13, was used to detect the sample as bonafide .",
      " Yes, GTCC-13, which a Yes value of -1, was used to detect the sample as bonafide .",
      " , GTCC-13, which a shap value of -1, was used to detect the sample as bonafide .",
      "yes, MFCC-2 was used to determine speaker id .  Yes, GTCC-13, which a shap value of -1, was used to detect the sample as bonafide .",
      "Yes, GTCC-13, which a shap value of -1, was used to detect the sample as bonafide .  Yes, GTCC-13, which a shap value of -1, was used to detect the sample as bonafide .",
      "yes, MFCC-2 was used to determine speaker id .",
      " Yes.",
      " Yes, GTCC-13, which a shap value of -1, was used to detect the sample as Yes .",
      " Yes, -1, which a shap value of -1, was used to detect the sample as bonafide .",
      " Yes, GTCC-13, which a shap value of -1, was used to detect the sample as bonafide ."
    ],
    "new_mr": "<inform> inform ( <response> response: [ Yes ], <interpreter> interpreter: [ shap ], <important> important: [ GTCC-13 ], <classification> classification: [ bonafide ], <shap_value> shap value: [ -1 ]> )"
  },
  {
    "mr": "inform(extracted[MSRCC], model[CNN], important[MSRCC-7], classification[bonafide])",
    "ref": [
      " the audio sample had MSRCC features extracted and MSRCC-7 was determined to have a large impact on the  model that determined the sample to be bonafide .",
      " the audio sample had MSRCC features extracted and MSRCC-7 was determined to have a large impact on the CNN model that determined the sample to be MSRCC .",
      "the audio sample had MSRCC features extracted and MSRCC-7 was determined to have a large impact on the CNN model that determined the sample to be bonafide .  the audio sample had MSRCC features extracted and MSRCC-7 was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      "the audio sample had PSRCC features extracted and PSRCC-4 was determined to have a large impact on the CNN model that determined the sample to be replayed .",
      " the audio sample had MSRCC features extracted and MSRCC-7 was determined to have a large impact on the CNN model that determined the sample to be  .",
      " the audio sample had M features extracted and M-7 was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      "the audio sample had PSRCC features extracted and PSRCC-4 was determined to have a large impact on the CNN model that determined the sample to be replayed .  the audio sample had MSRCC features extracted and MSRCC-7 was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      " the audio sample had MSRCC features extracted and bonafide was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      " the audio sample had MSRCC features extracted and MSRCC-7 was determined to have a large impact on the bonafide model that determined the sample to be bonafide .",
      " the audio sample had MSRCC-7 features extracted and MSRCC-7-7 was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      " the audio sample had MSRCC features extracted and MSRCC-7 was determined to have a large impact on the CNN model that determined the sample to be bonafide ."
    ],
    "new_mr": "<inform> inform ( <extracted> extracted: [ MSRCC ], <model> model: [ CNN ], <important> important: [ MSRCC-7 ], <classification> classification: [ bonafide ]> )"
  },
  {
    "mr": "inform(response[yes], speaker_id[5], feature[MSRCC-10], interpreter[shap], shap_value[0.6465])",
    "ref": [
      " Yes, MSRCC-10, which a shap value of 0.646, was used to detect the id of speaker  for the audio sample .",
      " Yes, MSRCC-10, which a shap value of 0.646MSRCC-10, was used to detect the id of speaker MSRCC-10 for the audio sample .",
      " Yes.6465, was used to detect the id of speaker 5 for the audio sample .",
      "Yes, MSRCC-10, which a shap value of 0.6465, was used to detect the id of speaker 5 for the audio sample .  Yes, MSRCC-10, which a shap value of 0.6465, was used to detect the id of speaker 5 for the audio sample .",
      " Yes, MSRCC-10, which a yes value of 0.6465, was used to detect the id of speaker 5 for the audio sample .",
      " Yes, MSRCC-10.6465, was used to detect the id of speaker 5 for the audio sample .",
      " Yes, MSRCC-10, which a sh value of 0.6465, was used to detect the id of speaker 5 for the audio sample .",
      " Yes, M, which a shap value of 0.6465, was used to detect the id of speaker 5 for the audio sample .",
      " Yes, 5, which a shap value of 0.6465, was used to detect the id of speaker 5 for the audio sample .",
      " Yes, MSRCC-10, was used to detect the id of speaker 5 for the audio sample .",
      " Yes, MSRCC-10, which a shap value of 0.6465, was used to detect the id of speaker 5 for the audio sample ."
    ],
    "new_mr": "<inform> inform ( <response> response: [ yes ], <speaker_id> speaker id: [ 5 ], <feature> feature: [ MSRCC-10 ], <interpreter> interpreter: [ shap ], <shap_value> shap value: [ 0.6465 ]> )"
  },
  {
    "mr": "inform(response[yes], speaker_id[3], feature[LFCC-51], interpreter[shap], shap_value[-0.2458])",
    "ref": [
      " Yes, person 3 was detected by LFCC-5 with a shap value of -0.2458 .",
      " Yes, person 3 was detected by LFCC-51 with a yes value of -0.2458 .",
      " Yes, person 3 was detected by LFCC-51 with a shap value of LFCC-51 .",
      " Yes, person 3 was detected by LFCC-51 with a s value of -0.2458 .",
      "Yes, LFCC-26, which a shap value of 0.8434, was used to detect the sample as bonafide .  Yes, person 3 was detected by LFCC-51 with a shap value of -0.2458 .",
      " Yes.2458 .",
      " Yes, person 3 was detected by LFCC-51 with a shap value of -0.24 .",
      " Yes, person shap was detected by LFCC-51 with a shap value of -0.2458 .",
      " Yes, person 3 was detected by yes with a shap value of -0.2458 .",
      "Yes, LFCC-26, which a shap value of 0.8434, was used to detect the sample as bonafide .",
      " Yes, person 3 was detected by LFCC-51 with a shap value of -0.2458 ."
    ],
    "new_mr": "<inform> inform ( <response> response: [ yes ], <speaker_id> speaker id: [ 3 ], <feature> feature: [ LFCC-51 ], <interpreter> interpreter: [ shap ], <shap_value> shap value: [ -0.2458 ]> )"
  },
  {
    "mr": "inform(response[yes], speaker_id[2], feature[GTCC-3], interpreter[shap], shap_value[0])",
    "ref": [
      "Yes, person 2 was detected by GTCC-3 with a shap value of 0 .  Yes, person 2 was detected by GTCC-3 with a shap value of 0 .",
      " Yes, person 2 was detected by shap with a shap value of 0 .",
      " Yes.",
      "the audio sample had LFCC features extracted and LFCC-25 was determined to have a large impact on the CNN model that determined the sample to be bonafide .  Yes, person 2 was detected by GTCC-3 with a shap value of 0 .",
      " Yes, person 2 was detected by GTCC-3 with a shap value of  .",
      " Yes, person 2 was detected by GTCC-3 with a s value of 0 .",
      " Yes, person yes was detected by GTCC-3 with a shap value of 0 .",
      " Yes, person 2 was detected by GT with a shap value of 0 .",
      " Yes, person 2 was detected by GTCC-3 with a shap value of shap .",
      " Yes, person 2 was detected by GTCC-3 with a GTCC-3 value of 0 .",
      " Yes, person 2 was detected by GTCC-3 with a shap value of 0 ."
    ],
    "new_mr": "<inform> inform ( <response> response: [ yes ], <speaker_id> speaker id: [ 2 ], <feature> feature: [ GTCC-3 ], <interpreter> interpreter: [ shap ], <shap_value> shap value: [ 0 ]> )"
  },
  {
    "mr": "inform(classification[spoof], classified_by[feature])",
    "ref": [
      "SHAP determined that CQCC-0.",
      "SHAP determined that CQCC-0, MFCC-0, LFCC-2, MFCC-4 had the highest impact on classification . SHAP determined that CQCC-0, MFCC-0, LFCC-2, MFCC-4 had the highest impact on classification .",
      "There are inconsistencies in the background noise which indicate the room changed .",
      "SHAP determined that CQCC-0, MFCC-0, MFCC-4 had the highest impact on classification .",
      "SHAP determined that CQCC-0, MFCC-0.",
      "SHAP determined that CQCC-0, MFCC-0, LFCC-2.",
      "There are inconsistencies in the background noise which indicate the room changed . SHAP determined that CQCC-0, MFCC-0, LFCC-2, MFCC-4 had the highest impact on classification .",
      "SHAP determined that CQCC-0, LFCC-2, MFCC-4 had the highest impact on classification .",
      "SHAP determined that CQCC-0.",
      "SHAP determined that CQCC-0, MFCC-0, LFCC-2, MFCC-4 had the highest impact on classification . SHAP determined that CQCC-0, MFCC-0, LFCC-2, MFCC-4 had the highest impact on classification .",
      "SHAP determined that CQCC-0, MFCC-0, LFCC-2, MFCC-4 had the highest impact on classification ."
    ],
    "new_mr": "<inform> inform ( <classification> classification: [ spoof ], <classified_by> classified by: [ feature ]> )"
  },
  {
    "mr": "inform(response[yes], speaker_id[1], feature[LFCC-56], interpreter[shap], shap_value[-0.4735])",
    "ref": [
      "Yes, LFCC-18, which a shap value of -0.607, was used to detect the sample as replayed .  Yes, person 1 was detected by LFCC-56 with a shap value of -0.4735 .",
      " Yes, person 1 was detected by LFCC- with a shap value of -0.4735 .",
      " Yes, person yes was detected by LFCC-56 with a shap value of -0.4735 .",
      " Yes, person 1 was detected by LFCC-56 with a sha value of -0.4735 .",
      " Yes, person 1 was detected by LFCC-56 with a shap value of yes .",
      " Yes, person 1 was detected by LFCC-56 with a yes value of -0.4735 .",
      " Yes, person 1 was detected by LFCC-56 with a shap value of -0 .",
      " Yes, person 1 was detected by shap with a shap value of -0.4735 .",
      " Yes, person  was detected by LFCC-56 with a shap value of -0.4735 .",
      " Yes.4735 .",
      " Yes, person 1 was detected by LFCC-56 with a shap value of -0.4735 ."
    ],
    "new_mr": "<inform> inform ( <response> response: [ yes ], <speaker_id> speaker id: [ 1 ], <feature> feature: [ LFCC-56 ], <interpreter> interpreter: [ shap ], <shap_value> shap value: [ -0.4735 ]> )"
  },
  {
    "mr": "inform(interpreter[shap], important[PSRCC-6], shap_value[-0.0158])",
    "ref": [
      " shap determined that the shap feature was one of the more important features by assigning it a value of -0.0158 .",
      " shap determined that the PSRCC-6 feature was one of the more important features by assigning it a value of shap .",
      " shap determined that the PSRCC feature was one of the more important features by assigning it a value of -0.0158 .",
      "shap determined that the PSRCC-6 feature was one of the more important features by assigning it a value of -0.0158 .  shap determined that the PSRCC-6 feature was one of the more important features by assigning it a value of -0.0158 .",
      "The next microphone starts at 10 seconds .",
      " -0.0158 determined that the PSRCC-6 feature was one of the more important features by assigning it a value of -0.0158 .",
      "The next microphone starts at 10 seconds .  shap determined that the PSRCC-6 feature was one of the more important features by assigning it a value of -0.0158 .",
      " shap determined that the PSRCC-6 feature was one of the more important features by assigning it a value of -0.01 .",
      " sh determined that the PSRCC-6 feature was one of the more important features by assigning it a value of -0.0158 .",
      " shap determined that the shap feature was one of the more important features by assigning it a value of -0.0158 .",
      " shap determined that the PSRCC-6 feature was one of the more important features by assigning it a value of -0.0158 ."
    ],
    "new_mr": "<inform> inform ( <interpreter> interpreter: [ shap ], <important> important: [ PSRCC-6 ], <shap_value> shap value: [ -0.0158 ]> )"
  },
  {
    "mr": "inform(classification[bonafide], edit_type[none])",
    "ref": [
      "the audio sample had PSRCC features extracted and PSRCC-11 was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      "The audio was made at the same time . The audio was made at the same time .",
      "the audio sample had PSRCC features extracted and PSRCC-11 was determined to have a large impact on the CNN model that determined the sample to be bonafide . The audio was made at the same time .",
      "the audio sample had PSRCC features extracted and PSRCC-11 was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      "The audio was made at the same time . The audio was made at the same time .",
      "the audio sample had PSRCC features extracted and PSRCC-11 was determined to have a large impact on the CNN model that determined the sample to be bonafide . The audio was made at the same time .",
      "the audio sample had PSRCC features extracted and PSRCC-11 was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      "The audio was made at the same time . The audio was made at the same time .",
      "the audio sample had PSRCC features extracted and PSRCC-11 was determined to have a large impact on the CNN model that determined the sample to be bonafide . The audio was made at the same time .",
      "the audio sample had PSRCC features extracted and PSRCC-11 was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      "The audio was made at the same time ."
    ],
    "new_mr": "<inform> inform ( <classification> classification: [ bonafide ], <edit_type> edit type: [ none ]> )"
  },
  {
    "mr": "inform(extracted[LFCC], model[CNN], important[LFCC-53], classification[bonafide])",
    "ref": [
      "Yes, LFCC-55, which a shap value of 0.3192, was used to detect the sample as replayed .",
      " the audio sample had LFCC features extracted and LFCC-53 was determined to have a large impact on the C model that determined the sample to be bonafide .",
      " the audio sample had LFCC features extracted and LFCC-53 was determined to have a large impact on the CNN model that determined the sample to be  .",
      "Yes, LFCC-55, which a shap value of 0.3192, was used to detect the sample as replayed .  the audio sample had LFCC features extracted and LFCC-53 was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      " the audio sample had LFCC features extracted and bonafide was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      " the audio sample had LFCC features extracted and LFCC-53 was determined to have a large impact on the LFCC model that determined the sample to be bonafide .",
      " the audio sample had LFCC features extracted and LFCC-53 was determined to have a large impact on the CNN model that determined the sample to be LFCC-53 .",
      " the audio sample had LF features extracted and LF-53 was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      " the audio sample had bonafide features extracted and bonafide-53 was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      "the audio sample had LFCC features extracted and LFCC-53 was determined to have a large impact on the CNN model that determined the sample to be bonafide .  the audio sample had LFCC features extracted and LFCC-53 was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      " the audio sample had LFCC features extracted and LFCC-53 was determined to have a large impact on the CNN model that determined the sample to be bonafide ."
    ],
    "new_mr": "<inform> inform ( <extracted> extracted: [ LFCC ], <model> model: [ CNN ], <important> important: [ LFCC-53 ], <classification> classification: [ bonafide ]> )"
  },
  {
    "mr": "inform(extracted[PSRCC], model[CNN], important[PSRCC-11], classification[replayed])",
    "ref": [
      " the audio sample had PSRCC features extracted and PSRCC-11 was determined to have a large impact on the CNN model that determined the sample to be PSRCC .",
      " the audio sample had PSRCC features extracted and PSRCC-11 was determined to have a large impact on the CNN model that determined the sample to be replay .",
      " the audio sample had PSRCC features extracted and PSRCC-11 was determined to have a large impact on the CN model that determined the sample to be replayed .",
      "shap determined that the PSRCC-3 feature was one of the more important features by assigning it a value of -0.0079 .  the audio sample had PSRCC features extracted and PSRCC-11 was determined to have a large impact on the CNN model that determined the sample to be replayed .",
      " the audio sample had replayed features extracted and replayed-11 was determined to have a large impact on the CNN model that determined the sample to be replayed .",
      " the audio sample had PSRCC features extracted and PSRCC was determined to have a large impact on the CNN model that determined the sample to be replayed .",
      " the audio sample had PSRCC features extracted and PSRCC-1 was determined to have a large impact on the CNN model that determined the sample to be replayed .",
      "the audio sample had PSRCC features extracted and PSRCC-11 was determined to have a large impact on the CNN model that determined the sample to be replayed .  the audio sample had PSRCC features extracted and PSRCC-11 was determined to have a large impact on the CNN model that determined the sample to be replayed .",
      " the audio sample had  features extracted and -11 was determined to have a large impact on the CNN model that determined the sample to be replayed .",
      "shap determined that the PSRCC-3 feature was one of the more important features by assigning it a value of -0.0079 .",
      " the audio sample had PSRCC features extracted and PSRCC-11 was determined to have a large impact on the CNN model that determined the sample to be replayed ."
    ],
    "new_mr": "<inform> inform ( <extracted> extracted: [ PSRCC ], <model> model: [ CNN ], <important> important: [ PSRCC-11 ], <classification> classification: [ replayed ]> )"
  },
  {
    "mr": "inform(response[Yes], interpreter[shap], important[LFCC-46], classification[replayed], shap_value[0.4075])",
    "ref": [
      " Y, LFCC-46, which a shap value of 0.4075, was used to detect the sample as replayed .",
      " Yes, LFCC-46.4075, was used to detect the sample as replayed .",
      "Yes, MSRCC-7, which a shap value of 0.7602, was used to detect the sample as replayed .",
      " Yes, LFCC-46, which a shap value of 0.4075, was used to detect the sample as replay .",
      " LFCC-46, LFCC-46, which a shap value of 0.4075, was used to detect the sample as replayed .",
      " Yes, LFCC-46, which a shap value of , was used to detect the sample as replayed .",
      " Yes, LFCC-46, was used to detect the sample as replayed .",
      " Yes, replayed, which a shap value of 0.4075, was used to detect the sample as replayed .",
      " Yes, LFCC-46, which a shap value of 0.4075, was used to detect the sample as LFCC-46 .",
      "Yes, MSRCC-7, which a shap value of 0.7602, was used to detect the sample as replayed .  Yes, LFCC-46, which a shap value of 0.4075, was used to detect the sample as replayed .",
      " Yes, LFCC-46, which a shap value of 0.4075, was used to detect the sample as replayed ."
    ],
    "new_mr": "<inform> inform ( <response> response: [ Yes ], <interpreter> interpreter: [ shap ], <important> important: [ LFCC-46 ], <classification> classification: [ replayed ], <shap_value> shap value: [ 0.4075 ]> )"
  },
  {
    "mr": "inform(response[Yes], interpreter[shap], important[MSRCC-9], classification[bonafide], shap_value[0.7395])",
    "ref": [
      "Spectral Centroid Magnitude Coefficients .",
      " Yes, MSRCC-9.7395, was used to detect the sample as bonafide .",
      " , MSRCC-9, which a shap value of 0.7395, was used to detect the sample as bonafide .",
      " Yes, MSRC, which a shap value of 0.7395, was used to detect the sample as bonafide .",
      " Yes, MSRCC-9, which a MSRCC-9 value of 0.7395, was used to detect the sample as bonafide .",
      " Yes, MSRCC-9, was used to detect the sample as bonafide .",
      "Spectral Centroid Magnitude Coefficients .  Yes, MSRCC-9, which a shap value of 0.7395, was used to detect the sample as bonafide .",
      " Yes.7395, was used to detect the sample as bonafide .",
      " Yes, which a shap value of 0.7395, was used to detect the sample as bonafide .",
      " Yes, MSRCC-9, which a shap value of 0.7, was used to detect the sample as bonafide .",
      " Yes, MSRCC-9, which a shap value of 0.7395, was used to detect the sample as bonafide ."
    ],
    "new_mr": "<inform> inform ( <response> response: [ Yes ], <interpreter> interpreter: [ shap ], <important> important: [ MSRCC-9 ], <classification> classification: [ bonafide ], <shap_value> shap value: [ 0.7395 ]> )"
  },
  {
    "mr": "inform(interpreter[shap], important[LFCC-55], shap_value[-0.6132])",
    "ref": [
      " shap determined that the LFCC-55 feature was one of the more important features by assigning it a value of -0.613 .",
      "Yes, LFCC-40, which a shap value of -0.6692, was used to detect the id of speaker 4 for the audio sample .",
      "shap determined that the LFCC-55 feature was one of the more important features by assigning it a value of -0.6132 .  shap determined that the LFCC-55 feature was one of the more important features by assigning it a value of -0.6132 .",
      " shap determined that the LFCC-55 feature was one of the more important features by assigning it a value of LFCC-55 .",
      "  determined that the LFCC-55 feature was one of the more important features by assigning it a value of -0.6132 .",
      " shap determined that the -0.6132 feature was one of the more important features by assigning it a value of -0.6132 .",
      " shap determined that the LFCC- feature was one of the more important features by assigning it a value of -0.6132 .",
      "Yes, LFCC-40, which a shap value of -0.6692, was used to detect the id of speaker 4 for the audio sample .  shap determined that the LFCC-55 feature was one of the more important features by assigning it a value of -0.6132 .",
      " LFCC-55 determined that the LFCC-55 feature was one of the more important features by assigning it a value of -0.6132 .",
      " shap determined that the LFCC-55 feature was one of the more important features by assigning it a value of -0.613 .",
      " shap determined that the LFCC-55 feature was one of the more important features by assigning it a value of -0.6132 ."
    ],
    "new_mr": "<inform> inform ( <interpreter> interpreter: [ shap ], <important> important: [ LFCC-55 ], <shap_value> shap value: [ -0.6132 ]> )"
  },
  {
    "mr": "inform(general)",
    "ref": [
      "the audio sample was used in a SVM model tasked at detecting speaker id, determined to be 1 . Linear Prediction Cepstral Coefficients are an alternative to MFCC in terms of cepstral feature computation is from all-pole representation of signal . Linear prediction cepstral coefficients (LPCCs) are derived from the linear prediction coefficients ( LPCs ) by a recursive operation .",
      "the audio sample was used in a SVM model tasked at detecting speaker id, determined to be 1 .  the audio sample was used in a SVM model tasked at detecting speaker id, determined to be 1 .",
      "the audio sample was used in a SVM model tasked at detecting speaker id, determined to be 1 . Linear prediction cepstral coefficients (LPCCs) are derived from the linear prediction coefficients ( LPCs ) by a recursive operation .",
      "Linear prediction cepstral coefficients (LPCCs) are derived from the linear prediction coefficients ( LPCs ) by a recursive operation . Linear Prediction Cepstral Coefficients are an alternative to MFCC in terms of cepstral feature computation is from all-pole representation of signal . Linear prediction cepstral coefficients (LPCCs) are derived from the linear prediction coefficients ( LPCs ) by a recursive operation . Linear prediction cepstral coefficients (LPCCs) are derived from the linear prediction coefficients ( LPCs ) by a recursive operation .",
      "Linear prediction cepstral coefficients (LPCCs) are derived from the linear prediction coefficients ( LPCs ) by a recursive operation .",
      "the audio sample was used in a SVM model tasked at detecting speaker id, determined to be 1 .  the audio sample was used in a SVM model tasked at detecting speaker id, determined to be 1 . Linear Prediction Cepstral Coefficients are an alternative to MFCC in terms of cepstral feature computation is from all-pole representation of signal . Linear prediction cepstral coefficients (LPCCs) are derived from the linear prediction coefficients ( LPCs ) by a recursive operation .",
      "Linear Prediction Cepstral Coefficients are an alternative to MFCC in terms of cepstral feature computation is from all-pole representation of signal .",
      "Linear Prediction Cepstral Coefficients are an alternative to MFCC in terms of cepstral feature computation is from all-pole representation of signal . Linear prediction cepstral coefficients (LPCCs) are derived from the linear prediction coefficients ( LPCs ) by a recursive operation . Linear prediction cepstral coefficients (LPCCs) are derived from the linear prediction coefficients ( LPCs ) by a recursive operation .",
      "the audio sample was used in a SVM model tasked at detecting speaker id, determined to be 1 . Linear Prediction Cepstral Coefficients are an alternative to MFCC in terms of cepstral feature computation is from all-pole representation of signal . Linear prediction cepstral coefficients (LPCCs) are derived from the linear prediction coefficients ( LPCs ) by a recursive operation .",
      "the audio sample was used in a SVM model tasked at detecting speaker id, determined to be 1 .  the audio sample was used in a SVM model tasked at detecting speaker id, determined to be 1 .",
      "Linear Prediction Cepstral Coefficients are an alternative to MFCC in terms of cepstral feature computation is from all-pole representation of signal . Linear prediction cepstral coefficients (LPCCs) are derived from the linear prediction coefficients ( LPCs ) by a recursive operation ."
    ],
    "new_mr": "<inform> inform ( > )"
  },
  {
    "mr": "inform(response[Yes], interpreter[shap], important[GTCC-10], classification[bonafide], shap_value[0])",
    "ref": [
      " Yes.",
      " Yes, GTC, which a shap value of 0, was used to detect the sample as bonafide .",
      " Yes, GTCC-10, which a shap value of 0, was used to detect the sample as Yes .",
      " Yes, GTCC-1, which a shap value of , was used to detect the sample as bonafide .",
      " Yes, bonafide, which a shap value of 0, was used to detect the sample as bonafide .",
      " Yes, which a shap value of 0, was used to detect the sample as bonafide .",
      "Yes, person 4 was detected by LFCC-26 with a shap value of 0.7394 .",
      "Yes, GTCC-10, which a shap value of 0, was used to detect the sample as bonafide .  Yes, GTCC-10, which a shap value of 0, was used to detect the sample as bonafide .",
      " Yes, GTCC-10, which a shap value of 0.",
      " Yes, GTCC-10, which a 0 value of 0, was used to detect the sample as bonafide .",
      " Yes, GTCC-10, which a shap value of 0, was used to detect the sample as bonafide ."
    ],
    "new_mr": "<inform> inform ( <response> response: [ Yes ], <interpreter> interpreter: [ shap ], <important> important: [ GTCC-10 ], <classification> classification: [ bonafide ], <shap_value> shap value: [ 0 ]> )"
  },
  {
    "mr": "inform(interpreter[shap], important[LFCC-2], shap_value[0.2561])",
    "ref": [
      "shap determined that the LFCC-2 feature was one of the more important features by assigning it a value of 0.2561 .  shap determined that the LFCC-2 feature was one of the more important features by assigning it a value of 0.2561 .",
      "the audio sample had LFCC features extracted and LFCC-13 was determined to have a large impact on the CNN model that determined the sample to be replayed .  shap determined that the LFCC-2 feature was one of the more important features by assigning it a value of 0.2561 .",
      "  determined that the LFCC-2 feature was one of the more important features by assigning it a value of 0.2561 .",
      " shap determined that the LFCC-2 feature was one of the more important features by assigning it a value of LFCC-2 .",
      "the audio sample had LFCC features extracted and LFCC-13 was determined to have a large impact on the CNN model that determined the sample to be replayed .",
      " 0.2561 determined that the LFCC-2 feature was one of the more important features by assigning it a value of 0.2561 .",
      " shap determined that the  feature was one of the more important features by assigning it a value of 0.2561 .",
      " shap determined that the shap feature was one of the more important features by assigning it a value of 0.2561 .",
      " shap determined that the LFCC-2 feature was one of the more important features by assigning it a value of 0.256 .",
      "shap determined that the LFCC-2 feature was one of the more important features by assigning it a value of 0.2561 .  shap determined that the LFCC-2 feature was one of the more important features by assigning it a value of 0.2561 .",
      " shap determined that the LFCC-2 feature was one of the more important features by assigning it a value of 0.2561 ."
    ],
    "new_mr": "<inform> inform ( <interpreter> interpreter: [ shap ], <important> important: [ LFCC-2 ], <shap_value> shap value: [ 0.2561 ]> )"
  },
  {
    "mr": "inform(extracted[MFCC], model[CNN], important[MFCC-6], classification[bonafide])",
    "ref": [
      " the audio sample had bonafide features extracted and bonafide-6 was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      " the audio sample had MFCC features extracted and MFCC-6 was determined to have a large impact on the CNN model that determined the sample to be MFCC-6 .",
      " the audio sample had MFCC features extracted and MFCC-6 was determined to have a large impact on the CN model that determined the sample to be bonafide .",
      " the audio sample had MFCC features extracted and MFCC-6 was determined to have a large impact on the MFCC-6 model that determined the sample to be bonafide .",
      " the audio sample had MFCC features extracted and MFC was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      "Most of the recording was not made with a mobile phone .  the audio sample had MFCC features extracted and MFCC-6 was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      " the audio sample had MF features extracted and MF-6 was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      "Most of the recording was not made with a mobile phone .",
      " the audio sample had MFCC features extracted and CNN was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      "the audio sample had MFCC features extracted and MFCC-6 was determined to have a large impact on the CNN model that determined the sample to be bonafide .  the audio sample had MFCC features extracted and MFCC-6 was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      " the audio sample had MFCC features extracted and MFCC-6 was determined to have a large impact on the CNN model that determined the sample to be bonafide ."
    ],
    "new_mr": "<inform> inform ( <extracted> extracted: [ MFCC ], <model> model: [ CNN ], <important> important: [ MFCC-6 ], <classification> classification: [ bonafide ]> )"
  },
  {
    "mr": "inform(extracted[LFCC], model[CNN], important[LFCC-30], classification[bonafide])",
    "ref": [
      " the audio sample had LFCC features extracted and LFCC-30 was determined to have a large impact on the CNN model that determined the sample to be bona .",
      " the audio sample had LFCC features extracted and LFCC-30 was determined to have a large impact on the CNN model that determined the sample to be LFCC-30 .",
      " the audio sample had LFCC features extracted and LFCC- was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      "Yes, LFCC-44, which a shap value of 0.1772, was used to detect the id of speaker 3 for the audio sample .",
      " the audio sample had LFCC features extracted and LFCC-30 was determined to have a large impact on the CN model that determined the sample to be bonafide .",
      " the audio sample had LFCC features extracted and LFCC-30 was determined to have a large impact on the LFCC-30 model that determined the sample to be bonafide .",
      " the audio sample had LFCC features extracted and LFCC was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      "the audio sample had LFCC features extracted and LFCC-30 was determined to have a large impact on the CNN model that determined the sample to be bonafide .  the audio sample had LFCC features extracted and LFCC-30 was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      "Yes, LFCC-44, which a shap value of 0.1772, was used to detect the id of speaker 3 for the audio sample .  the audio sample had LFCC features extracted and LFCC-30 was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      " the audio sample had LF features extracted and LF-30 was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      " the audio sample had LFCC features extracted and LFCC-30 was determined to have a large impact on the CNN model that determined the sample to be bonafide ."
    ],
    "new_mr": "<inform> inform ( <extracted> extracted: [ LFCC ], <model> model: [ CNN ], <important> important: [ LFCC-30 ], <classification> classification: [ bonafide ]> )"
  },
  {
    "mr": "inform(classification[spoof], edit_type[synthetic],classified_by[feature])",
    "ref": [
      "SHAP gave CQCC-6 a value of 0.521, MFCC-0 a value of 0.346, LFCC-5 a value of 0.184, CQCC-0 a value of 0.0673 . SHAP gave CQCC-6 a value of 0.521, MFCC-0 a value of 0.346, LFCC-5 a value of 0.184, CQCC-0 a value of 0.0673 .",
      "SHAP gave CQCC-6 a value of 0.521.346, LFCC-5 a value of 0.184, CQCC-0 a value of 0.0673 . ",
      "SHAP gave CQCC-6 a value of 0.521, MFCC-0 a value of 0.346.184, CQCC-0 a value of 0.0673 . ",
      "SHAP gave CQCC-6 a value of 0.521, MFCC-0 a value of 0.346, CQCC-0 a value of 0.0673 . ",
      "The recording file was classified as being synthetic by a CNN model . SHAP gave CQCC-6 a value of 0.521, MFCC-0 a value of 0.346, LFCC-5 a value of 0.184, CQCC-0 a value of 0.0673 .",
      "SHAP gave CQCC-6 a value of 0.521, LFCC-5 a value of 0.184, CQCC-0 a value of 0.0673 . ",
      "The recording file was classified as being synthetic by a CNN model .",
      "SHAP gave CQCC-6 a value of 0.521, MFCC-0 a value of 0.346, LFCC-5 a value of 0.184.0673 . ",
      "SHAP gave CQCC-6 a value of 0.521, MFCC-0 a value of 0.346, LFCC-5 a value of 0.184, CQCC-0 a value of 0.0673 . SHAP gave CQCC-6 a value of 0.521, MFCC-0 a value of 0.346, LFCC-5 a value of 0.184, CQCC-0 a value of 0.0673 .",
      "SHAP gave CQCC-6 a value of 0.521.346, LFCC-5 a value of 0.184, CQCC-0 a value of 0.0673 . ",
      "SHAP gave CQCC-6 a value of 0.521, MFCC-0 a value of 0.346, LFCC-5 a value of 0.184, CQCC-0 a value of 0.0673 . "
    ],
    "new_mr": "<inform> inform ( <classification> classification: [ spoof ], <edit_type> edit type: [ synthetic ]> )"
  },
  {
    "mr": "inform(classification[spoof], edit_type[environment])",
    "ref": [
      "Yes, person 5 was detected by PSRCC-8 with a shap value of 0.1874 . It shows signs of artificially added noise .",
      "Yes, person 5 was detected by PSRCC-8 with a shap value of 0.1874 .",
      "It shows signs of artificially added noise . It shows signs of artificially added noise .",
      "Yes, person 5 was detected by PSRCC-8 with a shap value of 0.1874 . It shows signs of artificially added noise .",
      "Yes, person 5 was detected by PSRCC-8 with a shap value of 0.1874 .",
      "It shows signs of artificially added noise . It shows signs of artificially added noise .",
      "Yes, person 5 was detected by PSRCC-8 with a shap value of 0.1874 . It shows signs of artificially added noise .",
      "Yes, person 5 was detected by PSRCC-8 with a shap value of 0.1874 .",
      "It shows signs of artificially added noise . It shows signs of artificially added noise .",
      "Yes, person 5 was detected by PSRCC-8 with a shap value of 0.1874 . It shows signs of artificially added noise .",
      "It shows signs of artificially added noise . "
    ],
    "new_mr": "<inform> inform ( <classification> classification: [ spoof ], <edit_type> edit type: [ environment ]> )"
  },
  {
    "mr": "inform(response[Yes], interpreter[shap], important[PSRCC-3], classification[replayed], shap_value[0.3323])",
    "ref": [
      " Yes, PSRCC-3, which a shap value of Yes, was used to detect the sample as replayed .",
      " Yes, PSRCC-3, which a shap value of 0.3323, was used to detect the sample as 0.3323 .",
      " Yes, PSRCC-3, which a shap value of 0.3323.",
      " Yes, PSRCC-3, which a  value of 0.3323, was used to detect the sample as replayed .",
      "SHAP determined that CQCC-0, MFCC-0, LFCC-2, MFCC-4 had the highest impact on the classification .  Yes, PSRCC-3, which a shap value of 0.3323, was used to detect the sample as replayed .",
      " Y, PSRCC-3, which a shap value of 0.3323, was used to detect the sample as replayed .",
      " Yes, PSRCC-3.3323, was used to detect the sample as replayed .",
      " Yes, PSRCC-3, which a shap value of 0.3323, was used to detect the sample as replay .",
      " Yes, shap, which a shap value of 0.3323, was used to detect the sample as replayed .",
      "Yes, PSRCC-3, which a shap value of 0.3323, was used to detect the sample as replayed .  Yes, PSRCC-3, which a shap value of 0.3323, was used to detect the sample as replayed .",
      " Yes, PSRCC-3, which a shap value of 0.3323, was used to detect the sample as replayed ."
    ],
    "new_mr": "<inform> inform ( <response> response: [ Yes ], <interpreter> interpreter: [ shap ], <important> important: [ PSRCC-3 ], <classification> classification: [ replayed ], <shap_value> shap value: [ 0.3323 ]> )"
  },
  {
    "mr": "inform(extracted[LFCC], model[CNN], important[LFCC-43], classification[bonafide])",
    "ref": [
      " the audio sample had LFCC features extracted and LFCC-43 was determined to have a large impact on the CNN model that determined the sample to be  .",
      "Yes, LFCC-44, which a shap value of 0.1772, was used to detect the id of speaker 3 for the audio sample .  the audio sample had LFCC features extracted and LFCC-43 was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      " the audio sample had LFCC features extracted and LFCC-43 was determined to have a large impact on the CNN model that determined the sample to be CNN .",
      " the audio sample had LFCC features extracted and bonafide was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      " the audio sample had  features extracted and -43 was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      "the audio sample had LFCC features extracted and LFCC-43 was determined to have a large impact on the CNN model that determined the sample to be bonafide .  the audio sample had LFCC features extracted and LFCC-43 was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      " the audio sample had LFCC features extracted and LFCC-43 was determined to have a large impact on the  model that determined the sample to be bonafide .",
      "Yes, LFCC-44, which a shap value of 0.1772, was used to detect the id of speaker 3 for the audio sample .",
      " the audio sample had LFCC-43 features extracted and LFCC-43-43 was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      " the audio sample had LFCC features extracted and  was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      " the audio sample had LFCC features extracted and LFCC-43 was determined to have a large impact on the CNN model that determined the sample to be bonafide ."
    ],
    "new_mr": "<inform> inform ( <extracted> extracted: [ LFCC ], <model> model: [ CNN ], <important> important: [ LFCC-43 ], <classification> classification: [ bonafide ]> )"
  },
  {
    "mr": "inform(classification[spoof])",
    "ref": [
      "the audio sample had LFCC features extracted and LFCC-46 was determined to have a large impact on the CNN model that determined the sample to be bonafide . The audio has been tampered with .",
      "the audio sample had LFCC features extracted and LFCC-46 was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      "The audio has been tampered with . The audio has been tampered with .",
      "the audio sample had LFCC features extracted and LFCC-46 was determined to have a large impact on the CNN model that determined the sample to be bonafide . The audio has been tampered with .",
      "the audio sample had LFCC features extracted and LFCC-46 was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      "The audio has been tampered with . The audio has been tampered with .",
      "the audio sample had LFCC features extracted and LFCC-46 was determined to have a large impact on the CNN model that determined the sample to be bonafide . The audio has been tampered with .",
      "the audio sample had LFCC features extracted and LFCC-46 was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      "The audio has been tampered with . The audio has been tampered with .",
      "the audio sample had LFCC features extracted and LFCC-46 was determined to have a large impact on the CNN model that determined the sample to be bonafide . The audio has been tampered with .",
      "The audio has been tampered with ."
    ],
    "new_mr": "<inform> inform ( <classification> classification: [ spoof ]> )"
  },
  {
    "mr": "inform(response[Yes], interpreter[shap], important[LFCC-4], classification[replayed], shap_value[-0.069])",
    "ref": [
      " Yes, LFCC-4, which a LFCC-4 value of -0.069, was used to detect the sample as replayed .",
      "Yes, LFCC-4, which a shap value of -0.069, was used to detect the sample as replayed .  Yes, LFCC-4, which a shap value of -0.069, was used to detect the sample as replayed .",
      " Yes, LFCC-4.069, was used to detect the sample as replayed .",
      " Yes, which a shap value of -0.069, was used to detect the sample as replayed .",
      " Yes, LFCC-4, was used to detect the sample as replayed .",
      " Yes, LFCC-4, which a shap value of replayed, was used to detect the sample as replayed .",
      " Yes, LFCC-4, which a shap value of , was used to detect the sample as replayed .",
      " shap, LFCC-4, which a shap value of -0.069, was used to detect the sample as replayed .",
      " Yes, LFCC-4, which a shap value of -0.069.",
      " Yes.069, was used to detect the sample as replayed .",
      " Yes, LFCC-4, which a shap value of -0.069, was used to detect the sample as replayed ."
    ],
    "new_mr": "<inform> inform ( <response> response: [ Yes ], <interpreter> interpreter: [ shap ], <important> important: [ LFCC-4 ], <classification> classification: [ replayed ], <shap_value> shap value: [ -0.069 ]> )"
  },
  {
    "mr": "inform(interpreter[shap], important[GTCC-4], shap_value[1])",
    "ref": [
      "shap determined that the GTCC-4 feature was one of the more important features by assigning it a value of 1 .  shap determined that the GTCC-4 feature was one of the more important features by assigning it a value of 1 .",
      " shap determined that the  feature was one of the more important features by assigning it a value of 1 .",
      " GTCC-4 determined that the GTCC-4 feature was one of the more important features by assigning it a value of 1 .",
      " shap determined that the 1 feature was one of the more important features by assigning it a value of 1 .",
      "  determined that the GTCC-4 feature was one of the more important features by assigning it a value of 1 .",
      " shap determined that the GTCC-4 feature was one of the more important features by assigning it a value of  .",
      "Yes, LFCC-51, which a shap value of -0.5435, was used to detect the id of speaker 5 for the audio sample .  shap determined that the GTCC-4 feature was one of the more important features by assigning it a value of 1 .",
      " shap determined that the GTCC-4 feature was one of the more important features by assigning it a value of shap .",
      "Yes, LFCC-51, which a shap value of -0.5435, was used to detect the id of speaker 5 for the audio sample .",
      "shap determined that the GTCC-4 feature was one of the more important features by assigning it a value of 1 .  shap determined that the GTCC-4 feature was one of the more important features by assigning it a value of 1 .",
      " shap determined that the GTCC-4 feature was one of the more important features by assigning it a value of 1 ."
    ],
    "new_mr": "<inform> inform ( <interpreter> interpreter: [ shap ], <important> important: [ GTCC-4 ], <shap_value> shap value: [ 1 ]> )"
  },
  {
    "mr": "inform(response[yes], speaker_id[6], feature[GTCC-7], interpreter[shap], shap_value[1])",
    "ref": [
      "It has been replayed and re-recorded 3 times .  Yes, person 6 was detected by GTCC-7 with a shap value of 1 .",
      " Yes, person 6 was detected by GTCC-7 with a shap value of GTCC-7 .",
      "It has been replayed and re-recorded 3 times .",
      " Yes.",
      " Yes, person 6 was detected by 6 with a shap value of 1 .",
      " Yes, person 6 was detected by GTCC-7 with a 6 value of 1 .",
      " Yes, person  was detected by GTCC-7 with a shap value of 1 .",
      " Yes, person GTCC-7 was detected by GTCC-7 with a shap value of 1 .",
      " Yes, person 6 was detected by GTCC- with a shap value of 1 .",
      " Yes, person 6 was detected by GTCC-7 with a  value of 1 .",
      " Yes, person 6 was detected by GTCC-7 with a shap value of 1 ."
    ],
    "new_mr": "<inform> inform ( <response> response: [ yes ], <speaker_id> speaker id: [ 6 ], <feature> feature: [ GTCC-7 ], <interpreter> interpreter: [ shap ], <shap_value> shap value: [ 1 ]> )"
  },
  {
    "mr": "inform(response[Yes], interpreter[shap], important[LFCC-37], classification[replayed], shap_value[0.4298])",
    "ref": [
      " Yes, LFCC-37, which a shap value of 0.4298.",
      " Yes, LFCC-37, which a 0.4298 value of 0.4298, was used to detect the sample as replayed .",
      " Yes.4298, was used to detect the sample as replayed .",
      " Yes, LFCC-37, which a shap value of replayed, was used to detect the sample as replayed .",
      "Yes, person 6 was detected by PSRCC-6 with a shap value of -0.0215 .  Yes, LFCC-37, which a shap value of 0.4298, was used to detect the sample as replayed .",
      " Yes, LFCC-37, which a shap value of 0.429, was used to detect the sample as replayed .",
      " Y, LFCC-37, which a shap value of 0.4298, was used to detect the sample as replayed .",
      " Yes, shap, which a shap value of 0.4298, was used to detect the sample as replayed .",
      " Yes, LFCC-37, which a sh value of 0.4298, was used to detect the sample as replayed .",
      " Yes, LFCC-37, which a shap value of 0.4298, was used to detect the sample as  .",
      " Yes, LFCC-37, which a shap value of 0.4298, was used to detect the sample as replayed ."
    ],
    "new_mr": "<inform> inform ( <response> response: [ Yes ], <interpreter> interpreter: [ shap ], <important> important: [ LFCC-37 ], <classification> classification: [ replayed ], <shap_value> shap value: [ 0.4298 ]> )"
  },
  {
    "mr": "inform(interpreter[shap], important[LFCC-45], shap_value[0.3935])",
    "ref": [
      " shap determined that the LFCC-45 feature was one of the more important features by assigning it a value of  .",
      "shap determined that the LFCC-25 feature was one of the more important features by assigning it a value of -0.7432 .",
      " 0.3935 determined that the LFCC-45 feature was one of the more important features by assigning it a value of 0.3935 .",
      " shap determined that the  feature was one of the more important features by assigning it a value of 0.3935 .",
      "shap determined that the LFCC-25 feature was one of the more important features by assigning it a value of -0.7432 .  shap determined that the LFCC-45 feature was one of the more important features by assigning it a value of 0.3935 .",
      " shap determined that the 0.3935 feature was one of the more important features by assigning it a value of 0.3935 .",
      " shap determined that the LFCC-45 feature was one of the more important features by assigning it a value of shap .",
      "shap determined that the LFCC-45 feature was one of the more important features by assigning it a value of 0.3935 .  shap determined that the LFCC-45 feature was one of the more important features by assigning it a value of 0.3935 .",
      " sh determined that the LFCC-45 feature was one of the more important features by assigning it a value of 0.3935 .",
      " shap determined that the LFCC-45 feature was one of the more important features by assigning it a value of  .",
      " shap determined that the LFCC-45 feature was one of the more important features by assigning it a value of 0.3935 ."
    ],
    "new_mr": "<inform> inform ( <interpreter> interpreter: [ shap ], <important> important: [ LFCC-45 ], <shap_value> shap value: [ 0.3935 ]> )"
  },
  {
    "mr": "inform(response[Yes], interpreter[shap], important[MSRCC-0], classification[bonafide], shap_value[-0.5766])",
    "ref": [
      " Yes, MSRCC-0.5766, was used to detect the sample as bonafide .",
      " Yes, MSRCC-0, which a shap value of shap, was used to detect the sample as bonafide .",
      " Yes, MSRCC-0, which a shap value of -0.5766.",
      " Yes, MSRCC-0, which a Yes value of -0.5766, was used to detect the sample as bonafide .",
      " Y, MSRCC-0, which a shap value of -0.5766, was used to detect the sample as bonafide .",
      " Yes, MSRCC-0, was used to detect the sample as bonafide .",
      "Yes, MSRCC-0, which a shap value of -0.5766, was used to detect the sample as bonafide .  Yes, MSRCC-0, which a shap value of -0.5766, was used to detect the sample as bonafide .",
      " Yes.5766, was used to detect the sample as bonafide .",
      " Yes, MSRCC-0, which a shap value of -0.5766, was used to detect the sample as bo .",
      " Yes, M, which a shap value of -0.5766, was used to detect the sample as bonafide .",
      " Yes, MSRCC-0, which a shap value of -0.5766, was used to detect the sample as bonafide ."
    ],
    "new_mr": "<inform> inform ( <response> response: [ Yes ], <interpreter> interpreter: [ shap ], <important> important: [ MSRCC-0 ], <classification> classification: [ bonafide ], <shap_value> shap value: [ -0.5766 ]> )"
  },
  {
    "mr": "inform(response[Yes], classification[spoofed])",
    "ref": [
      "Yes, the recording was found to be Yes.",
      "spoofed, the recording was found to be spoofed.",
      "Y, the recording was found to be spoofed.",
      "Yes, the recording was found to be sp.",
      "Yes, the recording was found to be spoofed. Yes, the recording was found to be spoofed.",
      "Yes.",
      "The breathing rate changes",
      "The breathing rate changes Yes, the recording was found to be spoofed.",
      "Yes, the recording was found to be Yes.",
      "spoofed, the recording was found to be spoofed.",
      "Yes, the recording was found to be spoofed."
    ],
    "new_mr": "<inform> inform ( <response> response: [ Yes ], <classification> classification: [ spoofed ]> )"
  },
  {
    "mr": "inform(response[yes], speaker_id[6], feature[PSRCC-10], interpreter[shap], shap_value[-0.4226])",
    "ref": [
      " Yes, person 6 was detected by PSRCC-10 with a shap value of shap .",
      " Yes, person yes was detected by PSRCC-10 with a shap value of -0.422yes .",
      " Yes, person 6 was detected by PSRCC-1 with a shap value of -0.4226 .",
      " Yes, person 6 was detected by 6 with a shap value of -0.4226 .",
      "Yes, person 6 was detected by PSRCC-10 with a shap value of -0.4226 .  Yes, person 6 was detected by PSRCC-10 with a shap value of -0.4226 .",
      "shap determined that the LFCC-48 feature was one of the more important features by assigning it a value of 0.7218 .  Yes, person 6 was detected by PSRCC-10 with a shap value of -0.4226 .",
      " Yes, person 6 was detected by PSRCC-10 with a sha value of -0.4226 .",
      " Yes.4226 .",
      " Yes, person  was detected by PSRCC-10 with a shap value of -0.422 .",
      " Yes, person 6 was detected by PSRCC-10 with a shap value of -0.4 .",
      " Yes, person 6 was detected by PSRCC-10 with a shap value of -0.4226 ."
    ],
    "new_mr": "<inform> inform ( <response> response: [ yes ], <speaker_id> speaker id: [ 6 ], <feature> feature: [ PSRCC-10 ], <interpreter> interpreter: [ shap ], <shap_value> shap value: [ -0.4226 ]> )"
  },
  {
    "mr": "inform(classification[spoof], known_mic_signature[phone])",
    "ref": [
      "the audio sample had MSRCC features extracted and MSRCC-7 was determined to have a large impact on the CNN model that determined the sample to be replayed . Most of the recording was not made with a mobile phone .",
      "Most of the recording was not made with a mobile spoof .",
      "the audio sample had MSRCC features extracted and MSRCC-7 was determined to have a large impact on the CNN model that determined the sample to be replayed .",
      "Most of the recording was not made with a mobile p .",
      "Most of the recording was not made with a mobile phone . Most of the recording was not made with a mobile phone .",
      "Most of the recording was made with a mobile phone .",
      "the audio sample had MSRCC features extracted and MSRCC-7 was determined to have a large impact on the CNN model that determined the sample to be replayed . Most of the recording was not made with a mobile phone .",
      "Most of the recording was not made with a mobile spoof .",
      "the audio sample had MSRCC features extracted and MSRCC-7 was determined to have a large impact on the CNN model that determined the sample to be replayed .",
      "Most of the recording was not made with a mobile p .",
      "Most of the recording was not made with a mobile phone ."
    ],
    "new_mr": "<inform> inform ( <classification> classification: [ spoof ], <known_mic_signature> known mic signature: [ phone ]> )"
  },
  {
    "mr": "inform(response[Yes], interpreter[shap], important[LFCC-29], classification[bonafide], shap_value[0.3553])",
    "ref": [
      " Yes, 0.3553, which a shap value of 0.3553, was used to detect the sample as bonafide .",
      " Yes, LFCC-29, was used to detect the sample as bonafide .",
      " Ye, LFCC-29, which a shap value of 0.3553, was used to detect the sample as bonafide .",
      " Yes, LFCC-29, which a shap value of bonafide, was used to detect the sample as bonafide .",
      " bonafide, LFCC-29, which a shap value of 0.3553, was used to detect the sample as bonafide .",
      " Yes, LFCC-29, which a 0.3553 value of 0.3553, was used to detect the sample as bonafide .",
      " Yes.3553, was used to detect the sample as bonafide .",
      "the audio sample had MFCC features extracted and MFCC-10 was determined to have a large impact on the CNN model that determined the sample to be replayed .  Yes, LFCC-29, which a shap value of 0.3553, was used to detect the sample as bonafide .",
      "the audio sample had MFCC features extracted and MFCC-10 was determined to have a large impact on the CNN model that determined the sample to be replayed .",
      " Yes, LFCC-29, which a shap value of 0.355, was used to detect the sample as bonafide .",
      " Yes, LFCC-29, which a shap value of 0.3553, was used to detect the sample as bonafide ."
    ],
    "new_mr": "<inform> inform ( <response> response: [ Yes ], <interpreter> interpreter: [ shap ], <important> important: [ LFCC-29 ], <classification> classification: [ bonafide ], <shap_value> shap value: [ 0.3553 ]> )"
  },
  {
    "mr": "inform(general)",
    "ref": [
      "Yes, LFCC-28, which a shap value of -0.7878, was used to detect the sample as bonafide .",
      "Spectral Centroid Magnitude Coefficients . Spectral Centroid Magnitude Coefficients .",
      "Yes, LFCC-28, which a shap value of -0.7878, was used to detect the sample as bonafide . Spectral Centroid Magnitude Coefficients .",
      "Yes, LFCC-28, which a shap value of -0.7878, was used to detect the sample as bonafide .",
      "Spectral Centroid Magnitude Coefficients . Spectral Centroid Magnitude Coefficients .",
      "Yes, LFCC-28, which a shap value of -0.7878, was used to detect the sample as bonafide . Spectral Centroid Magnitude Coefficients .",
      "Yes, LFCC-28, which a shap value of -0.7878, was used to detect the sample as bonafide .",
      "Spectral Centroid Magnitude Coefficients . Spectral Centroid Magnitude Coefficients .",
      "Yes, LFCC-28, which a shap value of -0.7878, was used to detect the sample as bonafide . Spectral Centroid Magnitude Coefficients .",
      "Yes, LFCC-28, which a shap value of -0.7878, was used to detect the sample as bonafide .",
      "Spectral Centroid Magnitude Coefficients ."
    ],
    "new_mr": "<inform> inform ( > )"
  },
  {
    "mr": "inform(extracted[PSRCC], model[CNN], important[PSRCC-9], classification[replayed])",
    "ref": [
      " the audio sample had PSRCC features extracted and replayed was determined to have a large impact on the CNN model that determined the sample to be replayed .",
      " the audio sample had CNN features extracted and CNN-9 was determined to have a large impact on the CNN model that determined the sample to be replayed .",
      " the audio sample had PSRCC features extracted and PSRCC-9 was determined to have a large impact on the PSRCC model that determined the sample to be replayed .",
      " the audio sample had PSRCC features extracted and PSRCC-9 was determined to have a large impact on the CNN model that determined the sample to be PSRCC .",
      "the audio sample had MSRCC features extracted and MSRCC-5 was determined to have a large impact on the CNN model that determined the sample to be replayed .",
      "the audio sample had PSRCC features extracted and PSRCC-9 was determined to have a large impact on the CNN model that determined the sample to be replayed .  the audio sample had PSRCC features extracted and PSRCC-9 was determined to have a large impact on the CNN model that determined the sample to be replayed .",
      " the audio sample had PSRCC features extracted and PSRCC-9 was determined to have a large impact on the CNN model that determined the sample to be repla .",
      " the audio sample had PSRCC features extracted and PSRCC-9 was determined to have a large impact on the C model that determined the sample to be replayed .",
      " the audio sample had P features extracted and P-9 was determined to have a large impact on the CNN model that determined the sample to be replayed .",
      " the audio sample had PSRCC features extracted and PS was determined to have a large impact on the CNN model that determined the sample to be replayed .",
      " the audio sample had PSRCC features extracted and PSRCC-9 was determined to have a large impact on the CNN model that determined the sample to be replayed ."
    ],
    "new_mr": "<inform> inform ( <extracted> extracted: [ PSRCC ], <model> model: [ CNN ], <important> important: [ PSRCC-9 ], <classification> classification: [ replayed ]> )"
  },
  {
    "mr": "inform(extracted[LFCC], model[CNN], important[LFCC-35], classification[bonafide])",
    "ref": [
      " the audio sample had LFCC features extracted and LFCC-35 was determined to have a large impact on the CNN model that determined the sample to be LFCC-35 .",
      " the audio sample had LFCC features extracted and CNN was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      "Yes, PSRCC-3, which a shap value of 0.3323, was used to detect the sample as replayed .  the audio sample had LFCC features extracted and LFCC-35 was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      " the audio sample had LFCC features extracted and LFCC-35 was determined to have a large impact on the C model that determined the sample to be bonafide .",
      "the audio sample had LFCC features extracted and LFCC-35 was determined to have a large impact on the CNN model that determined the sample to be bonafide .  the audio sample had LFCC features extracted and LFCC-35 was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      " the audio sample had bonafide features extracted and bonafide-35 was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      "Yes, PSRCC-3, which a shap value of 0.3323, was used to detect the sample as replayed .",
      " the audio sample had LFCC features extracted and LFCC-35 was determined to have a large impact on the CNN model that determined the sample to be bonaf .",
      " the audio sample had LFCC features extracted and LFCC-35 was determined to have a large impact on the bonafide model that determined the sample to be bonafide .",
      " the audio sample had LFCC features extracted and  was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      " the audio sample had LFCC features extracted and LFCC-35 was determined to have a large impact on the CNN model that determined the sample to be bonafide ."
    ],
    "new_mr": "<inform> inform ( <extracted> extracted: [ LFCC ], <model> model: [ CNN ], <important> important: [ LFCC-35 ], <classification> classification: [ bonafide ]> )"
  },
  {
    "mr": "inform(response[yes], speaker_id[7], feature[MSRCC-3], interpreter[shap], shap_value[-0.5871])",
    "ref": [
      " Yes, -0.5871, which a shap value of -0.5871, was used to detect the id of speaker 7 for the audio sample .",
      " Yes, MSRCC-3, which a MSRCC-3 value of -0.5871, was used to detect the id of speaker 7 for the audio sample .",
      " Yes, MSRCC-3, which a shap value of -0, was used to detect the id of speaker 7 for the audio sample .",
      " Yes, MSRCC-3, which a shap value of -0.581, was used to detect the id of speaker  for the audio sample .",
      " Yes, MSRCC-3.5871, was used to detect the id of speaker 7 for the audio sample .",
      " Yes, MSRCC-3, which a shap value of shap, was used to detect the id of speaker 7 for the audio sample .",
      " Yes, which a shap value of -0.5871, was used to detect the id of speaker 7 for the audio sample .",
      " Yes.5871, was used to detect the id of speaker 7 for the audio sample .",
      "Yes, MFCC-24, which a shap value of -0.9231, was used to detect the sample as bonafide .  Yes, MSRCC-3, which a shap value of -0.5871, was used to detect the id of speaker 7 for the audio sample .",
      " Yes, MSRCC-3, which a shap value of -0.58yes1, was used to detect the id of speaker yes for the audio sample .",
      " Yes, MSRCC-3, which a shap value of -0.5871, was used to detect the id of speaker 7 for the audio sample ."
    ],
    "new_mr": "<inform> inform ( <response> response: [ yes ], <speaker_id> speaker id: [ 7 ], <feature> feature: [ MSRCC-3 ], <interpreter> interpreter: [ shap ], <shap_value> shap value: [ -0.5871 ]> )"
  },
  {
    "mr": "inform(classification[bonafide], edit_type[none])",
    "ref": [
      "Yes, the recording was found to be spoofed.",
      "The audio sample was found to be bonafi.",
      "Yes, the recording was found to be spoofed. The audio sample was found to be bonafide.",
      "The audio sample was found to be bonafide. The audio sample was found to be bonafide.",
      "The audio sample was found to be none.",
      "Yes, the recording was found to be spoofed.",
      "The audio sample was found to be bonafi.",
      "Yes, the recording was found to be spoofed. The audio sample was found to be bonafide.",
      "The audio sample was found to be bonafide. The audio sample was found to be bonafide.",
      "The audio sample was found to be none.",
      "The audio sample was found to be bonafide."
    ],
    "new_mr": "<inform> inform ( <classification> classification: [ bonafide ], <edit_type> edit type: [ none ]> )"
  },
  {
    "mr": "inform(response[yes], speaker_id[6], feature[MFCC-1], interpreter[shap], shap_value[-0.3605])",
    "ref": [
      " Yes, MF, which a shap value of -0.3605, was used to detect the id of speaker 6 for the audio sample .",
      "Yes, LFCC-15, which a shap value of -0.1785, was used to detect the sample as bonafide .",
      " Yes, MFCC-1, which a shap value of 6, was used to detect the id of speaker 6 for the audio sample .",
      " Yes, MFCC-1, which a shap value of -0.305, was used to detect the id of speaker  for the audio sample .",
      " Yes, MFCC-1, which a shap value of -0.3605.",
      " Yes, MFCC-1, was used to detect the id of speaker 6 for the audio sample .",
      " Yes, MFCC-1, which a sh value of -0.3605, was used to detect the id of speaker 6 for the audio sample .",
      " Yes, MFCC-1, which a shap value of -0.3shap05, was used to detect the id of speaker shap for the audio sample .",
      " Yes, which a shap value of -0.3605, was used to detect the id of speaker 6 for the audio sample .",
      "Yes, MFCC-1, which a shap value of -0.3605, was used to detect the id of speaker 6 for the audio sample .  Yes, MFCC-1, which a shap value of -0.3605, was used to detect the id of speaker 6 for the audio sample .",
      " Yes, MFCC-1, which a shap value of -0.3605, was used to detect the id of speaker 6 for the audio sample ."
    ],
    "new_mr": "<inform> inform ( <response> response: [ yes ], <speaker_id> speaker id: [ 6 ], <feature> feature: [ MFCC-1 ], <interpreter> interpreter: [ shap ], <shap_value> shap value: [ -0.3605 ]> )"
  },
  {
    "mr": "inform(response[Yes], classification[spoofed])",
    "ref": [
      "Yes , the recording has been tampered with . Yes , the recording has been tampered with .",
      "the audio sample had MSRCC features extracted and MSRCC-3 was determined to have a large impact on the CNN model that determined the sample to be replayed . Yes , the recording has been tampered with .",
      "Yes .",
      "spoofed , the recording has been tampered with .",
      "the audio sample had MSRCC features extracted and MSRCC-3 was determined to have a large impact on the CNN model that determined the sample to be replayed .",
      " , the recording has been tampered with .",
      "Yes , the recording has been tampered with . Yes , the recording has been tampered with .",
      "the audio sample had MSRCC features extracted and MSRCC-3 was determined to have a large impact on the CNN model that determined the sample to be replayed . Yes , the recording has been tampered with .",
      "Yes .",
      "spoofed , the recording has been tampered with .",
      "Yes , the recording has been tampered with ."
    ],
    "new_mr": "<inform> inform ( <response> response: [ Yes ], <classification> classification: [ spoofed ]> )"
  },
  {
    "mr": "inform(response[yes], speaker_id[1], feature[MFCC-38], interpreter[shap], shap_value[0.6638])",
    "ref": [
      " Yes.6638 .",
      "Yes, person 1 was detected by MFCC-38 with a shap value of 0.6638 .  Yes, person 1 was detected by MFCC-38 with a shap value of 0.6638 .",
      " Yes, person yes was detected by MFCC-38 with a shap value of 0.6638 .",
      " Yes, person 1 was detected by MFCC-38 with a yes value of 0.6638 .",
      "yes, GTCC-1 was used to determine speaker id .",
      " Yes, person 1 was detected by 1 with a shap value of 0.6638 .",
      " Yes, person 1 was detected by MFCC-38 with a shap value of 1 .",
      " Yes, person 1 was detected by MFCC-38 with a s value of 0.6638 .",
      " Yes, person 1 was detected by MFCC-38 with a shap value of 0. .",
      " Yes, person 1 was detected by M with a shap value of 0.6638 .",
      " Yes, person 1 was detected by MFCC-38 with a shap value of 0.6638 ."
    ],
    "new_mr": "<inform> inform ( <response> response: [ yes ], <speaker_id> speaker id: [ 1 ], <feature> feature: [ MFCC-38 ], <interpreter> interpreter: [ shap ], <shap_value> shap value: [ 0.6638 ]> )"
  },
  {
    "mr": "inform(response[yes], speaker_id[1], feature[MFCC-41], interpreter[shap], shap_value[0.1403])",
    "ref": [
      " Yes, MFCC-41, which a shap value of , was used to detect the id of speaker 1 for the audio sample .",
      " Yes, MFCC-41, which a  value of 0.1403, was used to detect the id of speaker 1 for the audio sample .",
      " Yes, MFCC-41, which a shap value of MFCC-41, was used to detect the id of speaker 1 for the audio sample .",
      " Yes, which a shap value of 0.1403, was used to detect the id of speaker 1 for the audio sample .",
      " Yes, MFCC, which a shap value of 0.1403, was used to detect the id of speaker 1 for the audio sample .",
      "The audio sample had GTCC and MFCC features extracted and passed through a trained SVM which determined the id of speaker 1 .",
      " Yes, MFCC-4, which a shap value of 0.403, was used to detect the id of speaker  for the audio sample .",
      " Yes, MFCC-4MFCC-41, which a shap value of 0.MFCC-41403, was used to detect the id of speaker MFCC-41 for the audio sample .",
      " Yes.1403, was used to detect the id of speaker 1 for the audio sample .",
      " Yes, 1, which a shap value of 0.1403, was used to detect the id of speaker 1 for the audio sample .",
      " Yes, MFCC-41, which a shap value of 0.1403, was used to detect the id of speaker 1 for the audio sample ."
    ],
    "new_mr": "<inform> inform ( <response> response: [ yes ], <speaker_id> speaker id: [ 1 ], <feature> feature: [ MFCC-41 ], <interpreter> interpreter: [ shap ], <shap_value> shap value: [ 0.1403 ]> )"
  },
  {
    "mr": "inform(response[yes], speaker_id[1], feature[LFCC-19], interpreter[shap], shap_value[-0.7875])",
    "ref": [
      " Yes, person  was detected by LFCC-9 with a shap value of -0.7875 .",
      " Yes, person 1 was detected by yes with a shap value of -0.7875 .",
      " Yes, person shap was detected by LFCC-shap9 with a shap value of -0.7875 .",
      " Yes, person 1 was detected by LFCC-19 with a shap value of yes .",
      " Yes, person 1 was detected by LFCC-19 with a  value of -0.7875 .",
      " Yes, person 1 was detected by  with a shap value of -0.7875 .",
      "Yes, person 1 was detected by LFCC-19 with a shap value of -0.7875 .  Yes, person 1 was detected by LFCC-19 with a shap value of -0.7875 .",
      "Yes, MFCC-29, which a shap value of -0.6411, was used to detect the id of speaker 1 for the audio sample .  Yes, person 1 was detected by LFCC-19 with a shap value of -0.7875 .",
      " Yes.7875 .",
      " Yes, person 1 was detected by LFCC-19 with a LFCC-19 value of -0.7875 .",
      " Yes, person 1 was detected by LFCC-19 with a shap value of -0.7875 ."
    ],
    "new_mr": "<inform> inform ( <response> response: [ yes ], <speaker_id> speaker id: [ 1 ], <feature> feature: [ LFCC-19 ], <interpreter> interpreter: [ shap ], <shap_value> shap value: [ -0.7875 ]> )"
  },
  {
    "mr": "inform(response[Yes], interpreter[shap], important[LFCC-48], classification[bonafide], shap_value[0.4714])",
    "ref": [
      " Yes, LFCC-48, which a sha value of 0.4714, was used to detect the sample as bonafide .",
      "Yes, LFCC-48, which a shap value of 0.4714, was used to detect the sample as bonafide .  Yes, LFCC-48, which a shap value of 0.4714, was used to detect the sample as bonafide .",
      " Yes, LFCC-48, which a shap value of 0.4714.",
      " Yes, LFCC-48.4714, was used to detect the sample as bonafide .",
      " Yes, LFCC-48, which a shap value of 0.4714, was used to detect the sample as b .",
      " , LFCC-48, which a shap value of 0.4714, was used to detect the sample as bonafide .",
      " Yes.4714, was used to detect the sample as bonafide .",
      " Yes, which a shap value of 0.4714, was used to detect the sample as bonafide .",
      " Yes, LFCC-48, was used to detect the sample as bonafide .",
      " Yes, 0.4714, which a shap value of 0.4714, was used to detect the sample as bonafide .",
      " Yes, LFCC-48, which a shap value of 0.4714, was used to detect the sample as bonafide ."
    ],
    "new_mr": "<inform> inform ( <response> response: [ Yes ], <interpreter> interpreter: [ shap ], <important> important: [ LFCC-48 ], <classification> classification: [ bonafide ], <shap_value> shap value: [ 0.4714 ]> )"
  },
  {
    "mr": "inform(interpreter[shap], important[LFCC-35], shap_value[-0.3461])",
    "ref": [
      "shap determined that the LFCC-35 feature was one of the more important features by assigning it a value of -0.3461 .  shap determined that the LFCC-35 feature was one of the more important features by assigning it a value of -0.3461 .",
      " shap determined that the  feature was one of the more important features by assigning it a value of -0.3461 .",
      " shap determined that the LFCC-35 feature was one of the more important features by assigning it a value of  .",
      " sha determined that the LFCC-35 feature was one of the more important features by assigning it a value of -0.3461 .",
      " shap determined that the -0.3461 feature was one of the more important features by assigning it a value of -0.3461 .",
      " shap determined that the LFCC-35 feature was one of the more important features by assigning it a value of LFCC-35 .",
      "Yes, LFCC-23, which a shap value of 0.514, was used to detect the sample as bonafide .",
      " -0.3461 determined that the LFCC-35 feature was one of the more important features by assigning it a value of -0.3461 .",
      "Yes, LFCC-23, which a shap value of 0.514, was used to detect the sample as bonafide .  shap determined that the LFCC-35 feature was one of the more important features by assigning it a value of -0.3461 .",
      "shap determined that the LFCC-35 feature was one of the more important features by assigning it a value of -0.3461 .  shap determined that the LFCC-35 feature was one of the more important features by assigning it a value of -0.3461 .",
      " shap determined that the LFCC-35 feature was one of the more important features by assigning it a value of -0.3461 ."
    ],
    "new_mr": "<inform> inform ( <interpreter> interpreter: [ shap ], <important> important: [ LFCC-35 ], <shap_value> shap value: [ -0.3461 ]> )"
  },
  {
    "mr": "inform(response[Yes], classification[bonafide])",
    "ref": [
      "Y, the recording is bonafide . ",
      "Yes, the recording is bon . ",
      "shap determined that the GTCC-1 feature was one of the more important features by assigning it a value of 1 .",
      "Yes. ",
      "shap determined that the GTCC-1 feature was one of the more important features by assigning it a value of 1 . Yes, the recording is bonafide .",
      "bonafide, the recording is bonafide . ",
      "Yes, the recording is bonafide . Yes, the recording is bonafide .",
      "Yes, the recording is Yes . ",
      "Y, the recording is bonafide . ",
      "Yes, the recording is bon . ",
      "Yes, the recording is bonafide . "
    ],
    "new_mr": "<inform> inform ( <response> response: [ Yes ], <classification> classification: [ bonafide ]> )"
  },
  {
    "mr": "inform(classification[spoof], edit_type[cloning])",
    "ref": [
      "There appears to be a cloned voice on the audio . There appears to be a cloned voice on the audio .",
      "shap determined that the LFCC-48 feature was one of the more important features by assigning it a value of 0.7218 .",
      "shap determined that the LFCC-48 feature was one of the more important features by assigning it a value of 0.7218 . There appears to be a cloned voice on the audio .",
      "There appears to be a cloned voice on the audio . There appears to be a cloned voice on the audio .",
      "shap determined that the LFCC-48 feature was one of the more important features by assigning it a value of 0.7218 .",
      "shap determined that the LFCC-48 feature was one of the more important features by assigning it a value of 0.7218 . There appears to be a cloned voice on the audio .",
      "There appears to be a cloned voice on the audio . There appears to be a cloned voice on the audio .",
      "shap determined that the LFCC-48 feature was one of the more important features by assigning it a value of 0.7218 .",
      "shap determined that the LFCC-48 feature was one of the more important features by assigning it a value of 0.7218 . There appears to be a cloned voice on the audio .",
      "There appears to be a cloned voice on the audio . There appears to be a cloned voice on the audio .",
      "There appears to be a cloned voice on the audio ."
    ],
    "new_mr": "<inform> inform ( <classification> classification: [ spoof ], <edit_type> edit type: [ cloning ]> )"
  },
  {
    "mr": "inform(response[Yes], interpreter[shap], important[MFCC-1], classification[bonafide], shap_value[-0.0727])",
    "ref": [
      " MFCC-1, MFCC-1, which a shap value of -0.0727, was used to detect the sample as bonafide .",
      " Yes, MFCC-1, was used to detect the sample as bonafide .",
      " Yes, , which a shap value of -0.0727, was used to detect the sample as bonafide .",
      " Yes, MFCC-1, which a shap value of Yes, was used to detect the sample as bonafide .",
      " Yes.0727, was used to detect the sample as bonafide .",
      " Yes, MFCC-1, which a shap value of -0.0727, was used to detect the sample as Yes .",
      "Yes, LFCC-17, which a shap value of 0.809, was used to detect the sample as bonafide .  Yes, MFCC-1, which a shap value of -0.0727, was used to detect the sample as bonafide .",
      " Ye, MFCC-1, which a shap value of -0.0727, was used to detect the sample as bonafide .",
      "Yes, MFCC-1, which a shap value of -0.0727, was used to detect the sample as bonafide .  Yes, MFCC-1, which a shap value of -0.0727, was used to detect the sample as bonafide .",
      " Yes, which a shap value of -0.0727, was used to detect the sample as bonafide .",
      " Yes, MFCC-1, which a shap value of -0.0727, was used to detect the sample as bonafide ."
    ],
    "new_mr": "<inform> inform ( <response> response: [ Yes ], <interpreter> interpreter: [ shap ], <important> important: [ MFCC-1 ], <classification> classification: [ bonafide ], <shap_value> shap value: [ -0.0727 ]> )"
  },
  {
    "mr": "inform(interpreter[shap], important[LFCC-28], shap_value[-0.7853])",
    "ref": [
      " shap determined that the LFCC-28 feature was one of the more important features by assigning it a value of LFCC-28 .",
      "  determined that the LFCC-28 feature was one of the more important features by assigning it a value of -0.7853 .",
      "shap determined that the LFCC-28 feature was one of the more important features by assigning it a value of -0.7853 .  shap determined that the LFCC-28 feature was one of the more important features by assigning it a value of -0.7853 .",
      "the audio sample had LFCC features extracted and LFCC-54 was determined to have a large impact on the CNN model that determined the sample to be bonafide .  shap determined that the LFCC-28 feature was one of the more important features by assigning it a value of -0.7853 .",
      " LFCC-28 determined that the LFCC-28 feature was one of the more important features by assigning it a value of -0.7853 .",
      " shap determined that the L feature was one of the more important features by assigning it a value of -0.7853 .",
      "the audio sample had LFCC features extracted and LFCC-54 was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      " shap determined that the shap feature was one of the more important features by assigning it a value of -0.7853 .",
      " shap determined that the LFCC-28 feature was one of the more important features by assigning it a value of -0 .",
      " shap determined that the LFCC-28 feature was one of the more important features by assigning it a value of LFCC-28 .",
      " shap determined that the LFCC-28 feature was one of the more important features by assigning it a value of -0.7853 ."
    ],
    "new_mr": "<inform> inform ( <interpreter> interpreter: [ shap ], <important> important: [ LFCC-28 ], <shap_value> shap value: [ -0.7853 ]> )"
  },
  {
    "mr": "inform(response[yes], speaker_id[2], feature[MFCC-35], interpreter[shap], shap_value[0.4133])",
    "ref": [
      " Yes, person 2 was detected by M with a shap value of 0.4133 .",
      "Yes, person 2 was detected by MFCC-35 with a shap value of 0.4133 .  Yes, person 2 was detected by MFCC-35 with a shap value of 0.4133 .",
      "shap determined that the LFCC-22 feature was one of the more important features by assigning it a value of 0.8296 .",
      " Yes, person 2 was detected by MFCC-35 with a shap value of 0 .",
      " Yes, person  was detected by MFCC-35 with a shap value of 0.4133 .",
      " Yes, person shap was detected by MFCC-35 with a shap value of 0.4133 .",
      " Yes, person 2 was detected by MFCC-35 with a shap value of yes .",
      " Yes, person 2 was detected by 2 with a shap value of 0.4133 .",
      "shap determined that the LFCC-22 feature was one of the more important features by assigning it a value of 0.8296 .  Yes, person 2 was detected by MFCC-35 with a shap value of 0.4133 .",
      " Yes.4133 .",
      " Yes, person 2 was detected by MFCC-35 with a shap value of 0.4133 ."
    ],
    "new_mr": "<inform> inform ( <response> response: [ yes ], <speaker_id> speaker id: [ 2 ], <feature> feature: [ MFCC-35 ], <interpreter> interpreter: [ shap ], <shap_value> shap value: [ 0.4133 ]> )"
  },
  {
    "mr": "inform(interpreter[shap], important[MFCC-33], shap_value[-0.7065])",
    "ref": [
      " MFCC-33 determined that the MFCC-33 feature was one of the more important features by assigning it a value of -0.7065 .",
      " shap determined that the MFCC-33 feature was one of the more important features by assigning it a value of -0.70 .",
      " sh determined that the MFCC-33 feature was one of the more important features by assigning it a value of -0.7065 .",
      "Yes, LFCC-4, which a shap value of -0.069, was used to detect the sample as replayed .  shap determined that the MFCC-33 feature was one of the more important features by assigning it a value of -0.7065 .",
      " shap determined that the -0.7065 feature was one of the more important features by assigning it a value of -0.7065 .",
      " shap determined that the MFCC-33 feature was one of the more important features by assigning it a value of MFCC-33 .",
      " shap determined that the MFCC- feature was one of the more important features by assigning it a value of -0.7065 .",
      "Yes, LFCC-4, which a shap value of -0.069, was used to detect the sample as replayed .",
      "shap determined that the MFCC-33 feature was one of the more important features by assigning it a value of -0.7065 .  shap determined that the MFCC-33 feature was one of the more important features by assigning it a value of -0.7065 .",
      " MFCC-33 determined that the MFCC-33 feature was one of the more important features by assigning it a value of -0.7065 .",
      " shap determined that the MFCC-33 feature was one of the more important features by assigning it a value of -0.7065 ."
    ],
    "new_mr": "<inform> inform ( <interpreter> interpreter: [ shap ], <important> important: [ MFCC-33 ], <shap_value> shap value: [ -0.7065 ]> )"
  },
  {
    "mr": "inform(classification[bonafide], edit_type[none])",
    "ref": [
      "Yes, person 7 was detected by LFCC-18 with a shap value of 0.7479 .",
      "Detection will be difficult . Detection will be difficult .",
      "Yes, person 7 was detected by LFCC-18 with a shap value of 0.7479 . Detection will be difficult .",
      "Yes, person 7 was detected by LFCC-18 with a shap value of 0.7479 .",
      "Detection will be difficult . Detection will be difficult .",
      "Yes, person 7 was detected by LFCC-18 with a shap value of 0.7479 . Detection will be difficult .",
      "Yes, person 7 was detected by LFCC-18 with a shap value of 0.7479 .",
      "Detection will be difficult . Detection will be difficult .",
      "Yes, person 7 was detected by LFCC-18 with a shap value of 0.7479 . Detection will be difficult .",
      "Yes, person 7 was detected by LFCC-18 with a shap value of 0.7479 .",
      "Detection will be difficult ."
    ],
    "new_mr": "<inform> inform ( <classification> classification: [ bonafide ], <edit_type> edit type: [ none ]> )"
  },
  {
    "mr": "inform(speaker_id[5])",
    "ref": [
      "the audio sample had LFCC features extracted and LFCC-15 was determined to have a large impact on the CNN model that determined the sample to be replayed .",
      "person 5 spoke the audio sample .  person 5 spoke the audio sample .",
      " person  spoke the audio sample .",
      "the audio sample had LFCC features extracted and LFCC-15 was determined to have a large impact on the CNN model that determined the sample to be replayed .  person 5 spoke the audio sample .",
      "the audio sample had LFCC features extracted and LFCC-15 was determined to have a large impact on the CNN model that determined the sample to be replayed .",
      "person 5 spoke the audio sample .  person 5 spoke the audio sample .",
      " person  spoke the audio sample .",
      "the audio sample had LFCC features extracted and LFCC-15 was determined to have a large impact on the CNN model that determined the sample to be replayed .  person 5 spoke the audio sample .",
      "the audio sample had LFCC features extracted and LFCC-15 was determined to have a large impact on the CNN model that determined the sample to be replayed .",
      "person 5 spoke the audio sample .  person 5 spoke the audio sample .",
      " person 5 spoke the audio sample ."
    ],
    "new_mr": "<inform> inform ( <speaker_id> speaker id: [ 5 ]> )"
  },
  {
    "mr": "inform(extracted[MFCC], extracted[GTCC], model[SVM], speaker_id[3])",
    "ref": [
      " The audio sample had GTCC and MFCC features extracted and passed through a trained 3 which determined the id of speaker 3 .",
      " The audio sample had GTCC and GTCC features extracted and passed through a trained SVM which determined the id of speaker 3 .",
      " The audio sample had GTCC and MFCC features extracted and passed through a trained SVM which determined the id of speaker  .",
      "Yes, person 7 was detected by LFCC-14 with a shap value of -0.2405 .",
      " The audio sample had 3 and MFCC features extracted and passed through a trained SVM which determined the id of speaker 3 .",
      "Yes, person 7 was detected by LFCC-14 with a shap value of -0.2405 .  The audio sample had GTCC and MFCC features extracted and passed through a trained SVM which determined the id of speaker 3 .",
      "The audio sample had GTCC and MFCC features extracted and passed through a trained SVM which determined the id of speaker 3 .  The audio sample had GTCC and MFCC features extracted and passed through a trained SVM which determined the id of speaker 3 .",
      " The audio sample had GTCC and MFCC features extracted and passed through a trained  which determined the id of speaker 3 .",
      " The audio sample had GTCC and MFCC features extracted and passed through a trained SVM which determined the id of speaker MFCC .",
      " The audio sample had GTCC and MF features extracted and passed through a trained SVM which determined the id of speaker 3 .",
      " The audio sample had GTCC and MFCC features extracted and passed through a trained SVM which determined the id of speaker 3 ."
    ],
    "new_mr": "<inform> inform ( <extracted> extracted: [ MFCC ], <extracted> extracted: [ GTCC ], <model> model: [ SVM ], <speaker_id> speaker id: [ 3 ]> )"
  },
  {
    "mr": "inform(response[yes], speaker_id[4], feature[LFCC-26], interpreter[shap], shap_value[0.7394])",
    "ref": [
      " Yes, person 4 was detected by shap with a shap value of 0.7394 .",
      "The signal indicates voice cloning .",
      "The signal indicates voice cloning .  Yes, person 4 was detected by LFCC-26 with a shap value of 0.7394 .",
      " Yes, person 4 was detected by LFCC-2 with a shap value of 0.7394 .",
      "Yes, person 4 was detected by LFCC-26 with a shap value of 0.7394 .  Yes, person 4 was detected by LFCC-26 with a shap value of 0.7394 .",
      " Yes, person 4 was detected by LFCC-26 with a shap value of 0.739 .",
      " Yes, person  was detected by LFCC-26 with a shap value of 0.739 .",
      " Yes, person 4 was detected by LFCC-26 with a shap value of 4 .",
      " Yes.7394 .",
      " Yes, person 4 was detected by LFCC-26 with a sha value of 0.7394 .",
      " Yes, person 4 was detected by LFCC-26 with a shap value of 0.7394 ."
    ],
    "new_mr": "<inform> inform ( <response> response: [ yes ], <speaker_id> speaker id: [ 4 ], <feature> feature: [ LFCC-26 ], <interpreter> interpreter: [ shap ], <shap_value> shap value: [ 0.7394 ]> )"
  },
  {
    "mr": "inform(interpreter[shap], important[MFCC-34], shap_value[-0.2356])",
    "ref": [
      " shap determined that the MFCC-34 feature was one of the more important features by assigning it a value of -0.235 .",
      "shap determined that the MFCC-34 feature was one of the more important features by assigning it a value of -0.2356 .  shap determined that the MFCC-34 feature was one of the more important features by assigning it a value of -0.2356 .",
      " shap determined that the MFCC-34 feature was one of the more important features by assigning it a value of MFCC-34 .",
      "the audio sample had PSRCC features extracted and PSRCC-11 was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      " -0.2356 determined that the MFCC-34 feature was one of the more important features by assigning it a value of -0.2356 .",
      " sha determined that the MFCC-34 feature was one of the more important features by assigning it a value of -0.2356 .",
      "the audio sample had PSRCC features extracted and PSRCC-11 was determined to have a large impact on the CNN model that determined the sample to be bonafide .  shap determined that the MFCC-34 feature was one of the more important features by assigning it a value of -0.2356 .",
      " shap determined that the MFC feature was one of the more important features by assigning it a value of -0.2356 .",
      " shap determined that the -0.2356 feature was one of the more important features by assigning it a value of -0.2356 .",
      " shap determined that the MFCC-34 feature was one of the more important features by assigning it a value of -0.235 .",
      " shap determined that the MFCC-34 feature was one of the more important features by assigning it a value of -0.2356 ."
    ],
    "new_mr": "<inform> inform ( <interpreter> interpreter: [ shap ], <important> important: [ MFCC-34 ], <shap_value> shap value: [ -0.2356 ]> )"
  },
  {
    "mr": "inform(interpreter[shap], important[MFCC-6], shap_value[0.7385])",
    "ref": [
      " shap determined that the MFCC feature was one of the more important features by assigning it a value of 0.7385 .",
      " shap determined that the MFCC-6 feature was one of the more important features by assigning it a value of 0. .",
      "shap determined that the LFCC-37 feature was one of the more important features by assigning it a value of 0.4431 .  shap determined that the MFCC-6 feature was one of the more important features by assigning it a value of 0.7385 .",
      " shap determined that the MFCC-6 feature was one of the more important features by assigning it a value of shap .",
      " sh determined that the MFCC-6 feature was one of the more important features by assigning it a value of 0.7385 .",
      "shap determined that the LFCC-37 feature was one of the more important features by assigning it a value of 0.4431 .",
      "shap determined that the MFCC-6 feature was one of the more important features by assigning it a value of 0.7385 .  shap determined that the MFCC-6 feature was one of the more important features by assigning it a value of 0.7385 .",
      " shap determined that the 0.7385 feature was one of the more important features by assigning it a value of 0.7385 .",
      " 0.7385 determined that the MFCC-6 feature was one of the more important features by assigning it a value of 0.7385 .",
      " shap determined that the MFCC feature was one of the more important features by assigning it a value of 0.7385 .",
      " shap determined that the MFCC-6 feature was one of the more important features by assigning it a value of 0.7385 ."
    ],
    "new_mr": "<inform> inform ( <interpreter> interpreter: [ shap ], <important> important: [ MFCC-6 ], <shap_value> shap value: [ 0.7385 ]> )"
  },
  {
    "mr": "inform(response[Yes], interpreter[shap], important[LFCC-53], classification[replayed], shap_value[0.9557])",
    "ref": [
      "Yes, person 5 was detected by LFCC-46 with a shap value of -0.3294 .",
      " Yes, LFCC-53, was used to detect the sample as replayed .",
      "Yes, LFCC-53, which a shap value of 0.9557, was used to detect the sample as replayed .  Yes, LFCC-53, which a shap value of 0.9557, was used to detect the sample as replayed .",
      " Ye, LFCC-53, which a shap value of 0.9557, was used to detect the sample as replayed .",
      " Yes, LFCC-53, which a Yes value of 0.9557, was used to detect the sample as replayed .",
      " Yes.9557, was used to detect the sample as replayed .",
      "Yes, person 5 was detected by LFCC-46 with a shap value of -0.3294 .  Yes, LFCC-53, which a shap value of 0.9557, was used to detect the sample as replayed .",
      " Yes, LFCC-53, which a shap value of 0.9557.",
      " Yes, LFCC-53, which a shap value of 0.9557, was used to detect the sample as repla .",
      " Yes, LFCC-53, which a shap value of 0.9557, was used to detect the sample as 0.9557 .",
      " Yes, LFCC-53, which a shap value of 0.9557, was used to detect the sample as replayed ."
    ],
    "new_mr": "<inform> inform ( <response> response: [ Yes ], <interpreter> interpreter: [ shap ], <important> important: [ LFCC-53 ], <classification> classification: [ replayed ], <shap_value> shap value: [ 0.9557 ]> )"
  },
  {
    "mr": "inform(response[Yes], interpreter[shap], important[MSRCC-1], classification[bonafide], shap_value[-0.8637])",
    "ref": [
      " , MSRCC-1, which a shap value of -0.8637, was used to detect the sample as bonafide .",
      " Yes, MSRCC-1, which a MSRCC-1 value of -0.8637, was used to detect the sample as bonafide .",
      " Yes, MSRCC-1, which a shap value of -, was used to detect the sample as bonafide .",
      "The speech patterns show where the speaker is from .  Yes, MSRCC-1, which a shap value of -0.8637, was used to detect the sample as bonafide .",
      " Yes, M, which a shap value of -0.8637, was used to detect the sample as bonafide .",
      " Yes, MSRCC-1.8637, was used to detect the sample as bonafide .",
      " -0.8637, MSRCC-1, which a shap value of -0.8637, was used to detect the sample as bonafide .",
      "Yes, MSRCC-1, which a shap value of -0.8637, was used to detect the sample as bonafide .  Yes, MSRCC-1, which a shap value of -0.8637, was used to detect the sample as bonafide .",
      " Yes, MSRCC-1, which a shap value of -0.8637, was used to detect the sample as MSRCC-1 .",
      " Yes, MSRCC-1, which a shap value of -0.8637.",
      " Yes, MSRCC-1, which a shap value of -0.8637, was used to detect the sample as bonafide ."
    ],
    "new_mr": "<inform> inform ( <response> response: [ Yes ], <interpreter> interpreter: [ shap ], <important> important: [ MSRCC-1 ], <classification> classification: [ bonafide ], <shap_value> shap value: [ -0.8637 ]> )"
  },
  {
    "mr": "inform(response[yes], speaker_id[5], feature[LFCC-55], interpreter[shap], shap_value[-0.3326])",
    "ref": [
      " Yes, person shap was detected by LFCC-shapshap with a shap value of -0.3326 .",
      " Yes, person 5 was detected by LFCC-55 with a shap value of -0 .",
      " Yes, person 5 was detected by yes with a shap value of -0.3326 .",
      " Yes, person  was detected by LFCC- with a shap value of -0.3326 .",
      " Yes.3326 .",
      " Yes, person 5 was detected by LFCC-55 with a 5 value of -0.3326 .",
      "Yes, person 5 was detected by LFCC-55 with a shap value of -0.3326 .  Yes, person 5 was detected by LFCC-55 with a shap value of -0.3326 .",
      "Yes, PSRCC-6, which a shap value of -0.7884, was used to detect the id of speaker 4 for the audio sample .  Yes, person 5 was detected by LFCC-55 with a shap value of -0.3326 .",
      " Yes, person 5 was detected by LFCC-55 with a sha value of -0.3326 .",
      " Yes, person 5 was detected by LFCC with a shap value of -0.3326 .",
      " Yes, person 5 was detected by LFCC-55 with a shap value of -0.3326 ."
    ],
    "new_mr": "<inform> inform ( <response> response: [ yes ], <speaker_id> speaker id: [ 5 ], <feature> feature: [ LFCC-55 ], <interpreter> interpreter: [ shap ], <shap_value> shap value: [ -0.3326 ]> )"
  },
  {
    "mr": "inform(response[Yes], interpreter[shap], important[GTCC-12], classification[bonafide], shap_value[0])",
    "ref": [
      " Yes, GTCC-12, which a shap value of GTCC-12, was used to detect the sample as bonafide .",
      " Yes, GTCC-12.",
      " Yes, Yes, which a shap value of 0, was used to detect the sample as bonafide .",
      " Yes, which a shap value of 0, was used to detect the sample as bonafide .",
      " Yes, GTCC-12, which a shap value of , was used to detect the sample as bonafide .",
      "Yes, GTCC-12, which a shap value of 0, was used to detect the sample as bonafide .  Yes, GTCC-12, which a shap value of 0, was used to detect the sample as bonafide .",
      "Yes, LFCC-43, which a shap value of 0.4057, was used to detect the sample as replayed .  Yes, GTCC-12, which a shap value of 0, was used to detect the sample as bonafide .",
      "Yes, LFCC-43, which a shap value of 0.4057, was used to detect the sample as replayed .",
      " Yes, GTCC-12, which a bonafide value of 0, was used to detect the sample as bonafide .",
      " Yes, GTCC-12, which a shap value of 0.",
      " Yes, GTCC-12, which a shap value of 0, was used to detect the sample as bonafide ."
    ],
    "new_mr": "<inform> inform ( <response> response: [ Yes ], <interpreter> interpreter: [ shap ], <important> important: [ GTCC-12 ], <classification> classification: [ bonafide ], <shap_value> shap value: [ 0 ]> )"
  },
  {
    "mr": "inform(response[yes], speaker_id[3], feature[MFCC-16], interpreter[shap], shap_value[0.0302])",
    "ref": [
      " Yes, person 3 was detected by MFCC-16 with a 0.0302 value of 0.0302 .",
      " Yes, person  was detected by MFCC-16 with a shap value of 0.002 .",
      " Yes, person 3 was detected by MFCC-16 with a shap value of  .",
      " Yes, person 3 was detected by  with a shap value of 0.0302 .",
      " Yes, person 3 was detected by 0.0302 with a shap value of 0.0302 .",
      "The next microphone starts at 10 seconds .  Yes, person 3 was detected by MFCC-16 with a shap value of 0.0302 .",
      "Yes, person 3 was detected by MFCC-16 with a shap value of 0.0302 .  Yes, person 3 was detected by MFCC-16 with a shap value of 0.0302 .",
      " Yes, person 3 was detected by MFCC-16 with a  value of 0.0302 .",
      "The next microphone starts at 10 seconds .",
      " Yes, person MFCC-16 was detected by MFCC-16 with a shap value of 0.0MFCC-1602 .",
      " Yes, person 3 was detected by MFCC-16 with a shap value of 0.0302 ."
    ],
    "new_mr": "<inform> inform ( <response> response: [ yes ], <speaker_id> speaker id: [ 3 ], <feature> feature: [ MFCC-16 ], <interpreter> interpreter: [ shap ], <shap_value> shap value: [ 0.0302 ]> )"
  },
  {
    "mr": "inform(classification[spoof], edit_type[speed], change_at[2])",
    "ref": [
      "the audio sample was used in a SVM model tasked at detecting speaker id, determined to be 6 . Two different speeds were detected .",
      "Two different spoofs were detected .",
      "the audio sample was used in a SVM model tasked at detecting speaker id, determined to be 6 .",
      "Two different speeds were detected . Two different speeds were detected .",
      "Two different ss were detected .",
      "the audio sample was used in a SVM model tasked at detecting speaker id, determined to be 6 . Two different speeds were detected .",
      "Two different spoofs were detected .",
      "the audio sample was used in a SVM model tasked at detecting speaker id, determined to be 6 .",
      "Two different speeds were detected . Two different speeds were detected .",
      "Two different ss were detected .",
      "Two different speeds were detected ."
    ],
    "new_mr": "<inform> inform ( <classification> classification: [ spoof ], <edit_type> edit type: [ speed ], <change_at> change at: [ 2 ]> )"
  },
  {
    "mr": "inform(response[yes], speaker_id[7], feature[MFCC-28], interpreter[shap], shap_value[-0.5786])",
    "ref": [
      "Yes, MFCC-28, which a shap value of -0.5786, was used to detect the id of speaker 7 for the audio sample .  Yes, MFCC-28, which a shap value of -0.5786, was used to detect the id of speaker 7 for the audio sample .",
      " Yes, MFCC-2, which a shap value of -0.5786, was used to detect the id of speaker 7 for the audio sample .",
      " Yes, MFCC-28, was used to detect the id of speaker 7 for the audio sample .",
      " Yes, MFCC-28, which a shap value of shap, was used to detect the id of speaker 7 for the audio sample .",
      " Yes, shap, which a shap value of -0.5786, was used to detect the id of speaker 7 for the audio sample .",
      "The recording file was classified as being converted by a CNN model .",
      " Yes.5786, was used to detect the id of speaker 7 for the audio sample .",
      " Yes, which a shap value of -0.5786, was used to detect the id of speaker 7 for the audio sample .",
      "The recording file was classified as being converted by a CNN model .  Yes, MFCC-28, which a shap value of -0.5786, was used to detect the id of speaker 7 for the audio sample .",
      " Yes, MFCC-28, which a shap value of -0.5786.",
      " Yes, MFCC-28, which a shap value of -0.5786, was used to detect the id of speaker 7 for the audio sample ."
    ],
    "new_mr": "<inform> inform ( <response> response: [ yes ], <speaker_id> speaker id: [ 7 ], <feature> feature: [ MFCC-28 ], <interpreter> interpreter: [ shap ], <shap_value> shap value: [ -0.5786 ]> )"
  },
  {
    "mr": "inform(response[Yes], interpreter[shap], important[MFCC-19], classification[bonafide], shap_value[0.4159])",
    "ref": [
      " Yes, MFCC-19, which a  value of 0.4159, was used to detect the sample as bonafide .",
      " Yes, MFCC-19, which a shap value of 0.4159, was used to detect the sample as Yes .",
      " Yes, MFCC-19, which a shap value of MFCC-19, was used to detect the sample as bonafide .",
      " Yes, MFCC-19, which a Yes value of 0.4159, was used to detect the sample as bonafide .",
      " Yes, MFCC-19, which a shap value of 0.4159.",
      " bonafide, MFCC-19, which a shap value of 0.4159, was used to detect the sample as bonafide .",
      " Yes, MFCC-19, which a shap value of 0.4, was used to detect the sample as bonafide .",
      " Ye, MFCC-19, which a shap value of 0.4159, was used to detect the sample as bonafide .",
      "The audio is not spoofed ?",
      "The audio is not spoofed ?  Yes, MFCC-19, which a shap value of 0.4159, was used to detect the sample as bonafide .",
      " Yes, MFCC-19, which a shap value of 0.4159, was used to detect the sample as bonafide ."
    ],
    "new_mr": "<inform> inform ( <response> response: [ Yes ], <interpreter> interpreter: [ shap ], <important> important: [ MFCC-19 ], <classification> classification: [ bonafide ], <shap_value> shap value: [ 0.4159 ]> )"
  },
  {
    "mr": "inform(response[yes], speaker_id[5], feature[GTCC-12], interpreter[shap], shap_value[0])",
    "ref": [
      " Yes, GTCC-12, which a  value of 0, was used to detect the id of speaker 5 for the audio sample .",
      " Yes, shap, which a shap value of 0, was used to detect the id of speaker 5 for the audio sample .",
      " Yes, GTCC-12, which a shap value of , was used to detect the id of speaker 5 for the audio sample .",
      " Yes, GTCC-12, which a shap value of 0.",
      " Yes, GTCC-12, was used to detect the id of speaker 5 for the audio sample .",
      " Yes, GTCC-12, which a yes value of 0, was used to detect the id of speaker 5 for the audio sample .",
      "the audio sample had MFCC features extracted and MFCC-11 was determined to have a large impact on the CNN model that determined the sample to be bonafide .",
      " Yes, GTCC-12.",
      "Yes, GTCC-12, which a shap value of 0, was used to detect the id of speaker 5 for the audio sample .  Yes, GTCC-12, which a shap value of 0, was used to detect the id of speaker 5 for the audio sample .",
      "the audio sample had MFCC features extracted and MFCC-11 was determined to have a large impact on the CNN model that determined the sample to be bonafide .  Yes, GTCC-12, which a shap value of 0, was used to detect the id of speaker 5 for the audio sample .",
      " Yes, GTCC-12, which a shap value of 0, was used to detect the id of speaker 5 for the audio sample ."
    ],
    "new_mr": "<inform> inform ( <response> response: [ yes ], <speaker_id> speaker id: [ 5 ], <feature> feature: [ GTCC-12 ], <interpreter> interpreter: [ shap ], <shap_value> shap value: [ 0 ]> )"
  },
  {
    "mr": "inform(interpreter[shap], important[LFCC-58], shap_value[0.1639])",
    "ref": [
      " shap determined that the LFCC-58 feature was one of the more important features by assigning it a value of 0.1 .",
      " shap determined that the LFCC-58 feature was one of the more important features by assigning it a value of LFCC-58 .",
      " shap determined that the LFCC- feature was one of the more important features by assigning it a value of 0.1639 .",
      " shap determined that the 0.1639 feature was one of the more important features by assigning it a value of 0.1639 .",
      "Yes, person 6 was detected by GTCC-5 with a shap value of 0 .  shap determined that the LFCC-58 feature was one of the more important features by assigning it a value of 0.1639 .",
      "shap determined that the LFCC-58 feature was one of the more important features by assigning it a value of 0.1639 .  shap determined that the LFCC-58 feature was one of the more important features by assigning it a value of 0.1639 .",
      "Yes, person 6 was detected by GTCC-5 with a shap value of 0 .",
      " s determined that the LFCC-58 feature was one of the more important features by assigning it a value of 0.1639 .",
      " LFCC-58 determined that the LFCC-58 feature was one of the more important features by assigning it a value of 0.1639 .",
      " shap determined that the LFCC-58 feature was one of the more important features by assigning it a value of 0.1 .",
      " shap determined that the LFCC-58 feature was one of the more important features by assigning it a value of 0.1639 ."
    ],
    "new_mr": "<inform> inform ( <interpreter> interpreter: [ shap ], <important> important: [ LFCC-58 ], <shap_value> shap value: [ 0.1639 ]> )"
  }
]